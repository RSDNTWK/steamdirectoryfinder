// This file is automatically generated.

using System;
using System.Runtime.InteropServices;

namespace Steam4Net
{
    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    public class SteamApps003VTable
    {
        public IntPtr BIsSubscribed0;
        public IntPtr BIsLowViolence1;
        public IntPtr BIsCybercafe2;
        public IntPtr BIsVACBanned3;
        public IntPtr GetCurrentGameLanguage4;
        public IntPtr GetAvailableGameLanguages5;
        public IntPtr BIsSubscribedApp6;
        public IntPtr BIsDlcInstalled7;
        private IntPtr DTorISteamApps0038;
    };

    [InteropHelp.InterfaceVersionAttribute("STEAMAPPS_INTERFACE_VERSION003")]
    public class SteamApps003 : InteropHelp.NativeWrapper<SteamApps003VTable>
    {
        public bool BIsSubscribed()
        {
            return GetFunction<NativeBIsSubscribed>(Functions.BIsSubscribed0)(ObjectAddress);
        }

        public bool BIsLowViolence()
        {
            return GetFunction<NativeBIsLowViolence>(Functions.BIsLowViolence1)(ObjectAddress);
        }

        public bool BIsCybercafe()
        {
            return GetFunction<NativeBIsCybercafe>(Functions.BIsCybercafe2)(ObjectAddress);
        }

        public bool BisVacBanned()
        {
            return GetFunction<NativeBisVacBanned>(Functions.BIsVACBanned3)(ObjectAddress);
        }

        public string GetCurrentGameLanguage()
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetCurrentGameLanguage>(Functions.GetCurrentGameLanguage4)(ObjectAddress)));
        }

        public string GetAvailableGameLanguages()
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetAvailableGameLanguages>(Functions.GetAvailableGameLanguages5)(ObjectAddress)));
        }

        public bool BIsSubscribedApp(uint nAppId)
        {
            return GetFunction<NativeBIsSubscribedAppU>(Functions.BIsSubscribedApp6)(ObjectAddress, nAppId);
        }

        public bool BIsDlcInstalled(uint nAppId)
        {
            return GetFunction<NativeBIsDlcInstalledU>(Functions.BIsDlcInstalled7)(ObjectAddress, nAppId);
        }

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsSubscribed(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsLowViolence(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsCybercafe(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBisVacBanned(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetCurrentGameLanguage(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetAvailableGameLanguages(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsSubscribedAppU(IntPtr thisptr, uint nAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsDlcInstalledU(IntPtr thisptr, uint nAppId);
    };
}