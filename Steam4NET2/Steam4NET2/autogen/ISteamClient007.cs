// This file is automatically generated.

using System;
using System.Runtime.InteropServices;

namespace Steam4Net
{
    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    public class SteamClient007VTable
    {
        public IntPtr CreateSteamPipe0;
        public IntPtr BReleaseSteamPipe1;
        public IntPtr ConnectToGlobalUser2;
        public IntPtr CreateLocalUser3;
        public IntPtr ReleaseUser4;
        public IntPtr GetISteamUser5;
        public IntPtr GetISteamGameServer6;
        public IntPtr SetLocalIPBinding7;
        public IntPtr GetISteamFriends8;
        public IntPtr GetISteamUtils9;
        public IntPtr GetISteamMatchmaking10;
        public IntPtr GetISteamContentServer11;
        public IntPtr GetISteamMasterServerUpdater12;
        public IntPtr GetISteamMatchmakingServers13;
        public IntPtr GetISteamGenericInterface14;
        public IntPtr RunFrame15;
        public IntPtr GetIPCCallCount16;
        public IntPtr GetISteamUserStats17;
        public IntPtr GetISteamApps18;
        public IntPtr GetISteamNetworking19;
        public IntPtr SetWarningMessageHook20;
        public IntPtr GetISteamRemoteStorage21;
        private IntPtr DTorISteamClient00722;
    };

    [InteropHelp.InterfaceVersionAttribute("SteamClient007")]
    public class SteamClient007 : InteropHelp.NativeWrapper<SteamClient007VTable>
    {
        public int CreateSteamPipe()
        {
            return GetFunction<NativeCreateSteamPipe>(Functions.CreateSteamPipe0)(ObjectAddress);
        }

        public bool BReleaseSteamPipe(int hSteamPipe)
        {
            return GetFunction<NativeBReleaseSteamPipeI>(Functions.BReleaseSteamPipe1)(ObjectAddress, hSteamPipe);
        }

        public int ConnectToGlobalUser(int hSteamPipe)
        {
            return GetFunction<NativeConnectToGlobalUserI>(Functions.ConnectToGlobalUser2)(ObjectAddress, hSteamPipe);
        }

        public int CreateLocalUser(ref int phSteamPipe)
        {
            return GetFunction<NativeCreateLocalUserI>(Functions.CreateLocalUser3)(ObjectAddress, ref phSteamPipe);
        }

        public void ReleaseUser(int hSteamPipe, int hUser)
        {
            GetFunction<NativeReleaseUserIi>(Functions.ReleaseUser4)(ObjectAddress, hSteamPipe, hUser);
        }

        public TClass GetISteamUser<TClass>(int hSteamUser, int hSteamPipe)
            where TClass : InteropHelp.INativeWrapper, new()
        {
            return
                InteropHelp.CastInterface<TClass>(
                    GetFunction<NativeGetISteamUserIis>(Functions.GetISteamUser5)(ObjectAddress, hSteamUser, hSteamPipe,
                        InterfaceVersions.GetInterfaceIdentifier(typeof(TClass))));
        }

        public TClass GetISteamGameServer<TClass>(int hSteamUser, int hSteamPipe)
            where TClass : InteropHelp.INativeWrapper, new()
        {
            return
                InteropHelp.CastInterface<TClass>(
                    GetFunction<NativeGetISteamGameServerIis>(Functions.GetISteamGameServer6)(ObjectAddress, hSteamUser,
                        hSteamPipe, InterfaceVersions.GetInterfaceIdentifier(typeof(TClass))));
        }

        public void SetLocalIpBinding(uint unIp, ushort usPort)
        {
            GetFunction<NativeSetLocalIpBindingUu>(Functions.SetLocalIPBinding7)(ObjectAddress, unIp, usPort);
        }

        public TClass GetISteamFriends<TClass>(int hSteamUser, int hSteamPipe)
            where TClass : InteropHelp.INativeWrapper, new()
        {
            return
                InteropHelp.CastInterface<TClass>(
                    GetFunction<NativeGetISteamFriendsIis>(Functions.GetISteamFriends8)(ObjectAddress, hSteamUser,
                        hSteamPipe, InterfaceVersions.GetInterfaceIdentifier(typeof(TClass))));
        }

        public TClass GetISteamUtils<TClass>(int hSteamPipe) where TClass : InteropHelp.INativeWrapper, new()
        {
            return
                InteropHelp.CastInterface<TClass>(
                    GetFunction<NativeGetISteamUtilsIs>(Functions.GetISteamUtils9)(ObjectAddress, hSteamPipe,
                        InterfaceVersions.GetInterfaceIdentifier(typeof(TClass))));
        }

        public TClass GetISteamMatchmaking<TClass>(int hSteamUser, int hSteamPipe)
            where TClass : InteropHelp.INativeWrapper, new()
        {
            return
                InteropHelp.CastInterface<TClass>(
                    GetFunction<NativeGetISteamMatchmakingIis>(Functions.GetISteamMatchmaking10)(ObjectAddress,
                        hSteamUser, hSteamPipe, InterfaceVersions.GetInterfaceIdentifier(typeof(TClass))));
        }

        public TClass GetISteamContentServer<TClass>(int hSteamUser, int hSteamPipe)
            where TClass : InteropHelp.INativeWrapper, new()
        {
            return
                InteropHelp.CastInterface<TClass>(
                    GetFunction<NativeGetISteamContentServerIis>(Functions.GetISteamContentServer11)(ObjectAddress,
                        hSteamUser, hSteamPipe, InterfaceVersions.GetInterfaceIdentifier(typeof(TClass))));
        }

        public TClass GetISteamMasterServerUpdater<TClass>(int hSteamUser, int hSteamPipe)
            where TClass : InteropHelp.INativeWrapper, new()
        {
            return
                InteropHelp.CastInterface<TClass>(
                    GetFunction<NativeGetISteamMasterServerUpdaterIis>(Functions.GetISteamMasterServerUpdater12)(
                        ObjectAddress, hSteamUser, hSteamPipe, InterfaceVersions.GetInterfaceIdentifier(typeof(TClass))));
        }

        public TClass GetISteamMatchmakingServers<TClass>(int hSteamUser, int hSteamPipe)
            where TClass : InteropHelp.INativeWrapper, new()
        {
            return
                InteropHelp.CastInterface<TClass>(
                    GetFunction<NativeGetISteamMatchmakingServersIis>(Functions.GetISteamMatchmakingServers13)(
                        ObjectAddress, hSteamUser, hSteamPipe, InterfaceVersions.GetInterfaceIdentifier(typeof(TClass))));
        }

        public TClass GetISteamGenericInterface<TClass>(int hSteamUser, int hSteamPipe)
            where TClass : InteropHelp.INativeWrapper, new()
        {
            return
                InteropHelp.CastInterface<TClass>(
                    GetFunction<NativeGetISteamGenericInterfaceIis>(Functions.GetISteamGenericInterface14)(
                        ObjectAddress, hSteamUser, hSteamPipe, InterfaceVersions.GetInterfaceIdentifier(typeof(TClass))));
        }

        public void RunFrame()
        {
            GetFunction<NativeRunFrame>(Functions.RunFrame15)(ObjectAddress);
        }

        public uint GetIpcCallCount()
        {
            return GetFunction<NativeGetIpcCallCount>(Functions.GetIPCCallCount16)(ObjectAddress);
        }

        public TClass GetISteamUserStats<TClass>(int hSteamUser, int hSteamPipe)
            where TClass : InteropHelp.INativeWrapper, new()
        {
            return
                InteropHelp.CastInterface<TClass>(
                    GetFunction<NativeGetISteamUserStatsIis>(Functions.GetISteamUserStats17)(ObjectAddress, hSteamUser,
                        hSteamPipe, InterfaceVersions.GetInterfaceIdentifier(typeof(TClass))));
        }

        public TClass GetISteamApps<TClass>(int hSteamUser, int hSteamPipe)
            where TClass : InteropHelp.INativeWrapper, new()
        {
            return
                InteropHelp.CastInterface<TClass>(
                    GetFunction<NativeGetISteamAppsIis>(Functions.GetISteamApps18)(ObjectAddress, hSteamUser, hSteamPipe,
                        InterfaceVersions.GetInterfaceIdentifier(typeof(TClass))));
        }

        public TClass GetISteamNetworking<TClass>(int hSteamUser, int hSteamPipe)
            where TClass : InteropHelp.INativeWrapper, new()
        {
            return
                InteropHelp.CastInterface<TClass>(
                    GetFunction<NativeGetISteamNetworkingIis>(Functions.GetISteamNetworking19)(ObjectAddress, hSteamUser,
                        hSteamPipe, InterfaceVersions.GetInterfaceIdentifier(typeof(TClass))));
        }

        public void SetWarningMessageHook(ref IntPtr pFunction)
        {
            GetFunction<NativeSetWarningMessageHookI>(Functions.SetWarningMessageHook20)(ObjectAddress, ref pFunction);
        }

        public TClass GetISteamRemoteStorage<TClass>(int hSteamuser, int hSteamPipe)
            where TClass : InteropHelp.INativeWrapper, new()
        {
            return
                InteropHelp.CastInterface<TClass>(
                    GetFunction<NativeGetISteamRemoteStorageIis>(Functions.GetISteamRemoteStorage21)(ObjectAddress,
                        hSteamuser, hSteamPipe, InterfaceVersions.GetInterfaceIdentifier(typeof(TClass))));
        }

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeCreateSteamPipe(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBReleaseSteamPipeI(IntPtr thisptr, int hSteamPipe);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeConnectToGlobalUserI(IntPtr thisptr, int hSteamPipe);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeCreateLocalUserI(IntPtr thisptr, ref int phSteamPipe);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeReleaseUserIi(IntPtr thisptr, int hSteamPipe, int hUser);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetISteamUserIis(IntPtr thisptr, int hSteamUser, int hSteamPipe, string pchVersion
            );

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetISteamGameServerIis(
            IntPtr thisptr, int hSteamUser, int hSteamPipe, string pchVersion);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetLocalIpBindingUu(IntPtr thisptr, uint unIp, ushort usPort);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetISteamFriendsIis(
            IntPtr thisptr, int hSteamUser, int hSteamPipe, string pchVersion);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetISteamUtilsIs(IntPtr thisptr, int hSteamPipe, string pchVersion);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetISteamMatchmakingIis(
            IntPtr thisptr, int hSteamUser, int hSteamPipe, string pchVersion);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetISteamContentServerIis(
            IntPtr thisptr, int hSteamUser, int hSteamPipe, string pchVersion);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetISteamMasterServerUpdaterIis(
            IntPtr thisptr, int hSteamUser, int hSteamPipe, string pchVersion);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetISteamMatchmakingServersIis(
            IntPtr thisptr, int hSteamUser, int hSteamPipe, string pchVersion);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetISteamGenericInterfaceIis(
            IntPtr thisptr, int hSteamUser, int hSteamPipe, string pchVersion);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeRunFrame(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetIpcCallCount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetISteamUserStatsIis(
            IntPtr thisptr, int hSteamUser, int hSteamPipe, string pchVersion);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetISteamAppsIis(IntPtr thisptr, int hSteamUser, int hSteamPipe, string pchVersion
            );

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetISteamNetworkingIis(
            IntPtr thisptr, int hSteamUser, int hSteamPipe, string pchVersion);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetWarningMessageHookI(IntPtr thisptr, ref IntPtr pFunction);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetISteamRemoteStorageIis(
            IntPtr thisptr, int hSteamuser, int hSteamPipe, string pchVersion);
    };
}