// This file is automatically generated.

using System;
using System.Runtime.InteropServices;
using System.Text;

namespace Steam4Net
{
    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    public class ClientAppManagerVTable
    {
        public IntPtr InstallApp0;
        public IntPtr ConvertFromSteam21;
        public IntPtr UninstallApp2;
        public IntPtr LaunchApp3;
        public IntPtr ShutdownApp4;
        public IntPtr GetAppInstallState5;
        public IntPtr GetAppBuildID6;
        public IntPtr GetAppSizeOnDisk7;
        public IntPtr GetAppInstallDir8;
        public IntPtr IsAppDlcInstalled9;
        public IntPtr GetNumInstalledApps10;
        public IntPtr GetInstalledApps11;
        public IntPtr GetAppDependency12;
        public IntPtr GetDependentApps13;
        public IntPtr GetUpdateInfo14;
        public IntPtr SetContentLocked15;
        public IntPtr SetAppConfig16;
        public IntPtr GetAppConfigValue17;
        public IntPtr SetAppConfigValue18;
        public IntPtr BIsAppUpToDate19;
        public IntPtr GetAvailableLaunchOptions20;
        public IntPtr GetAvailableLanguages21;
        public IntPtr StartValidatingApp22;
        public IntPtr MarkContentCorrupt23;
        public IntPtr GetInstalledDepots24;
        public IntPtr BCacheBetaPassword25;
        public IntPtr BRequestBetaPasswords26;
        public IntPtr BIsCachedBetaPasswordValid27;
        public IntPtr SetDownloadingEnabled28;
        public IntPtr BIsDownloadingEnabled29;
        public IntPtr GetDownloadStats30;
        public IntPtr GetDownloadingAppID31;
        public IntPtr ChangeAppPriority32;
        public IntPtr BHasLocalContentServer33;
        public IntPtr BuildBackup34;
        public IntPtr BuildInstaller35;
        public IntPtr CancelBackup36;
        public IntPtr RestoreApp37;
        public IntPtr BNeedsFile38;
        public IntPtr BAddFileOnDisk39;
        public IntPtr FinishAddingFiles40;
        public IntPtr GetAppStateInfo41;
        public IntPtr GetNumInstallBaseFolders42;
        public IntPtr GetInstallBaseFolder43;
        public IntPtr AddInstallBaseFolder44;
        public IntPtr RemoveInstallBaseFolder45;
        public IntPtr GetFreeDiskSpace46;
        public IntPtr GetAppInstallBaseFolder47;
        public IntPtr ForceInstallDirOverride48;
        public IntPtr SetDownloadThrottleRateKbps49;
        public IntPtr GetDownloadThrottleRateKbps50;
        public IntPtr SuspendDownloadThrottling51;
        public IntPtr GetAppOwner52;
        private IntPtr DTorIClientAppManager53;
    };

    [InteropHelp.InterfaceVersionAttribute("CLIENTAPPMANAGER_INTERFACE_VERSION001")]
    public class ClientAppManager : InteropHelp.NativeWrapper<ClientAppManagerVTable>
    {
        public EAppUpdateError InstallApp(uint unAppId, string cszAppDir, int iBaseFolder, bool bLegacy)
        {
            return GetFunction<NativeInstallAppUsib>(Functions.InstallApp0)(ObjectAddress, unAppId, cszAppDir,
                iBaseFolder, bLegacy);
        }

        public EAppUpdateError ConvertFromSteam2(uint unAppId, string cszPath)
        {
            return GetFunction<NativeConvertFromSteam2Us>(Functions.ConvertFromSteam21)(ObjectAddress, unAppId, cszPath);
        }

        public EAppUpdateError UninstallApp(uint unAppId, bool bComplete)
        {
            return GetFunction<NativeUninstallAppUb>(Functions.UninstallApp2)(ObjectAddress, unAppId, bComplete);
        }

        public EAppUpdateError LaunchApp(uint unAppId, uint uLaunchOption, string pszUserArgs)
        {
            return GetFunction<NativeLaunchAppUus>(Functions.LaunchApp3)(ObjectAddress, unAppId, uLaunchOption,
                pszUserArgs);
        }

        public bool ShutdownApp(uint unAppId, bool bForce)
        {
            return GetFunction<NativeShutdownAppUb>(Functions.ShutdownApp4)(ObjectAddress, unAppId, bForce);
        }

        public EAppState GetAppInstallState(uint unAppId)
        {
            return GetFunction<NativeGetAppInstallStateU>(Functions.GetAppInstallState5)(ObjectAddress, unAppId);
        }

        public uint GetAppBuildId(uint unAppId)
        {
            return GetFunction<NativeGetAppBuildIdu>(Functions.GetAppBuildID6)(ObjectAddress, unAppId);
        }

        public bool GetAppSizeOnDisk(uint unAppId, ref ulong pullAppSize, ref ulong pullUnk)
        {
            return GetFunction<NativeGetAppSizeOnDiskUuu>(Functions.GetAppSizeOnDisk7)(ObjectAddress, unAppId,
                ref pullAppSize, ref pullUnk);
        }

        public uint GetAppInstallDir(uint unAppId, StringBuilder pchPath)
        {
            return GetFunction<NativeGetAppInstallDirUsu>(Functions.GetAppInstallDir8)(ObjectAddress, unAppId, pchPath,
                (uint)pchPath.Capacity);
        }

        public bool IsAppDlcInstalled(uint unAppId, uint unDlcAppId)
        {
            return GetFunction<NativeIsAppDlcInstalledUu>(Functions.IsAppDlcInstalled9)(ObjectAddress, unAppId,
                unDlcAppId);
        }

        public uint GetNumInstalledApps()
        {
            return GetFunction<NativeGetNumInstalledApps>(Functions.GetNumInstalledApps10)(ObjectAddress);
        }

        public uint GetInstalledApps(ref uint punAppIDs, uint cAppIDsMax)
        {
            return GetFunction<NativeGetInstalledAppsUu>(Functions.GetInstalledApps11)(ObjectAddress, ref punAppIDs,
                cAppIDsMax);
        }

        public uint GetAppDependency(uint unAppId)
        {
            return GetFunction<NativeGetAppDependencyU>(Functions.GetAppDependency12)(ObjectAddress, unAppId);
        }

        public uint GetDependentApps(uint unAppId, ref uint punAppIDs, int cAppIDsMax)
        {
            return GetFunction<NativeGetDependentAppsUui>(Functions.GetDependentApps13)(ObjectAddress, unAppId,
                ref punAppIDs, cAppIDsMax);
        }

        public uint GetUpdateInfo(uint unAppId, ref AppUpdateInfoS pUpdateInfo)
        {
            return GetFunction<NativeGetUpdateInfoUa>(Functions.GetUpdateInfo14)(ObjectAddress, unAppId, ref pUpdateInfo);
        }

        public bool SetContentLocked(uint unAppId, bool bLockContent)
        {
            return GetFunction<NativeSetContentLockedUb>(Functions.SetContentLocked15)(ObjectAddress, unAppId,
                bLockContent);
        }

        public bool SetAppConfig(uint unAppId, byte[] pchBuffer, bool bSharedKvSymbols)
        {
            return GetFunction<NativeSetAppConfigUbib>(Functions.SetAppConfig16)(ObjectAddress, unAppId, pchBuffer,
                pchBuffer.Length, bSharedKvSymbols);
        }

        public int GetAppConfigValue(uint unAppId, string pchKey, StringBuilder pchValue)
        {
            return GetFunction<NativeGetAppConfigValueUssi>(Functions.GetAppConfigValue17)(ObjectAddress, unAppId,
                pchKey, pchValue, pchValue.Capacity);
        }

        public bool SetAppConfigValue(uint unAppId, string pchKey, string pchValue)
        {
            return GetFunction<NativeSetAppConfigValueUss>(Functions.SetAppConfigValue18)(ObjectAddress, unAppId, pchKey,
                pchValue);
        }

        public bool BIsAppUpToDate(uint unAppId)
        {
            return GetFunction<NativeBIsAppUpToDateU>(Functions.BIsAppUpToDate19)(ObjectAddress, unAppId);
        }

        public uint GetAvailableLaunchOptions(uint unAppId, ref uint puOptions, uint cuOptionsMax)
        {
            return GetFunction<NativeGetAvailableLaunchOptionsUuu>(Functions.GetAvailableLaunchOptions20)(
                ObjectAddress, unAppId, ref puOptions, cuOptionsMax);
        }

        public uint GetAvailableLanguages(uint unAppId, bool arg1, StringBuilder pchLanguages)
        {
            return GetFunction<NativeGetAvailableLanguagesUbsu>(Functions.GetAvailableLanguages21)(ObjectAddress,
                unAppId, arg1, pchLanguages, (uint)pchLanguages.Capacity);
        }

        public bool StartValidatingApp(uint unAppId)
        {
            return GetFunction<NativeStartValidatingAppU>(Functions.StartValidatingApp22)(ObjectAddress, unAppId);
        }

        public bool MarkContentCorrupt(uint unAppId, bool bCorrupt)
        {
            return GetFunction<NativeMarkContentCorruptUb>(Functions.MarkContentCorrupt23)(ObjectAddress, unAppId,
                bCorrupt);
        }

        public uint GetInstalledDepots(uint unAppId, ref uint puDepots, uint cuDepotsMax)
        {
            return GetFunction<NativeGetInstalledDepotsUuu>(Functions.GetInstalledDepots24)(ObjectAddress, unAppId,
                ref puDepots, cuDepotsMax);
        }

        public bool BCacheBetaPassword(uint unAppId, string cszBetaKey, string cszBetaPassword)
        {
            return GetFunction<NativeBCacheBetaPasswordUss>(Functions.BCacheBetaPassword25)(ObjectAddress, unAppId,
                cszBetaKey, cszBetaPassword);
        }

        public bool BRequestBetaPasswords(uint unAppId)
        {
            return GetFunction<NativeBRequestBetaPasswordsU>(Functions.BRequestBetaPasswords26)(ObjectAddress, unAppId);
        }

        public bool BIsCachedBetaPasswordValid(uint unAppId, string cszBetaKey)
        {
            return GetFunction<NativeBIsCachedBetaPasswordValidUs>(Functions.BIsCachedBetaPasswordValid27)(
                ObjectAddress, unAppId, cszBetaKey);
        }

        public bool SetDownloadingEnabled(bool bState)
        {
            return GetFunction<NativeSetDownloadingEnabledB>(Functions.SetDownloadingEnabled28)(ObjectAddress, bState);
        }

        public bool BIsDownloadingEnabled()
        {
            return GetFunction<NativeBIsDownloadingEnabled>(Functions.BIsDownloadingEnabled29)(ObjectAddress);
        }

        public bool GetDownloadStats(ref DownloadStatsS pDownloadStats)
        {
            return GetFunction<NativeGetDownloadStatsD>(Functions.GetDownloadStats30)(ObjectAddress, ref pDownloadStats);
        }

        public uint GetDownloadingAppId()
        {
            return GetFunction<NativeGetDownloadingAppId>(Functions.GetDownloadingAppID31)(ObjectAddress);
        }

        public bool ChangeAppPriority(uint unAppId, EAppDownloadPriority ePriority)
        {
            return GetFunction<NativeChangeAppPriorityUe>(Functions.ChangeAppPriority32)(ObjectAddress, unAppId,
                ePriority);
        }

        public bool BHasLocalContentServer()
        {
            return GetFunction<NativeBHasLocalContentServer>(Functions.BHasLocalContentServer33)(ObjectAddress);
        }

        public bool BuildBackup(uint unAppId, ulong ullMaxFileSize, string cszBackupPath)
        {
            return GetFunction<NativeBuildBackupUus>(Functions.BuildBackup34)(ObjectAddress, unAppId, ullMaxFileSize,
                cszBackupPath);
        }

        public bool BuildInstaller(string cszProjectFile, string cszBackupPath, string arg2)
        {
            return GetFunction<NativeBuildInstallerSss>(Functions.BuildInstaller35)(ObjectAddress, cszProjectFile,
                cszBackupPath, arg2);
        }

        public bool CancelBackup()
        {
            return GetFunction<NativeCancelBackup>(Functions.CancelBackup36)(ObjectAddress);
        }

        public EAppUpdateError RestoreApp(uint unAppId, int iBaseFolder, string cszBackupPath)
        {
            return GetFunction<NativeRestoreAppUis>(Functions.RestoreApp37)(ObjectAddress, unAppId, iBaseFolder,
                cszBackupPath);
        }

        public bool BNeedsFile(uint unAppId, string cszFilePath, ulong ullFileSize, uint uUnk)
        {
            return GetFunction<NativeBNeedsFileUsuu>(Functions.BNeedsFile38)(ObjectAddress, unAppId, cszFilePath,
                ullFileSize, uUnk);
        }

        public bool BAddFileOnDisk(uint unAppId, string cszFilePath, ulong ullFileSize, uint uUnk,
            ShaDigestWrapperT ubSha1)
        {
            return GetFunction<NativeBAddFileOnDiskUsuus>(Functions.BAddFileOnDisk39)(ObjectAddress, unAppId,
                cszFilePath, ullFileSize, uUnk, ubSha1);
        }

        public uint FinishAddingFiles(uint unAppId)
        {
            return GetFunction<NativeFinishAddingFilesU>(Functions.FinishAddingFiles40)(ObjectAddress, unAppId);
        }

        public bool GetAppStateInfo(uint unAppId, ref EAppReleaseState peReleaseState,
            ref EAppOwernshipFlags peOwernshipFlags, ref EAppState peAppState)
        {
            return GetFunction<NativeGetAppStateInfoUeee>(Functions.GetAppStateInfo41)(ObjectAddress, unAppId,
                ref peReleaseState, ref peOwernshipFlags, ref peAppState);
        }

        public int GetNumInstallBaseFolders()
        {
            return GetFunction<NativeGetNumInstallBaseFolders>(Functions.GetNumInstallBaseFolders42)(ObjectAddress);
        }

        public int GetInstallBaseFolder(int iBaseFolder, StringBuilder pchPath)
        {
            return GetFunction<NativeGetInstallBaseFolderIsi>(Functions.GetInstallBaseFolder43)(ObjectAddress,
                iBaseFolder, pchPath, pchPath.Capacity);
        }

        public int AddInstallBaseFolder(string szPath)
        {
            return GetFunction<NativeAddInstallBaseFolderS>(Functions.AddInstallBaseFolder44)(ObjectAddress, szPath);
        }

        public bool RemoveInstallBaseFolder(int iBaseFolder)
        {
            return GetFunction<NativeRemoveInstallBaseFolderI>(Functions.RemoveInstallBaseFolder45)(ObjectAddress,
                iBaseFolder);
        }

        public ulong GetFreeDiskSpace(int iBaseFolder)
        {
            return GetFunction<NativeGetFreeDiskSpaceI>(Functions.GetFreeDiskSpace46)(ObjectAddress, iBaseFolder);
        }

        public int GetAppInstallBaseFolder(int iBaseFolder)
        {
            return GetFunction<NativeGetAppInstallBaseFolderI>(Functions.GetAppInstallBaseFolder47)(ObjectAddress,
                iBaseFolder);
        }

        public void ForceInstallDirOverride(string cszPath)
        {
            GetFunction<NativeForceInstallDirOverrideS>(Functions.ForceInstallDirOverride48)(ObjectAddress, cszPath);
        }

        public bool SetDownloadThrottleRateKbps(int iRate)
        {
            return
                GetFunction<NativeSetDownloadThrottleRateKbpsI>(Functions.SetDownloadThrottleRateKbps49)(ObjectAddress,
                    iRate);
        }

        public int GetDownloadThrottleRateKbps()
        {
            return GetFunction<NativeGetDownloadThrottleRateKbps>(Functions.GetDownloadThrottleRateKbps50)(ObjectAddress);
        }

        public void SuspendDownloadThrottling(bool bSuspend)
        {
            GetFunction<NativeSuspendDownloadThrottlingB>(Functions.SuspendDownloadThrottling51)(ObjectAddress, bSuspend);
        }

        public bool GetAppOwner(uint uUnk1, ref CSteamId pUnk, StringBuilder szUnk)
        {
            ulong s0 = 0;
            var result = GetFunction<NativeGetAppOwnerUcsu>(Functions.GetAppOwner52)(ObjectAddress, uUnk1, ref s0, szUnk,
                (uint)szUnk.Capacity);
            pUnk = new CSteamId(s0);
            return result;
        }

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EAppUpdateError NativeInstallAppUsib(
            IntPtr thisptr, uint unAppId, string cszAppDir, int iBaseFolder, [MarshalAs(UnmanagedType.I1)] bool bLegacy);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EAppUpdateError NativeConvertFromSteam2Us(IntPtr thisptr, uint unAppId, string cszPath);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EAppUpdateError NativeUninstallAppUb(
            IntPtr thisptr, uint unAppId, [MarshalAs(UnmanagedType.I1)] bool bComplete);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EAppUpdateError NativeLaunchAppUus(
            IntPtr thisptr, uint unAppId, uint uLaunchOption, string pszUserArgs);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeShutdownAppUb(
            IntPtr thisptr, uint unAppId, [MarshalAs(UnmanagedType.I1)] bool bForce);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EAppState NativeGetAppInstallStateU(IntPtr thisptr, uint unAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetAppBuildIdu(IntPtr thisptr, uint unAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetAppSizeOnDiskUuu(
            IntPtr thisptr, uint unAppId, ref ulong pullAppSize, ref ulong pullUnk);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetAppInstallDirUsu(
            IntPtr thisptr, uint unAppId, StringBuilder pchPath, uint cchPath);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsAppDlcInstalledUu(IntPtr thisptr, uint unAppId, uint unDlcAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetNumInstalledApps(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetInstalledAppsUu(IntPtr thisptr, ref uint punAppIDs, uint cAppIDsMax);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetAppDependencyU(IntPtr thisptr, uint unAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetDependentAppsUui(IntPtr thisptr, uint unAppId, ref uint punAppIDs, int cAppIDsMax
            );

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetUpdateInfoUa(IntPtr thisptr, uint unAppId, ref AppUpdateInfoS pUpdateInfo);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetContentLockedUb(
            IntPtr thisptr, uint unAppId, [MarshalAs(UnmanagedType.I1)] bool bLockContent);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetAppConfigUbib(
            IntPtr thisptr, uint unAppId, byte[] pchBuffer, int cbBuffer,
            [MarshalAs(UnmanagedType.I1)] bool bSharedKvSymbols);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetAppConfigValueUssi(
            IntPtr thisptr, uint unAppId, string pchKey, StringBuilder pchValue, int cchValueMax);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetAppConfigValueUss(IntPtr thisptr, uint unAppId, string pchKey, string pchValue);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsAppUpToDateU(IntPtr thisptr, uint unAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetAvailableLaunchOptionsUuu(
            IntPtr thisptr, uint unAppId, ref uint puOptions, uint cuOptionsMax);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetAvailableLanguagesUbsu(
            IntPtr thisptr, uint unAppId, [MarshalAs(UnmanagedType.I1)] bool arg1, StringBuilder pchLanguages,
            uint cchLanguagesMax);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeStartValidatingAppU(IntPtr thisptr, uint unAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeMarkContentCorruptUb(
            IntPtr thisptr, uint unAppId, [MarshalAs(UnmanagedType.I1)] bool bCorrupt);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetInstalledDepotsUuu(
            IntPtr thisptr, uint unAppId, ref uint puDepots, uint cuDepotsMax);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBCacheBetaPasswordUss(
            IntPtr thisptr, uint unAppId, string cszBetaKey, string cszBetaPassword);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBRequestBetaPasswordsU(IntPtr thisptr, uint unAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsCachedBetaPasswordValidUs(IntPtr thisptr, uint unAppId, string cszBetaKey);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetDownloadingEnabledB(IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bState);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsDownloadingEnabled(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetDownloadStatsD(IntPtr thisptr, ref DownloadStatsS pDownloadStats);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetDownloadingAppId(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeChangeAppPriorityUe(IntPtr thisptr, uint unAppId, EAppDownloadPriority ePriority);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBHasLocalContentServer(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBuildBackupUus(
            IntPtr thisptr, uint unAppId, ulong ullMaxFileSize, string cszBackupPath);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBuildInstallerSss(
            IntPtr thisptr, string cszProjectFile, string cszBackupPath, string arg2);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeCancelBackup(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EAppUpdateError NativeRestoreAppUis(
            IntPtr thisptr, uint unAppId, int iBaseFolder, string cszBackupPath);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBNeedsFileUsuu(
            IntPtr thisptr, uint unAppId, string cszFilePath, ulong ullFileSize, uint uUnk);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBAddFileOnDiskUsuus(
            IntPtr thisptr, uint unAppId, string cszFilePath, ulong ullFileSize, uint uUnk, ShaDigestWrapperT ubSha1);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeFinishAddingFilesU(IntPtr thisptr, uint unAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetAppStateInfoUeee(
            IntPtr thisptr, uint unAppId, ref EAppReleaseState peReleaseState, ref EAppOwernshipFlags peOwernshipFlags,
            ref EAppState peAppState);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetNumInstallBaseFolders(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetInstallBaseFolderIsi(
            IntPtr thisptr, int iBaseFolder, StringBuilder pchPath, int cbPath);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeAddInstallBaseFolderS(IntPtr thisptr, string szPath);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeRemoveInstallBaseFolderI(IntPtr thisptr, int iBaseFolder);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeGetFreeDiskSpaceI(IntPtr thisptr, int iBaseFolder);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetAppInstallBaseFolderI(IntPtr thisptr, int iBaseFolder);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeForceInstallDirOverrideS(IntPtr thisptr, string cszPath);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetDownloadThrottleRateKbpsI(IntPtr thisptr, int iRate);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetDownloadThrottleRateKbps(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSuspendDownloadThrottlingB(
            IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bSuspend);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetAppOwnerUcsu(
            IntPtr thisptr, uint uUnk1, ref ulong pUnk, StringBuilder szUnk, uint uUnk2);
    };
}