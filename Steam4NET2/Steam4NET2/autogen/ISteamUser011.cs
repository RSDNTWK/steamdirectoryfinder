// This file is automatically generated.

using System;
using System.Runtime.InteropServices;
using System.Text;

namespace Steam4Net
{
    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    public class SteamUser011VTable
    {
        public IntPtr GetHSteamUser0;
        public IntPtr BLoggedOn1;
        public IntPtr GetSteamID2;
        public IntPtr InitiateGameConnection3;
        public IntPtr TerminateGameConnection4;
        public IntPtr TrackAppUsageEvent5;
        public IntPtr GetUserDataFolder6;
        public IntPtr StartVoiceRecording7;
        public IntPtr StopVoiceRecording8;
        public IntPtr GetCompressedVoice9;
        public IntPtr DecompressVoice10;
        private IntPtr DTorISteamUser01111;
    };

    [InteropHelp.InterfaceVersionAttribute("SteamUser011")]
    public class SteamUser011 : InteropHelp.NativeWrapper<SteamUser011VTable>
    {
        public int GetHSteamUser()
        {
            return GetFunction<NativeGetHSteamUser>(Functions.GetHSteamUser0)(ObjectAddress);
        }

        public bool BLoggedOn()
        {
            return GetFunction<NativeBLoggedOn>(Functions.BLoggedOn1)(ObjectAddress);
        }

        public CSteamId GetSteamId()
        {
            ulong ret = 0;
            GetFunction<NativeGetSteamId>(Functions.GetSteamID2)(ObjectAddress, ref ret);
            return new CSteamId(ret);
        }

        public int InitiateGameConnection(byte[] pAuthBlob, CSteamId steamIdGameServer, uint unIpServer,
            ushort usPortServer, bool bSecure)
        {
            return GetFunction<NativeInitiateGameConnectionBicuub>(Functions.InitiateGameConnection3)(ObjectAddress,
                pAuthBlob, pAuthBlob.Length, steamIdGameServer.ConvertToUint64(), unIpServer, usPortServer, bSecure);
        }

        public void TerminateGameConnection(uint unIpServer, ushort usPortServer)
        {
            GetFunction<NativeTerminateGameConnectionUu>(Functions.TerminateGameConnection4)(ObjectAddress, unIpServer,
                usPortServer);
        }

        public void TrackAppUsageEvent(CGameId gameId, EAppUsageEvent eAppUsageEvent, string pchExtraInfo)
        {
            GetFunction<NativeTrackAppUsageEventCes>(Functions.TrackAppUsageEvent5)(ObjectAddress,
                gameId.ConvertToUint64(), eAppUsageEvent, pchExtraInfo);
        }

        public bool GetUserDataFolder(StringBuilder pchBuffer)
        {
            return GetFunction<NativeGetUserDataFolderSi>(Functions.GetUserDataFolder6)(ObjectAddress, pchBuffer,
                pchBuffer.Capacity);
        }

        public void StartVoiceRecording()
        {
            GetFunction<NativeStartVoiceRecording>(Functions.StartVoiceRecording7)(ObjectAddress);
        }

        public void StopVoiceRecording()
        {
            GetFunction<NativeStopVoiceRecording>(Functions.StopVoiceRecording8)(ObjectAddress);
        }

        public EVoiceResult GetCompressedVoice(byte[] pDestBuffer, ref uint nBytesWritten)
        {
            return GetFunction<NativeGetCompressedVoiceBuu>(Functions.GetCompressedVoice9)(ObjectAddress, pDestBuffer,
                (uint)pDestBuffer.Length, ref nBytesWritten);
        }

        public EVoiceResult DecompressVoice(byte[] pCompressed, byte[] pDestBuffer, ref uint nBytesWritten)
        {
            return GetFunction<NativeDecompressVoiceBubuu>(Functions.DecompressVoice10)(ObjectAddress, pCompressed,
                (uint)pCompressed.Length, pDestBuffer, (uint)pDestBuffer.Length, ref nBytesWritten);
        }

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetHSteamUser(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBLoggedOn(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetSteamId(IntPtr thisptr, ref ulong retarg);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeInitiateGameConnectionBicuub(
            IntPtr thisptr, byte[] pAuthBlob, int cbMaxAuthBlob, ulong steamIdGameServer, uint unIpServer,
            ushort usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeTerminateGameConnectionUu(IntPtr thisptr, uint unIpServer, ushort usPortServer);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeTrackAppUsageEventCes(
            IntPtr thisptr, ulong gameId, EAppUsageEvent eAppUsageEvent, string pchExtraInfo);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetUserDataFolderSi(IntPtr thisptr, StringBuilder pchBuffer, int cubBuffer);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeStartVoiceRecording(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeStopVoiceRecording(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EVoiceResult NativeGetCompressedVoiceBuu(
            IntPtr thisptr, byte[] pDestBuffer, uint cbDestBufferSize, ref uint nBytesWritten);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EVoiceResult NativeDecompressVoiceBubuu(
            IntPtr thisptr, byte[] pCompressed, uint cbCompressed, byte[] pDestBuffer, uint cbDestBufferSize,
            ref uint nBytesWritten);
    };
}