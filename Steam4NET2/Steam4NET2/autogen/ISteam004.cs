// This file is automatically generated.

using System;
using System.Runtime.InteropServices;
using System.Text;

namespace Steam4Net
{
    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    public class Steam004VTable
    {
        private IntPtr DTorISteam0040;
        public IntPtr ChangePassword1;
        public IntPtr GetCurrentEmailAddress2;
        public IntPtr ChangePersonalQA3;
        public IntPtr ChangeEmailAddress4;
        public IntPtr VerifyEmailAddress5;
        public IntPtr RequestEmailAddressVerificationEmail6;
        public IntPtr ChangeAccountName7;
        public IntPtr MountAppFilesystem8;
        public IntPtr UnmountAppFilesystem9;
        public IntPtr MountFilesystem10;
        public IntPtr UnmountFilesystem11;
        public IntPtr Stat12;
        public IntPtr SetvBuf13;
        public IntPtr FlushFile14;
        public IntPtr OpenFile15;
        public IntPtr OpenFileEx16;
        public IntPtr OpenTmpFile17;
        public IntPtr ClearError18;
        public IntPtr GetVersion19;
        public IntPtr GetOfflineStatus20;
        public IntPtr ChangeOfflineStatus21;
        public IntPtr ProcessCall22;
        public IntPtr AbortCall23;
        public IntPtr BlockingCall24;
        public IntPtr SetMaxStallCount25;
        public IntPtr CloseFile26;
        public IntPtr ReadFile27;
        public IntPtr WriteFile28;
        public IntPtr Getc29;
        public IntPtr Putc30;
        public IntPtr SeekFile31;
        public IntPtr TellFile32;
        public IntPtr SizeFile33;
        public IntPtr FindFirst34;
        public IntPtr FindNext35;
        public IntPtr FindClose36;
        public IntPtr GetLocalFileCopy37;
        public IntPtr IsFileImmediatelyAvailable38;
        public IntPtr HintResourceNeed39;
        public IntPtr ForgetAllHints40;
        public IntPtr PauseCachePreloading41;
        public IntPtr ResumeCachePreloading42;
        public IntPtr WaitForResources43;
        public IntPtr StartEngine44;
        public IntPtr ShutdownEngine45;
        public IntPtr Startup46;
        public IntPtr Cleanup47;
        public IntPtr NumAppsRunning48;
        public IntPtr CreateAccount49;
        public IntPtr GenerateSuggestedAccountNames50;
        public IntPtr IsLoggedIn51;
        public IntPtr Logout52;
        public IntPtr IsSecureComputer53;
        public IntPtr CreateLogContext54;
        public IntPtr Log55;
        public IntPtr LogResourceLoadStarted56;
        public IntPtr LogResourceLoadFinished57;
        public IntPtr RefreshLogin58;
        public IntPtr VerifyPassword59;
        public IntPtr GetUserType60;
        public IntPtr GetAppStats61;
        public IntPtr IsAccountNameInUse62;
        public IntPtr GetAppIds63;
        public IntPtr GetSubscriptionStats64;
        public IntPtr RefreshAccountInfo65;
        public IntPtr Subscribe66;
        public IntPtr Unsubscribe67;
        public IntPtr GetSubscriptionReceipt68;
        public IntPtr GetAccountStatus69;
        public IntPtr SetUser70;
        public IntPtr GetUser71;
        public IntPtr Login72;
        public IntPtr AckSubscriptionReceipt73;
        public IntPtr IsAppSubscribed74;
        public IntPtr GetSubscriptionIds75;
        public IntPtr EnumerateSubscription76;
        public IntPtr EnumerateSubscriptionDiscount77;
        public IntPtr EnumerateSubscriptionDiscountQualifier78;
        public IntPtr EnumerateApp79;
        public IntPtr EnumerateAppLaunchOption80;
        public IntPtr DeleteAccount81;
        public IntPtr EnumerateAppIcon82;
        public IntPtr LaunchApp83;
        public IntPtr GetCacheFilePath84;
        public IntPtr EnumerateAppVersion85;
        public IntPtr EnumerateAppDependency86;
        public IntPtr StartLoadingCache87;
        public IntPtr InsertAppDependency88;
        public IntPtr RemoveAppDependency89;
        public IntPtr FindApp90;
        public IntPtr GetAppDependencies91;
        public IntPtr IsSubscribed92;
        public IntPtr GetAppUserDefinedInfo93;
        public IntPtr WaitForAppReadyToLaunch94;
        public IntPtr IsCacheLoadingEnabled95;
        public IntPtr StopLoadingCache96;
        public IntPtr GetEncryptedUserIDTicket97;
        public IntPtr FlushCache98;
        public IntPtr RepairOrDecryptCaches99;
        public IntPtr LoadCacheFromDir100;
        public IntPtr GetCacheDefaultDirectory101;
        public IntPtr SetCacheDefaultDirectory102;
        public IntPtr GetAppDir103;
        public IntPtr MoveApp104;
        public IntPtr GetAppCacheSize105;
        public IntPtr SetAppCacheSize106;
        public IntPtr SetAppVersion107;
        public IntPtr Uninstall108;
        public IntPtr SetNotificationCallback109;
        public IntPtr ChangeForgottenPassword110;
        public IntPtr RequestForgottenPasswordEmail111;
        public IntPtr RequestAccountsByEmailAddressEmail112;
        public IntPtr RequestAccountsByCdKeyEmail113;
        public IntPtr GetNumAccountsWithEmailAddress114;
        public IntPtr UpdateAccountBillingInfo115;
        public IntPtr UpdateSubscriptionBillingInfo116;
        public IntPtr GetSponsorUrl117;
        public IntPtr GetContentServerInfo118;
        public IntPtr GetAppUpdateStats119;
        public IntPtr GetTotalUpdateStats120;
        public IntPtr CreateCachePreloaders121;
        public IntPtr Win32SetMiniDumpComment122;
        public IntPtr Win32SetMiniDumpSourceControlId123;
        public IntPtr Win32SetMiniDumpEnableFullMemory124;
        public IntPtr Win32WriteMiniDump125;
        public IntPtr GetCurrentAppId126;
        public IntPtr GetAppPurchaseCountry127;
    };

    [InteropHelp.InterfaceVersionAttribute("Steam004")]
    public class Steam004 : InteropHelp.NativeWrapper<Steam004VTable>
    {
        public uint ChangePassword(string cszCurrentPassphrase, string cszNewPassphrase, ref SteamError pError)
        {
            return GetFunction<NativeChangePasswordSst>(Functions.ChangePassword1)(ObjectAddress, cszCurrentPassphrase,
                cszNewPassphrase, ref pError);
        }

        public int GetCurrentEmailAddress(StringBuilder szEmailaddress, ref uint puEmailaddressChars,
            ref SteamError pError)
        {
            return GetFunction<NativeGetCurrentEmailAddressSuut>(Functions.GetCurrentEmailAddress2)(ObjectAddress,
                szEmailaddress, (uint)szEmailaddress.Capacity, ref puEmailaddressChars, ref pError);
        }

        public uint ChangePersonalQa(string cszCurrentPassphrase, string cszNewPersonalQuestion,
            string cszNewAnswerToQuestion, ref SteamError pError)
        {
            return GetFunction<NativeChangePersonalQassst>(Functions.ChangePersonalQA3)(ObjectAddress,
                cszCurrentPassphrase, cszNewPersonalQuestion, cszNewAnswerToQuestion, ref pError);
        }

        public uint ChangeEmailAddress(string cszNewEmailAddress, ref SteamError pError)
        {
            return GetFunction<NativeChangeEmailAddressSt>(Functions.ChangeEmailAddress4)(ObjectAddress,
                cszNewEmailAddress, ref pError);
        }

        public uint VerifyEmailAddress(string cszEmailAddress, ref SteamError pError)
        {
            return GetFunction<NativeVerifyEmailAddressSt>(Functions.VerifyEmailAddress5)(ObjectAddress, cszEmailAddress,
                ref pError);
        }

        public uint RequestEmailAddressVerificationEmail(ref SteamError pError)
        {
            return
                GetFunction<NativeRequestEmailAddressVerificationEmailT>(Functions.RequestEmailAddressVerificationEmail6)
                    (ObjectAddress, ref pError);
        }

        public uint ChangeAccountName(string cszCurrentPassphrase, string cszNewAccountName, ref SteamError pError)
        {
            return GetFunction<NativeChangeAccountNameSst>(Functions.ChangeAccountName7)(ObjectAddress,
                cszCurrentPassphrase, cszNewAccountName, ref pError);
        }

        public int MountAppFilesystem(ref SteamError pError)
        {
            return GetFunction<NativeMountAppFilesystemT>(Functions.MountAppFilesystem8)(ObjectAddress, ref pError);
        }

        public int UnmountAppFilesystem(ref SteamError pError)
        {
            return GetFunction<NativeUnmountAppFilesystemT>(Functions.UnmountAppFilesystem9)(ObjectAddress, ref pError);
        }

        public uint MountFilesystem(uint uAppId, string szMountPath, ref SteamError pError)
        {
            return GetFunction<NativeMountFilesystemUst>(Functions.MountFilesystem10)(ObjectAddress, uAppId, szMountPath,
                ref pError);
        }

        public int UnmountFilesystem(uint hFile, ref SteamError pError)
        {
            return GetFunction<NativeUnmountFilesystemUt>(Functions.UnmountFilesystem11)(ObjectAddress, hFile,
                ref pError);
        }

        public int Stat(string cszName, ref SteamElemInfo pInfo, ref SteamError pError)
        {
            return GetFunction<NativeStatStt>(Functions.Stat12)(ObjectAddress, cszName, ref pInfo, ref pError);
        }

        public int SetvBuf(uint hFile, byte[] pBuf, ESteamBufferMethod eMethod, uint uBytes, ref SteamError pError)
        {
            return GetFunction<NativeSetvBufUbeut>(Functions.SetvBuf13)(ObjectAddress, hFile, pBuf, eMethod, uBytes,
                ref pError);
        }

        public int FlushFile(uint hFile, ref SteamError pError)
        {
            return GetFunction<NativeFlushFileUt>(Functions.FlushFile14)(ObjectAddress, hFile, ref pError);
        }

        public uint OpenFile(string cszName, string cszMode, ref SteamError pError)
        {
            return GetFunction<NativeOpenFileSst>(Functions.OpenFile15)(ObjectAddress, cszName, cszMode, ref pError);
        }

        public uint OpenFileEx(string cszFileName, string cszMode, ref uint puFileSize, ref SteamError pError)
        {
            return GetFunction<NativeOpenFileExSsut>(Functions.OpenFileEx16)(ObjectAddress, cszFileName, cszMode,
                ref puFileSize, ref pError);
        }

        public uint OpenTmpFile(ref SteamError pError)
        {
            return GetFunction<NativeOpenTmpFileT>(Functions.OpenTmpFile17)(ObjectAddress, ref pError);
        }

        public void ClearError(ref SteamError pError)
        {
            GetFunction<NativeClearErrorT>(Functions.ClearError18)(ObjectAddress, ref pError);
        }

        public int GetVersion(StringBuilder szVersion)
        {
            return GetFunction<NativeGetVersionSu>(Functions.GetVersion19)(ObjectAddress, szVersion,
                (uint)szVersion.Capacity);
        }

        public int GetOfflineStatus(ref SteamOfflineStatus pSteamOfflineStatus, ref SteamError pError)
        {
            return GetFunction<NativeGetOfflineStatusTt>(Functions.GetOfflineStatus20)(ObjectAddress,
                ref pSteamOfflineStatus, ref pError);
        }

        public int ChangeOfflineStatus(ref SteamOfflineStatus pSteamOfflineStatus, ref SteamError pError)
        {
            return GetFunction<NativeChangeOfflineStatusTt>(Functions.ChangeOfflineStatus21)(ObjectAddress,
                ref pSteamOfflineStatus, ref pError);
        }

        public int ProcessCall(uint handle, ref SteamProgress pProgress, ref SteamError pError)
        {
            return GetFunction<NativeProcessCallUtt>(Functions.ProcessCall22)(ObjectAddress, handle, ref pProgress,
                ref pError);
        }

        public int AbortCall(uint handle, ref SteamError pError)
        {
            return GetFunction<NativeAbortCallUt>(Functions.AbortCall23)(ObjectAddress, handle, ref pError);
        }

        public int BlockingCall(uint handle, uint uiProcessTickMs, ref SteamError pError)
        {
            return GetFunction<NativeBlockingCallUut>(Functions.BlockingCall24)(ObjectAddress, handle, uiProcessTickMs,
                ref pError);
        }

        public int SetMaxStallCount(uint uNumStalls, ref SteamError pError)
        {
            return GetFunction<NativeSetMaxStallCountUt>(Functions.SetMaxStallCount25)(ObjectAddress, uNumStalls,
                ref pError);
        }

        public int CloseFile(uint hFile, ref SteamError pError)
        {
            return GetFunction<NativeCloseFileUt>(Functions.CloseFile26)(ObjectAddress, hFile, ref pError);
        }

        public uint ReadFile(byte[] pBuf, uint uCount, uint hFile, ref SteamError pError)
        {
            return GetFunction<NativeReadFileBuuut>(Functions.ReadFile27)(ObjectAddress, pBuf, (uint)pBuf.Length,
                uCount, hFile, ref pError);
        }

        public uint WriteFile(byte[] pBuf, uint uCount, uint hFile, ref SteamError pError)
        {
            return GetFunction<NativeWriteFileBuuut>(Functions.WriteFile28)(ObjectAddress, pBuf, (uint)pBuf.Length,
                uCount, hFile, ref pError);
        }

        public int Getc(uint hFile, ref SteamError pError)
        {
            return GetFunction<NativeGetcUt>(Functions.Getc29)(ObjectAddress, hFile, ref pError);
        }

        public int Putc(int cChar, uint hFile, ref SteamError pError)
        {
            return GetFunction<NativePutcIut>(Functions.Putc30)(ObjectAddress, cChar, hFile, ref pError);
        }

        public int SeekFile(uint hFile, int lOffset, ESteamSeekMethod eMethod, ref SteamError pError)
        {
            return GetFunction<NativeSeekFileUiet>(Functions.SeekFile31)(ObjectAddress, hFile, lOffset, eMethod,
                ref pError);
        }

        public int TellFile(uint hFile, ref SteamError pError)
        {
            return GetFunction<NativeTellFileUt>(Functions.TellFile32)(ObjectAddress, hFile, ref pError);
        }

        public int SizeFile(uint hFile, ref SteamError pError)
        {
            return GetFunction<NativeSizeFileUt>(Functions.SizeFile33)(ObjectAddress, hFile, ref pError);
        }

        public uint FindFirst(string cszPattern, ESteamFindFilter eFilter, ref SteamElemInfo pFindInfo,
            ref SteamError pError)
        {
            return GetFunction<NativeFindFirstSett>(Functions.FindFirst34)(ObjectAddress, cszPattern, eFilter,
                ref pFindInfo, ref pError);
        }

        public int FindNext(uint hFind, ref SteamElemInfo pFindInfo, ref SteamError pError)
        {
            return GetFunction<NativeFindNextUtt>(Functions.FindNext35)(ObjectAddress, hFind, ref pFindInfo, ref pError);
        }

        public int FindClose(uint hFind, ref SteamError pError)
        {
            return GetFunction<NativeFindCloseUt>(Functions.FindClose36)(ObjectAddress, hFind, ref pError);
        }

        public int GetLocalFileCopy(string cszName, ref SteamError pError)
        {
            return GetFunction<NativeGetLocalFileCopySt>(Functions.GetLocalFileCopy37)(ObjectAddress, cszName,
                ref pError);
        }

        public int IsFileImmediatelyAvailable(string cszName, ref SteamError pError)
        {
            return GetFunction<NativeIsFileImmediatelyAvailableSt>(Functions.IsFileImmediatelyAvailable38)(
                ObjectAddress, cszName, ref pError);
        }

        public int HintResourceNeed(string cszMasterList, int bForgetEverything, ref SteamError pError)
        {
            return GetFunction<NativeHintResourceNeedSit>(Functions.HintResourceNeed39)(ObjectAddress, cszMasterList,
                bForgetEverything, ref pError);
        }

        public int ForgetAllHints(ref SteamError pError)
        {
            return GetFunction<NativeForgetAllHintsT>(Functions.ForgetAllHints40)(ObjectAddress, ref pError);
        }

        public int PauseCachePreloading(ref SteamError pError)
        {
            return GetFunction<NativePauseCachePreloadingT>(Functions.PauseCachePreloading41)(ObjectAddress, ref pError);
        }

        public int ResumeCachePreloading(ref SteamError pError)
        {
            return GetFunction<NativeResumeCachePreloadingT>(Functions.ResumeCachePreloading42)(ObjectAddress,
                ref pError);
        }

        public uint WaitForResources(string cszMasterList, ref SteamError pError)
        {
            return GetFunction<NativeWaitForResourcesSt>(Functions.WaitForResources43)(ObjectAddress, cszMasterList,
                ref pError);
        }

        public int StartEngine(ref SteamError pError)
        {
            return GetFunction<NativeStartEngineT>(Functions.StartEngine44)(ObjectAddress, ref pError);
        }

        public int ShutdownEngine(ref SteamError pError)
        {
            return GetFunction<NativeShutdownEngineT>(Functions.ShutdownEngine45)(ObjectAddress, ref pError);
        }

        public int Startup(uint uUsingMask, ref SteamError pError)
        {
            return GetFunction<NativeStartupUt>(Functions.Startup46)(ObjectAddress, uUsingMask, ref pError);
        }

        public int Cleanup(ref SteamError pError)
        {
            return GetFunction<NativeCleanupT>(Functions.Cleanup47)(ObjectAddress, ref pError);
        }

        public uint NumAppsRunning(ref SteamError pError)
        {
            return GetFunction<NativeNumAppsRunningT>(Functions.NumAppsRunning48)(ObjectAddress, ref pError);
        }

        public uint CreateAccount(string cszUser, string cszEmailAddress, string cszPassphrase, string cszCreationKey,
            string cszPersonalQuestion, string cszAnswerToQuestion, ref int pbCreated, ref SteamError pError)
        {
            return GetFunction<NativeCreateAccountSsssssit>(Functions.CreateAccount49)(ObjectAddress, cszUser,
                cszEmailAddress, cszPassphrase, cszCreationKey, cszPersonalQuestion, cszAnswerToQuestion, ref pbCreated,
                ref pError);
        }

        public uint GenerateSuggestedAccountNames(string cszAccountNameToSelectMasterAs,
            string cszGenerateNamesLikeAccountName, StringBuilder pSuggestedNamesBuf, ref uint puNumSuggestedChars,
            ref SteamError pError)
        {
            return
                GetFunction<NativeGenerateSuggestedAccountNamesSssuut>(Functions.GenerateSuggestedAccountNames50)(
                    ObjectAddress, cszAccountNameToSelectMasterAs, cszGenerateNamesLikeAccountName, pSuggestedNamesBuf,
                    (uint)pSuggestedNamesBuf.Capacity, ref puNumSuggestedChars, ref pError);
        }

        public int IsLoggedIn(ref int pbIsLoggedIn, ref SteamError pError)
        {
            return GetFunction<NativeIsLoggedInIt>(Functions.IsLoggedIn51)(ObjectAddress, ref pbIsLoggedIn, ref pError);
        }

        public uint Logout(ref SteamError pError)
        {
            return GetFunction<NativeLogoutT>(Functions.Logout52)(ObjectAddress, ref pError);
        }

        public int IsSecureComputer(ref int pbIsSecureComputer, ref SteamError pError)
        {
            return GetFunction<NativeIsSecureComputerIt>(Functions.IsSecureComputer53)(ObjectAddress,
                ref pbIsSecureComputer, ref pError);
        }

        public uint CreateLogContext(string cszName)
        {
            return GetFunction<NativeCreateLogContextS>(Functions.CreateLogContext54)(ObjectAddress, cszName);
        }

        public int Log(uint hContext, string cszMsg)
        {
            return GetFunction<NativeLogUs>(Functions.Log55)(ObjectAddress, hContext, cszMsg);
        }

        public void LogResourceLoadStarted(string cszMsg)
        {
            GetFunction<NativeLogResourceLoadStartedS>(Functions.LogResourceLoadStarted56)(ObjectAddress, cszMsg);
        }

        public void LogResourceLoadFinished(string cszMsg)
        {
            GetFunction<NativeLogResourceLoadFinishedS>(Functions.LogResourceLoadFinished57)(ObjectAddress, cszMsg);
        }

        public uint RefreshLogin(string cszPassphrase, int bIsSecureComputer, ref SteamError pError)
        {
            return GetFunction<NativeRefreshLoginSit>(Functions.RefreshLogin58)(ObjectAddress, cszPassphrase,
                bIsSecureComputer, ref pError);
        }

        public int VerifyPassword(string cszPassphrase, ref int pbCorrect, ref SteamError pError)
        {
            return GetFunction<NativeVerifyPasswordSit>(Functions.VerifyPassword59)(ObjectAddress, cszPassphrase,
                ref pbCorrect, ref pError);
        }

        public int GetUserType(ref uint puUserTypeFlags, ref SteamError pError)
        {
            return GetFunction<NativeGetUserTypeUt>(Functions.GetUserType60)(ObjectAddress, ref puUserTypeFlags,
                ref pError);
        }

        public int GetAppStats(ref SteamAppStats pAppStats, ref SteamError pError)
        {
            return GetFunction<NativeGetAppStatsTt>(Functions.GetAppStats61)(ObjectAddress, ref pAppStats, ref pError);
        }

        public uint IsAccountNameInUse(string cszAccountName, ref int pbIsUsed, ref SteamError pError)
        {
            return GetFunction<NativeIsAccountNameInUseSit>(Functions.IsAccountNameInUse62)(ObjectAddress,
                cszAccountName, ref pbIsUsed, ref pError);
        }

        public int GetAppIds(ref uint puIds, uint uMaxIds, ref SteamError pError)
        {
            return GetFunction<NativeGetAppIdsUut>(Functions.GetAppIds63)(ObjectAddress, ref puIds, uMaxIds, ref pError);
        }

        public int GetSubscriptionStats(ref SteamSubscriptionStats pSubscriptionStats, ref SteamError pError)
        {
            return GetFunction<NativeGetSubscriptionStatsTt>(Functions.GetSubscriptionStats64)(ObjectAddress,
                ref pSubscriptionStats, ref pError);
        }

        public uint RefreshAccountInfo(ref SteamError pError)
        {
            return GetFunction<NativeRefreshAccountInfoT>(Functions.RefreshAccountInfo65)(ObjectAddress, ref pError);
        }

        public uint Subscribe(uint uSubscriptionId, ref SteamSubscriptionBillingInfo pSubscriptionBillingInfo,
            ref SteamError pError)
        {
            return GetFunction<NativeSubscribeUtt>(Functions.Subscribe66)(ObjectAddress, uSubscriptionId,
                ref pSubscriptionBillingInfo, ref pError);
        }

        public uint Unsubscribe(uint uSubscriptionId, ref SteamError pError)
        {
            return GetFunction<NativeUnsubscribeUt>(Functions.Unsubscribe67)(ObjectAddress, uSubscriptionId, ref pError);
        }

        public int GetSubscriptionReceipt(uint uSubscriptionId, ref SteamSubscriptionReceipt pSteamSubscriptionReceipt,
            ref SteamError pError)
        {
            return GetFunction<NativeGetSubscriptionReceiptUtt>(Functions.GetSubscriptionReceipt68)(ObjectAddress,
                uSubscriptionId, ref pSteamSubscriptionReceipt, ref pError);
        }

        public int GetAccountStatus(ref uint puAccountStatusFlags, ref SteamError pError)
        {
            return GetFunction<NativeGetAccountStatusUt>(Functions.GetAccountStatus69)(ObjectAddress,
                ref puAccountStatusFlags, ref pError);
        }

        public uint SetUser(string cszUser, ref int pbUserSet, ref SteamError pError)
        {
            return GetFunction<NativeSetUserSit>(Functions.SetUser70)(ObjectAddress, cszUser, ref pbUserSet, ref pError);
        }

        public int GetUser(StringBuilder szUser, ref uint puUserChars, ref SteamGlobalUserId pOptionalReceiveUserId,
            ref SteamError pError)
        {
            return GetFunction<NativeGetUserSuutt>(Functions.GetUser71)(ObjectAddress, szUser, (uint)szUser.Capacity,
                ref puUserChars, ref pOptionalReceiveUserId, ref pError);
        }

        public uint Login(string cszUser, string cszPassphrase, int bIsSecureComputer, ref SteamError pError)
        {
            return GetFunction<NativeLoginSsit>(Functions.Login72)(ObjectAddress, cszUser, cszPassphrase,
                bIsSecureComputer, ref pError);
        }

        public uint AckSubscriptionReceipt(uint uSubscriptionId, ref SteamError pError)
        {
            return GetFunction<NativeAckSubscriptionReceiptUt>(Functions.AckSubscriptionReceipt73)(ObjectAddress,
                uSubscriptionId, ref pError);
        }

        public int IsAppSubscribed(uint uAppId, ref int pbIsAppSubscribed, ref int pbIsSubscriptionPending,
            ref SteamError pError)
        {
            return GetFunction<NativeIsAppSubscribedUiit>(Functions.IsAppSubscribed74)(ObjectAddress, uAppId,
                ref pbIsAppSubscribed, ref pbIsSubscriptionPending, ref pError);
        }

        public int GetSubscriptionIds(ref uint puIds, uint uMaxIds, ref SteamError pError)
        {
            return GetFunction<NativeGetSubscriptionIdsUut>(Functions.GetSubscriptionIds75)(ObjectAddress, ref puIds,
                uMaxIds, ref pError);
        }

        public int EnumerateSubscription(uint uSubscriptionId, ref SteamSubscription pSubscription,
            ref SteamError pError)
        {
            return GetFunction<NativeEnumerateSubscriptionUtt>(Functions.EnumerateSubscription76)(ObjectAddress,
                uSubscriptionId, ref pSubscription, ref pError);
        }

        public int EnumerateSubscriptionDiscount(uint uSubscriptionId, uint uDiscountIndex,
            ref SteamSubscriptionDiscount pSteamSubscriptionDiscount, ref SteamError pError)
        {
            return
                GetFunction<NativeEnumerateSubscriptionDiscountUutt>(Functions.EnumerateSubscriptionDiscount77)(
                    ObjectAddress, uSubscriptionId, uDiscountIndex, ref pSteamSubscriptionDiscount, ref pError);
        }

        public int EnumerateSubscriptionDiscountQualifier(uint uSubscriptionId, uint uDiscountIndex,
            uint uQualifierIndex, ref SteamDiscountQualifier pSteamDiscountQualifier, ref SteamError pError)
        {
            return
                GetFunction<NativeEnumerateSubscriptionDiscountQualifierUuutt>(
                    Functions.EnumerateSubscriptionDiscountQualifier78)(ObjectAddress, uSubscriptionId, uDiscountIndex,
                        uQualifierIndex, ref pSteamDiscountQualifier, ref pError);
        }

        public int EnumerateApp(uint uAppId, ref SteamApp pApp, ref SteamError pError)
        {
            return GetFunction<NativeEnumerateAppUtt>(Functions.EnumerateApp79)(ObjectAddress, uAppId, ref pApp,
                ref pError);
        }

        public int EnumerateAppLaunchOption(uint uAppId, uint uLaunchOptionIndex,
            ref SteamAppLaunchOption pLaunchOption, ref SteamError pError)
        {
            return GetFunction<NativeEnumerateAppLaunchOptionUutt>(Functions.EnumerateAppLaunchOption80)(ObjectAddress,
                uAppId, uLaunchOptionIndex, ref pLaunchOption, ref pError);
        }

        public uint DeleteAccount(ref SteamError pError)
        {
            return GetFunction<NativeDeleteAccountT>(Functions.DeleteAccount81)(ObjectAddress, ref pError);
        }

        public int EnumerateAppIcon(uint uAppId, uint uIconIndex, byte[] pIconData, ref uint puSizeOfIconData,
            ref SteamError pError)
        {
            return GetFunction<NativeEnumerateAppIconUubuut>(Functions.EnumerateAppIcon82)(ObjectAddress, uAppId,
                uIconIndex, pIconData, (uint)pIconData.Length, ref puSizeOfIconData, ref pError);
        }

        public uint LaunchApp(uint uAppId, uint uLaunchOption, string cszArgs, ref SteamError pError)
        {
            return GetFunction<NativeLaunchAppUust>(Functions.LaunchApp83)(ObjectAddress, uAppId, uLaunchOption, cszArgs,
                ref pError);
        }

        public int GetCacheFilePath(uint uAppId, StringBuilder szFilePath, ref uint puRecievedLength,
            ref SteamError pError)
        {
            return GetFunction<NativeGetCacheFilePathUsuut>(Functions.GetCacheFilePath84)(ObjectAddress, uAppId,
                szFilePath, (uint)szFilePath.Capacity, ref puRecievedLength, ref pError);
        }

        public int EnumerateAppVersion(uint uAppId, uint uVersionIndex, ref SteamAppVersion pAppVersion,
            ref SteamError pError)
        {
            return GetFunction<NativeEnumerateAppVersionUutt>(Functions.EnumerateAppVersion85)(ObjectAddress, uAppId,
                uVersionIndex, ref pAppVersion, ref pError);
        }

        public int EnumerateAppDependency(uint uAppId, uint uIndex, ref SteamAppDependencyInfo pDependencyInfo,
            ref SteamError pError)
        {
            return GetFunction<NativeEnumerateAppDependencyUutt>(Functions.EnumerateAppDependency86)(ObjectAddress,
                uAppId, uIndex, ref pDependencyInfo, ref pError);
        }

        public uint StartLoadingCache(uint uAppId, ref SteamError pError)
        {
            return GetFunction<NativeStartLoadingCacheUt>(Functions.StartLoadingCache87)(ObjectAddress, uAppId,
                ref pError);
        }

        public int InsertAppDependency(uint uAppId, uint uFileSystemIndex, ref SteamAppDependencyInfo pDependencyInfo,
            ref SteamError pError)
        {
            return GetFunction<NativeInsertAppDependencyUutt>(Functions.InsertAppDependency88)(ObjectAddress, uAppId,
                uFileSystemIndex, ref pDependencyInfo, ref pError);
        }

        public int RemoveAppDependency(uint uAppId, uint uFileSystemIndex, ref SteamError pError)
        {
            return GetFunction<NativeRemoveAppDependencyUut>(Functions.RemoveAppDependency89)(ObjectAddress, uAppId,
                uFileSystemIndex, ref pError);
        }

        public int FindApp(string cszAppName, ref uint puAppId, ref SteamError pError)
        {
            return GetFunction<NativeFindAppSut>(Functions.FindApp90)(ObjectAddress, cszAppName, ref puAppId, ref pError);
        }

        public int GetAppDependencies(uint uAppId, ref uint puCacheIds, uint uMaxIds, ref SteamError pError)
        {
            return GetFunction<NativeGetAppDependenciesUuut>(Functions.GetAppDependencies91)(ObjectAddress, uAppId,
                ref puCacheIds, uMaxIds, ref pError);
        }

        public int IsSubscribed(uint uSubscriptionId, ref int pbIsSubscribed, ref int pbIsSubscriptionPending,
            ref SteamError pError)
        {
            return GetFunction<NativeIsSubscribedUiit>(Functions.IsSubscribed92)(ObjectAddress, uSubscriptionId,
                ref pbIsSubscribed, ref pbIsSubscriptionPending, ref pError);
        }

        public int GetAppUserDefinedInfo(uint uAppId, string cszPropertyName, StringBuilder szPropertyValue,
            ref uint puPropertyValueLength, ref SteamError pError)
        {
            return GetFunction<NativeGetAppUserDefinedInfoUssuut>(Functions.GetAppUserDefinedInfo93)(ObjectAddress,
                uAppId, cszPropertyName, szPropertyValue, (uint)szPropertyValue.Capacity, ref puPropertyValueLength,
                ref pError);
        }

        public uint WaitForAppReadyToLaunch(uint uAppId, ref SteamError pError)
        {
            return GetFunction<NativeWaitForAppReadyToLaunchUt>(Functions.WaitForAppReadyToLaunch94)(ObjectAddress,
                uAppId, ref pError);
        }

        public int IsCacheLoadingEnabled(uint uAppId, ref int pbIsLoading, ref SteamError pError)
        {
            return GetFunction<NativeIsCacheLoadingEnabledUit>(Functions.IsCacheLoadingEnabled95)(ObjectAddress, uAppId,
                ref pbIsLoading, ref pError);
        }

        public uint StopLoadingCache(uint uAppId, ref SteamError pError)
        {
            return GetFunction<NativeStopLoadingCacheUt>(Functions.StopLoadingCache96)(ObjectAddress, uAppId, ref pError);
        }

        public ESteamError GetEncryptedUserIdTicket(byte[] pEncryptionKeyReceivedFromAppServer, byte[] pOutputBuffer,
            ref uint pReceiveSizeOfEncryptedTicket, ref SteamError pError)
        {
            return GetFunction<NativeGetEncryptedUserIdTicketBubuut>(Functions.GetEncryptedUserIDTicket97)(
                ObjectAddress, pEncryptionKeyReceivedFromAppServer, (uint)pEncryptionKeyReceivedFromAppServer.Length,
                pOutputBuffer, (uint)pOutputBuffer.Length, ref pReceiveSizeOfEncryptedTicket, ref pError);
        }

        public uint FlushCache(uint uAppId, ref SteamError pError)
        {
            return GetFunction<NativeFlushCacheUt>(Functions.FlushCache98)(ObjectAddress, uAppId, ref pError);
        }

        public uint RepairOrDecryptCaches(uint uAppId, int bForceValidation, ref SteamError pError)
        {
            return GetFunction<NativeRepairOrDecryptCachesUit>(Functions.RepairOrDecryptCaches99)(ObjectAddress, uAppId,
                bForceValidation, ref pError);
        }

        public uint LoadCacheFromDir(uint uAppId, string cszPath, ref SteamError pError)
        {
            return GetFunction<NativeLoadCacheFromDirUst>(Functions.LoadCacheFromDir100)(ObjectAddress, uAppId, cszPath,
                ref pError);
        }

        public int GetCacheDefaultDirectory(StringBuilder szPath, ref SteamError pError)
        {
            return GetFunction<NativeGetCacheDefaultDirectorySt>(Functions.GetCacheDefaultDirectory101)(ObjectAddress,
                szPath, ref pError);
        }

        public int SetCacheDefaultDirectory(string cszPath, ref SteamError pError)
        {
            return GetFunction<NativeSetCacheDefaultDirectorySt>(Functions.SetCacheDefaultDirectory102)(ObjectAddress,
                cszPath, ref pError);
        }

        public int GetAppDir(uint uAppId, StringBuilder szAppDir, ref SteamError pError)
        {
            return GetFunction<NativeGetAppDirUst>(Functions.GetAppDir103)(ObjectAddress, uAppId, szAppDir, ref pError);
        }

        public uint MoveApp(uint uAppId, string szPath, ref SteamError pError)
        {
            return GetFunction<NativeMoveAppUst>(Functions.MoveApp104)(ObjectAddress, uAppId, szPath, ref pError);
        }

        public uint GetAppCacheSize(uint uAppId, ref uint puCacheSizeInMb, ref SteamError pError)
        {
            return GetFunction<NativeGetAppCacheSizeUut>(Functions.GetAppCacheSize105)(ObjectAddress, uAppId,
                ref puCacheSizeInMb, ref pError);
        }

        public uint SetAppCacheSize(uint uAppId, uint uCacheSizeInMb, ref SteamError pError)
        {
            return GetFunction<NativeSetAppCacheSizeUut>(Functions.SetAppCacheSize106)(ObjectAddress, uAppId,
                uCacheSizeInMb, ref pError);
        }

        public uint SetAppVersion(uint uAppId, uint uAppVersionId, ref SteamError pError)
        {
            return GetFunction<NativeSetAppVersionUut>(Functions.SetAppVersion107)(ObjectAddress, uAppId, uAppVersionId,
                ref pError);
        }

        public uint Uninstall(ref SteamError pError)
        {
            return GetFunction<NativeUninstallT>(Functions.Uninstall108)(ObjectAddress, ref pError);
        }

        public int SetNotificationCallback(ref IntPtr pCallbackFunction, ref SteamError pError)
        {
            return GetFunction<NativeSetNotificationCallbackIt>(Functions.SetNotificationCallback109)(ObjectAddress,
                ref pCallbackFunction, ref pError);
        }

        public uint ChangeForgottenPassword(string cszUser, string cszAnswerToQuestion, string cszEmailVerificationKey,
            string cszNewPassphrase, ref int pbChanged, ref SteamError pError)
        {
            return GetFunction<NativeChangeForgottenPasswordSsssit>(Functions.ChangeForgottenPassword110)(
                ObjectAddress, cszUser, cszAnswerToQuestion, cszEmailVerificationKey, cszNewPassphrase, ref pbChanged,
                ref pError);
        }

        public uint RequestForgottenPasswordEmail(string cszUser, StringBuilder receivePersonalQuestion,
            ref SteamError pError)
        {
            return
                GetFunction<NativeRequestForgottenPasswordEmailSst>(Functions.RequestForgottenPasswordEmail111)(
                    ObjectAddress, cszUser, receivePersonalQuestion, ref pError);
        }

        public uint RequestAccountsByEmailAddressEmail(string cszEmailAddress, ref SteamError pError)
        {
            return
                GetFunction<NativeRequestAccountsByEmailAddressEmailSt>(Functions.RequestAccountsByEmailAddressEmail112)
                    (ObjectAddress, cszEmailAddress, ref pError);
        }

        public uint RequestAccountsByCdKeyEmail(string cszCdKey, ref SteamError pError)
        {
            return
                GetFunction<NativeRequestAccountsByCdKeyEmailSt>(Functions.RequestAccountsByCdKeyEmail113)(
                    ObjectAddress, cszCdKey, ref pError);
        }

        public uint GetNumAccountsWithEmailAddress(string cszEmailAddress, ref uint puNumAccounts,
            ref SteamError pError)
        {
            return
                GetFunction<NativeGetNumAccountsWithEmailAddressSut>(Functions.GetNumAccountsWithEmailAddress114)(
                    ObjectAddress, cszEmailAddress, ref puNumAccounts, ref pError);
        }

        public uint UpdateAccountBillingInfo(ref SteamPaymentCardInfo pPaymentCardInfo, ref SteamError pError)
        {
            return GetFunction<NativeUpdateAccountBillingInfoTt>(Functions.UpdateAccountBillingInfo115)(ObjectAddress,
                ref pPaymentCardInfo, ref pError);
        }

        public uint UpdateSubscriptionBillingInfo(uint uSubscriptionId,
            ref SteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref SteamError pError)
        {
            return
                GetFunction<NativeUpdateSubscriptionBillingInfoUtt>(Functions.UpdateSubscriptionBillingInfo116)(
                    ObjectAddress, uSubscriptionId, ref pSubscriptionBillingInfo, ref pError);
        }

        public int GetSponsorUrl(uint uAppId, StringBuilder szUrl, ref uint pUrlChars, ref SteamError pError)
        {
            return GetFunction<NativeGetSponsorUrlUsuut>(Functions.GetSponsorUrl117)(ObjectAddress, uAppId, szUrl,
                (uint)szUrl.Capacity, ref pUrlChars, ref pError);
        }

        public int GetContentServerInfo(uint uAppId, ref uint puServerId, ref uint puServerIpAddress,
            ref SteamError pError)
        {
            return GetFunction<NativeGetContentServerInfoUuut>(Functions.GetContentServerInfo118)(ObjectAddress, uAppId,
                ref puServerId, ref puServerIpAddress, ref pError);
        }

        public uint GetAppUpdateStats(uint uAppOrCacheId, ESteamAppUpdateStatsQueryType eQueryType,
            ref SteamUpdateStats pUpdateStats, ref SteamError pError)
        {
            return GetFunction<NativeGetAppUpdateStatsUett>(Functions.GetAppUpdateStats119)(ObjectAddress, uAppOrCacheId,
                eQueryType, ref pUpdateStats, ref pError);
        }

        public int GetTotalUpdateStats(ref SteamUpdateStats pUpdateStats, ref SteamError pError)
        {
            return GetFunction<NativeGetTotalUpdateStatsTt>(Functions.GetTotalUpdateStats120)(ObjectAddress,
                ref pUpdateStats, ref pError);
        }

        public uint CreateCachePreloaders(ref SteamError pError)
        {
            return GetFunction<NativeCreateCachePreloadersT>(Functions.CreateCachePreloaders121)(ObjectAddress,
                ref pError);
        }

        public void Win32SetMiniDumpComment(string cszComment)
        {
            GetFunction<NativeWin32SetMiniDumpCommentS>(Functions.Win32SetMiniDumpComment122)(ObjectAddress, cszComment);
        }

        public void Win32SetMiniDumpSourceControlId(uint uSourceControlId)
        {
            GetFunction<NativeWin32SetMiniDumpSourceControlIdU>(Functions.Win32SetMiniDumpSourceControlId123)(
                ObjectAddress, uSourceControlId);
        }

        public void Win32SetMiniDumpEnableFullMemory()
        {
            GetFunction<NativeWin32SetMiniDumpEnableFullMemory>(Functions.Win32SetMiniDumpEnableFullMemory124)(
                ObjectAddress);
        }

        public void Win32WriteMiniDump(string szErrorOrAssertType, string szDescriptionOrAssertName, string szAssertExpr,
            string szAssertFilename, uint uAssertLineNumber)
        {
            GetFunction<NativeWin32WriteMiniDumpSsssu>(Functions.Win32WriteMiniDump125)(ObjectAddress,
                szErrorOrAssertType, szDescriptionOrAssertName, szAssertExpr, szAssertFilename, uAssertLineNumber);
        }

        public int GetCurrentAppId(ref uint puAppId, ref SteamError pError)
        {
            return GetFunction<NativeGetCurrentAppIdUt>(Functions.GetCurrentAppId126)(ObjectAddress, ref puAppId,
                ref pError);
        }

        public int GetAppPurchaseCountry(uint uAppId, StringBuilder szCountryCode, ref int piRecievedLength,
            ref SteamError pError)
        {
            return GetFunction<NativeGetAppPurchaseCountryUsuit>(Functions.GetAppPurchaseCountry127)(ObjectAddress,
                uAppId, szCountryCode, (uint)szCountryCode.Capacity, ref piRecievedLength, ref pError);
        }

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeChangePasswordSst(
            IntPtr thisptr, string cszCurrentPassphrase, string cszNewPassphrase, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetCurrentEmailAddressSuut(
            IntPtr thisptr, StringBuilder szEmailaddress, uint uBufSize, ref uint puEmailaddressChars,
            ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeChangePersonalQassst(
            IntPtr thisptr, string cszCurrentPassphrase, string cszNewPersonalQuestion, string cszNewAnswerToQuestion,
            ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeChangeEmailAddressSt(
            IntPtr thisptr, string cszNewEmailAddress, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeVerifyEmailAddressSt(IntPtr thisptr, string cszEmailAddress, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeRequestEmailAddressVerificationEmailT(IntPtr thisptr, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeChangeAccountNameSst(
            IntPtr thisptr, string cszCurrentPassphrase, string cszNewAccountName, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeMountAppFilesystemT(IntPtr thisptr, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeUnmountAppFilesystemT(IntPtr thisptr, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeMountFilesystemUst(
            IntPtr thisptr, uint uAppId, string szMountPath, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeUnmountFilesystemUt(IntPtr thisptr, uint hFile, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeStatStt(
            IntPtr thisptr, string cszName, ref SteamElemInfo pInfo, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeSetvBufUbeut(
            IntPtr thisptr, uint hFile, byte[] pBuf, ESteamBufferMethod eMethod, uint uBytes, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeFlushFileUt(IntPtr thisptr, uint hFile, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeOpenFileSst(IntPtr thisptr, string cszName, string cszMode, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeOpenFileExSsut(
            IntPtr thisptr, string cszFileName, string cszMode, ref uint puFileSize, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeOpenTmpFileT(IntPtr thisptr, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeClearErrorT(IntPtr thisptr, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetVersionSu(IntPtr thisptr, StringBuilder szVersion, uint uVersionBufSize);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetOfflineStatusTt(
            IntPtr thisptr, ref SteamOfflineStatus pSteamOfflineStatus, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeChangeOfflineStatusTt(
            IntPtr thisptr, ref SteamOfflineStatus pSteamOfflineStatus, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeProcessCallUtt(
            IntPtr thisptr, uint handle, ref SteamProgress pProgress, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeAbortCallUt(IntPtr thisptr, uint handle, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeBlockingCallUut(
            IntPtr thisptr, uint handle, uint uiProcessTickMs, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeSetMaxStallCountUt(IntPtr thisptr, uint uNumStalls, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeCloseFileUt(IntPtr thisptr, uint hFile, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeReadFileBuuut(
            IntPtr thisptr, byte[] pBuf, uint uSize, uint uCount, uint hFile, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeWriteFileBuuut(
            IntPtr thisptr, byte[] pBuf, uint uSize, uint uCount, uint hFile, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetcUt(IntPtr thisptr, uint hFile, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativePutcIut(IntPtr thisptr, int cChar, uint hFile, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeSeekFileUiet(
            IntPtr thisptr, uint hFile, int lOffset, ESteamSeekMethod eMethod, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeTellFileUt(IntPtr thisptr, uint hFile, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeSizeFileUt(IntPtr thisptr, uint hFile, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeFindFirstSett(
            IntPtr thisptr, string cszPattern, ESteamFindFilter eFilter, ref SteamElemInfo pFindInfo,
            ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeFindNextUtt(
            IntPtr thisptr, uint hFind, ref SteamElemInfo pFindInfo, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeFindCloseUt(IntPtr thisptr, uint hFind, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetLocalFileCopySt(IntPtr thisptr, string cszName, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeIsFileImmediatelyAvailableSt(IntPtr thisptr, string cszName, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeHintResourceNeedSit(
            IntPtr thisptr, string cszMasterList, int bForgetEverything, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeForgetAllHintsT(IntPtr thisptr, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativePauseCachePreloadingT(IntPtr thisptr, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeResumeCachePreloadingT(IntPtr thisptr, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeWaitForResourcesSt(IntPtr thisptr, string cszMasterList, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeStartEngineT(IntPtr thisptr, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeShutdownEngineT(IntPtr thisptr, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeStartupUt(IntPtr thisptr, uint uUsingMask, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeCleanupT(IntPtr thisptr, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeNumAppsRunningT(IntPtr thisptr, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeCreateAccountSsssssit(
            IntPtr thisptr, string cszUser, string cszEmailAddress, string cszPassphrase, string cszCreationKey,
            string cszPersonalQuestion, string cszAnswerToQuestion, ref int pbCreated, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGenerateSuggestedAccountNamesSssuut(
            IntPtr thisptr, string cszAccountNameToSelectMasterAs, string cszGenerateNamesLikeAccountName,
            StringBuilder pSuggestedNamesBuf, uint uBufSize, ref uint puNumSuggestedChars, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeIsLoggedInIt(IntPtr thisptr, ref int pbIsLoggedIn, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeLogoutT(IntPtr thisptr, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeIsSecureComputerIt(IntPtr thisptr, ref int pbIsSecureComputer, ref SteamError pError
            );

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeCreateLogContextS(IntPtr thisptr, string cszName);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeLogUs(IntPtr thisptr, uint hContext, string cszMsg);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeLogResourceLoadStartedS(IntPtr thisptr, string cszMsg);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeLogResourceLoadFinishedS(IntPtr thisptr, string cszMsg);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeRefreshLoginSit(
            IntPtr thisptr, string cszPassphrase, int bIsSecureComputer, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeVerifyPasswordSit(
            IntPtr thisptr, string cszPassphrase, ref int pbCorrect, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetUserTypeUt(IntPtr thisptr, ref uint puUserTypeFlags, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetAppStatsTt(IntPtr thisptr, ref SteamAppStats pAppStats, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeIsAccountNameInUseSit(
            IntPtr thisptr, string cszAccountName, ref int pbIsUsed, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetAppIdsUut(IntPtr thisptr, ref uint puIds, uint uMaxIds, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetSubscriptionStatsTt(
            IntPtr thisptr, ref SteamSubscriptionStats pSubscriptionStats, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeRefreshAccountInfoT(IntPtr thisptr, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeSubscribeUtt(
            IntPtr thisptr, uint uSubscriptionId, ref SteamSubscriptionBillingInfo pSubscriptionBillingInfo,
            ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeUnsubscribeUt(IntPtr thisptr, uint uSubscriptionId, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetSubscriptionReceiptUtt(
            IntPtr thisptr, uint uSubscriptionId, ref SteamSubscriptionReceipt pSteamSubscriptionReceipt,
            ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetAccountStatusUt(
            IntPtr thisptr, ref uint puAccountStatusFlags, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeSetUserSit(IntPtr thisptr, string cszUser, ref int pbUserSet, ref SteamError pError
            );

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetUserSuutt(
            IntPtr thisptr, StringBuilder szUser, uint uBufSize, ref uint puUserChars,
            ref SteamGlobalUserId pOptionalReceiveUserId, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeLoginSsit(
            IntPtr thisptr, string cszUser, string cszPassphrase, int bIsSecureComputer, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeAckSubscriptionReceiptUt(
            IntPtr thisptr, uint uSubscriptionId, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeIsAppSubscribedUiit(
            IntPtr thisptr, uint uAppId, ref int pbIsAppSubscribed, ref int pbIsSubscriptionPending,
            ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetSubscriptionIdsUut(
            IntPtr thisptr, ref uint puIds, uint uMaxIds, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeEnumerateSubscriptionUtt(
            IntPtr thisptr, uint uSubscriptionId, ref SteamSubscription pSubscription, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeEnumerateSubscriptionDiscountUutt(
            IntPtr thisptr, uint uSubscriptionId, uint uDiscountIndex,
            ref SteamSubscriptionDiscount pSteamSubscriptionDiscount, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeEnumerateSubscriptionDiscountQualifierUuutt(
            IntPtr thisptr, uint uSubscriptionId, uint uDiscountIndex, uint uQualifierIndex,
            ref SteamDiscountQualifier pSteamDiscountQualifier, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeEnumerateAppUtt(
            IntPtr thisptr, uint uAppId, ref SteamApp pApp, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeEnumerateAppLaunchOptionUutt(
            IntPtr thisptr, uint uAppId, uint uLaunchOptionIndex, ref SteamAppLaunchOption pLaunchOption,
            ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeDeleteAccountT(IntPtr thisptr, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeEnumerateAppIconUubuut(
            IntPtr thisptr, uint uAppId, uint uIconIndex, byte[] pIconData, uint uIconDataBufSize,
            ref uint puSizeOfIconData, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeLaunchAppUust(
            IntPtr thisptr, uint uAppId, uint uLaunchOption, string cszArgs, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetCacheFilePathUsuut(
            IntPtr thisptr, uint uAppId, StringBuilder szFilePath, uint uBufferLength, ref uint puRecievedLength,
            ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeEnumerateAppVersionUutt(
            IntPtr thisptr, uint uAppId, uint uVersionIndex, ref SteamAppVersion pAppVersion, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeEnumerateAppDependencyUutt(
            IntPtr thisptr, uint uAppId, uint uIndex, ref SteamAppDependencyInfo pDependencyInfo,
            ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeStartLoadingCacheUt(IntPtr thisptr, uint uAppId, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeInsertAppDependencyUutt(
            IntPtr thisptr, uint uAppId, uint uFileSystemIndex, ref SteamAppDependencyInfo pDependencyInfo,
            ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeRemoveAppDependencyUut(
            IntPtr thisptr, uint uAppId, uint uFileSystemIndex, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeFindAppSut(
            IntPtr thisptr, string cszAppName, ref uint puAppId, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetAppDependenciesUuut(
            IntPtr thisptr, uint uAppId, ref uint puCacheIds, uint uMaxIds, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeIsSubscribedUiit(
            IntPtr thisptr, uint uSubscriptionId, ref int pbIsSubscribed, ref int pbIsSubscriptionPending,
            ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetAppUserDefinedInfoUssuut(
            IntPtr thisptr, uint uAppId, string cszPropertyName, StringBuilder szPropertyValue, uint uBufSize,
            ref uint puPropertyValueLength, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeWaitForAppReadyToLaunchUt(IntPtr thisptr, uint uAppId, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeIsCacheLoadingEnabledUit(
            IntPtr thisptr, uint uAppId, ref int pbIsLoading, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeStopLoadingCacheUt(IntPtr thisptr, uint uAppId, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ESteamError NativeGetEncryptedUserIdTicketBubuut(
            IntPtr thisptr, byte[] pEncryptionKeyReceivedFromAppServer, uint uEncryptionKeyLength, byte[] pOutputBuffer,
            uint uSizeOfOutputBuffer, ref uint pReceiveSizeOfEncryptedTicket, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeFlushCacheUt(IntPtr thisptr, uint uAppId, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeRepairOrDecryptCachesUit(
            IntPtr thisptr, uint uAppId, int bForceValidation, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeLoadCacheFromDirUst(
            IntPtr thisptr, uint uAppId, string cszPath, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetCacheDefaultDirectorySt(
            IntPtr thisptr, StringBuilder szPath, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeSetCacheDefaultDirectorySt(IntPtr thisptr, string cszPath, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetAppDirUst(
            IntPtr thisptr, uint uAppId, StringBuilder szAppDir, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeMoveAppUst(IntPtr thisptr, uint uAppId, string szPath, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetAppCacheSizeUut(
            IntPtr thisptr, uint uAppId, ref uint puCacheSizeInMb, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeSetAppCacheSizeUut(
            IntPtr thisptr, uint uAppId, uint uCacheSizeInMb, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeSetAppVersionUut(
            IntPtr thisptr, uint uAppId, uint uAppVersionId, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeUninstallT(IntPtr thisptr, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeSetNotificationCallbackIt(
            IntPtr thisptr, ref IntPtr pCallbackFunction, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeChangeForgottenPasswordSsssit(
            IntPtr thisptr, string cszUser, string cszAnswerToQuestion, string cszEmailVerificationKey,
            string cszNewPassphrase, ref int pbChanged, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeRequestForgottenPasswordEmailSst(
            IntPtr thisptr, string cszUser, StringBuilder receivePersonalQuestion, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeRequestAccountsByEmailAddressEmailSt(
            IntPtr thisptr, string cszEmailAddress, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeRequestAccountsByCdKeyEmailSt(
            IntPtr thisptr, string cszCdKey, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetNumAccountsWithEmailAddressSut(
            IntPtr thisptr, string cszEmailAddress, ref uint puNumAccounts, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeUpdateAccountBillingInfoTt(
            IntPtr thisptr, ref SteamPaymentCardInfo pPaymentCardInfo, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeUpdateSubscriptionBillingInfoUtt(
            IntPtr thisptr, uint uSubscriptionId, ref SteamSubscriptionBillingInfo pSubscriptionBillingInfo,
            ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetSponsorUrlUsuut(
            IntPtr thisptr, uint uAppId, StringBuilder szUrl, uint uBufSize, ref uint pUrlChars, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetContentServerInfoUuut(
            IntPtr thisptr, uint uAppId, ref uint puServerId, ref uint puServerIpAddress, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetAppUpdateStatsUett(
            IntPtr thisptr, uint uAppOrCacheId, ESteamAppUpdateStatsQueryType eQueryType,
            ref SteamUpdateStats pUpdateStats, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetTotalUpdateStatsTt(
            IntPtr thisptr, ref SteamUpdateStats pUpdateStats, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeCreateCachePreloadersT(IntPtr thisptr, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeWin32SetMiniDumpCommentS(IntPtr thisptr, string cszComment);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeWin32SetMiniDumpSourceControlIdU(IntPtr thisptr, uint uSourceControlId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeWin32SetMiniDumpEnableFullMemory(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeWin32WriteMiniDumpSsssu(
            IntPtr thisptr, string szErrorOrAssertType, string szDescriptionOrAssertName, string szAssertExpr,
            string szAssertFilename, uint uAssertLineNumber);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetCurrentAppIdUt(IntPtr thisptr, ref uint puAppId, ref SteamError pError);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetAppPurchaseCountryUsuit(
            IntPtr thisptr, uint uAppId, StringBuilder szCountryCode, uint uBufferLength, ref int piRecievedLength,
            ref SteamError pError);
    };
}