// This file is automatically generated.

using System;
using System.Runtime.InteropServices;
using System.Text;

namespace Steam4Net
{
    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    public class SteamRemoteStorage005VTable
    {
        public IntPtr FileWrite0;
        public IntPtr FileRead1;
        public IntPtr FileForget2;
        public IntPtr FileDelete3;
        public IntPtr FileShare4;
        public IntPtr SetSyncPlatforms5;
        public IntPtr FileExists6;
        public IntPtr FilePersisted7;
        public IntPtr GetFileSize8;
        public IntPtr GetFileTimestamp9;
        public IntPtr GetSyncPlatforms10;
        public IntPtr GetFileCount11;
        public IntPtr GetFileNameAndSize12;
        public IntPtr GetQuota13;
        public IntPtr IsCloudEnabledForAccount14;
        public IntPtr IsCloudEnabledForApp15;
        public IntPtr SetCloudEnabledForApp16;
        public IntPtr UGCDownload17;
        public IntPtr GetUGCDetails18;
        public IntPtr UGCRead19;
        public IntPtr GetCachedUGCCount20;
        public IntPtr GetCachedUGCHandle21;
        public IntPtr PublishFile22;
        public IntPtr PublishWorkshopFile23;
        public IntPtr UpdatePublishedFile24;
        public IntPtr GetPublishedFileDetails25;
        public IntPtr DeletePublishedFile26;
        public IntPtr EnumerateUserPublishedFiles27;
        public IntPtr SubscribePublishedFile28;
        public IntPtr EnumerateUserSubscribedFiles29;
        public IntPtr UnsubscribePublishedFile30;
        private IntPtr DTorISteamRemoteStorage00531;
    };

    [InteropHelp.InterfaceVersionAttribute("STEAMREMOTESTORAGE_INTERFACE_VERSION005")]
    public class SteamRemoteStorage005 : InteropHelp.NativeWrapper<SteamRemoteStorage005VTable>
    {
        public bool FileWrite(string pchFile, byte[] pvData)
        {
            return GetFunction<NativeFileWriteSbi>(Functions.FileWrite0)(ObjectAddress, pchFile, pvData, pvData.Length);
        }

        public int FileRead(string pchFile, byte[] pvData)
        {
            return GetFunction<NativeFileReadSbi>(Functions.FileRead1)(ObjectAddress, pchFile, pvData, pvData.Length);
        }

        public bool FileForget(string pchFile)
        {
            return GetFunction<NativeFileForgetS>(Functions.FileForget2)(ObjectAddress, pchFile);
        }

        public bool FileDelete(string pchFile)
        {
            return GetFunction<NativeFileDeleteS>(Functions.FileDelete3)(ObjectAddress, pchFile);
        }

        public ulong FileShare(string pchFile)
        {
            return GetFunction<NativeFileShareS>(Functions.FileShare4)(ObjectAddress, pchFile);
        }

        public bool SetSyncPlatforms(string pchFile, ERemoteStoragePlatform eRemoteStoragePlatform)
        {
            return GetFunction<NativeSetSyncPlatformsSe>(Functions.SetSyncPlatforms5)(ObjectAddress, pchFile,
                eRemoteStoragePlatform);
        }

        public bool FileExists(string pchFile)
        {
            return GetFunction<NativeFileExistsS>(Functions.FileExists6)(ObjectAddress, pchFile);
        }

        public bool FilePersisted(string pchFile)
        {
            return GetFunction<NativeFilePersistedS>(Functions.FilePersisted7)(ObjectAddress, pchFile);
        }

        public int GetFileSize(string pchFile)
        {
            return GetFunction<NativeGetFileSizeS>(Functions.GetFileSize8)(ObjectAddress, pchFile);
        }

        public long GetFileTimestamp(string pchFile)
        {
            return GetFunction<NativeGetFileTimestampS>(Functions.GetFileTimestamp9)(ObjectAddress, pchFile);
        }

        public ERemoteStoragePlatform GetSyncPlatforms(string pchFile)
        {
            return GetFunction<NativeGetSyncPlatformsS>(Functions.GetSyncPlatforms10)(ObjectAddress, pchFile);
        }

        public int GetFileCount()
        {
            return GetFunction<NativeGetFileCount>(Functions.GetFileCount11)(ObjectAddress);
        }

        public string GetFileNameAndSize(int iFile, ref int pnFileSizeInBytes)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetFileNameAndSizeIi>(Functions.GetFileNameAndSize12)(ObjectAddress, iFile,
                            ref pnFileSizeInBytes)));
        }

        public bool GetQuota(ref int pnTotalBytes, ref int puAvailableBytes)
        {
            return GetFunction<NativeGetQuotaIi>(Functions.GetQuota13)(ObjectAddress, ref pnTotalBytes,
                ref puAvailableBytes);
        }

        public bool IsCloudEnabledForAccount()
        {
            return GetFunction<NativeIsCloudEnabledForAccount>(Functions.IsCloudEnabledForAccount14)(ObjectAddress);
        }

        public bool IsCloudEnabledForApp()
        {
            return GetFunction<NativeIsCloudEnabledForApp>(Functions.IsCloudEnabledForApp15)(ObjectAddress);
        }

        public void SetCloudEnabledForApp(bool bEnabled)
        {
            GetFunction<NativeSetCloudEnabledForAppB>(Functions.SetCloudEnabledForApp16)(ObjectAddress, bEnabled);
        }

        public ulong UgcDownload(ulong hContent)
        {
            return GetFunction<NativeUgcDownloadU>(Functions.UGCDownload17)(ObjectAddress, hContent);
        }

        public bool GetUgcDetails(ulong hContent, ref uint pnAppId, StringBuilder ppchName, ref int pnFileSizeInBytes,
            ref CSteamId pSteamIdOwner)
        {
            ulong s0 = 0;
            var result = GetFunction<NativeGetUgcDetailsUusic>(Functions.GetUGCDetails18)(ObjectAddress, hContent,
                ref pnAppId, ppchName, ref pnFileSizeInBytes, ref s0);
            pSteamIdOwner = new CSteamId(s0);
            return result;
        }

        public int UgcRead(ulong hContent, byte[] pvData)
        {
            return GetFunction<NativeUgcReadUbi>(Functions.UGCRead19)(ObjectAddress, hContent, pvData, pvData.Length);
        }

        public int GetCachedUgcCount()
        {
            return GetFunction<NativeGetCachedUgcCount>(Functions.GetCachedUGCCount20)(ObjectAddress);
        }

        public ulong GetCachedUgcHandle(int iCachedContent)
        {
            return GetFunction<NativeGetCachedUgcHandleI>(Functions.GetCachedUGCHandle21)(ObjectAddress, iCachedContent);
        }

        public ulong PublishFile(string pchFile, string pchPreviewFile, uint nConsumerAppId, string pchTitle,
            string pchDescription, ERemoteStoragePublishedFileVisibility eVisibility, ref SteamParamStringArrayT pTags)
        {
            return GetFunction<NativePublishFileSsusses>(Functions.PublishFile22)(ObjectAddress, pchFile, pchPreviewFile,
                nConsumerAppId, pchTitle, pchDescription, eVisibility, ref pTags);
        }

        public ulong PublishWorkshopFile(string pchFile, string pchPreviewFile, uint nConsumerAppId, string pchTitle,
            string pchDescription, ref SteamParamStringArrayT pTags)
        {
            return GetFunction<NativePublishWorkshopFileSsusss>(Functions.PublishWorkshopFile23)(ObjectAddress, pchFile,
                pchPreviewFile, nConsumerAppId, pchTitle, pchDescription, ref pTags);
        }

        public ulong UpdatePublishedFile(RemoteStorageUpdatePublishedFileRequestT updatePublishedFileRequest)
        {
            return GetFunction<NativeUpdatePublishedFileR>(Functions.UpdatePublishedFile24)(ObjectAddress,
                updatePublishedFileRequest);
        }

        public ulong GetPublishedFileDetails(ulong unPublishedFileId)
        {
            return GetFunction<NativeGetPublishedFileDetailsU>(Functions.GetPublishedFileDetails25)(ObjectAddress,
                unPublishedFileId);
        }

        public ulong DeletePublishedFile(ulong unPublishedFileId)
        {
            return GetFunction<NativeDeletePublishedFileU>(Functions.DeletePublishedFile26)(ObjectAddress,
                unPublishedFileId);
        }

        public ulong EnumerateUserPublishedFiles(uint unStartIndex)
        {
            return
                GetFunction<NativeEnumerateUserPublishedFilesU>(Functions.EnumerateUserPublishedFiles27)(ObjectAddress,
                    unStartIndex);
        }

        public ulong SubscribePublishedFile(ulong unPublishedFileId)
        {
            return GetFunction<NativeSubscribePublishedFileU>(Functions.SubscribePublishedFile28)(ObjectAddress,
                unPublishedFileId);
        }

        public ulong EnumerateUserSubscribedFiles(uint unStartIndex)
        {
            return
                GetFunction<NativeEnumerateUserSubscribedFilesU>(Functions.EnumerateUserSubscribedFiles29)(
                    ObjectAddress, unStartIndex);
        }

        public ulong UnsubscribePublishedFile(ulong unPublishedFileId)
        {
            return GetFunction<NativeUnsubscribePublishedFileU>(Functions.UnsubscribePublishedFile30)(ObjectAddress,
                unPublishedFileId);
        }

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeFileWriteSbi(IntPtr thisptr, string pchFile, byte[] pvData, int cubData);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeFileReadSbi(IntPtr thisptr, string pchFile, byte[] pvData, int cubDataToRead);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeFileForgetS(IntPtr thisptr, string pchFile);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeFileDeleteS(IntPtr thisptr, string pchFile);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeFileShareS(IntPtr thisptr, string pchFile);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetSyncPlatformsSe(
            IntPtr thisptr, string pchFile, ERemoteStoragePlatform eRemoteStoragePlatform);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeFileExistsS(IntPtr thisptr, string pchFile);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeFilePersistedS(IntPtr thisptr, string pchFile);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetFileSizeS(IntPtr thisptr, string pchFile);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate long NativeGetFileTimestampS(IntPtr thisptr, string pchFile);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ERemoteStoragePlatform NativeGetSyncPlatformsS(IntPtr thisptr, string pchFile);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetFileCount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetFileNameAndSizeIi(IntPtr thisptr, int iFile, ref int pnFileSizeInBytes);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetQuotaIi(IntPtr thisptr, ref int pnTotalBytes, ref int puAvailableBytes);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsCloudEnabledForAccount(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsCloudEnabledForApp(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetCloudEnabledForAppB(IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bEnabled);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeUgcDownloadU(IntPtr thisptr, ulong hContent);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetUgcDetailsUusic(
            IntPtr thisptr, ulong hContent, ref uint pnAppId, StringBuilder ppchName, ref int pnFileSizeInBytes,
            ref ulong pSteamIdOwner);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeUgcReadUbi(IntPtr thisptr, ulong hContent, byte[] pvData, int cubDataToRead);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetCachedUgcCount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeGetCachedUgcHandleI(IntPtr thisptr, int iCachedContent);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativePublishFileSsusses(
            IntPtr thisptr, string pchFile, string pchPreviewFile, uint nConsumerAppId, string pchTitle,
            string pchDescription, ERemoteStoragePublishedFileVisibility eVisibility, ref SteamParamStringArrayT pTags);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativePublishWorkshopFileSsusss(
            IntPtr thisptr, string pchFile, string pchPreviewFile, uint nConsumerAppId, string pchTitle,
            string pchDescription, ref SteamParamStringArrayT pTags);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeUpdatePublishedFileR(
            IntPtr thisptr, RemoteStorageUpdatePublishedFileRequestT updatePublishedFileRequest);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeGetPublishedFileDetailsU(IntPtr thisptr, ulong unPublishedFileId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeDeletePublishedFileU(IntPtr thisptr, ulong unPublishedFileId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeEnumerateUserPublishedFilesU(IntPtr thisptr, uint unStartIndex);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeSubscribePublishedFileU(IntPtr thisptr, ulong unPublishedFileId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeEnumerateUserSubscribedFilesU(IntPtr thisptr, uint unStartIndex);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeUnsubscribePublishedFileU(IntPtr thisptr, ulong unPublishedFileId);
    };
}