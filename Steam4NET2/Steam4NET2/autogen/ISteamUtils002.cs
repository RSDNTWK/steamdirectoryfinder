// This file is automatically generated.

using System;
using System.Runtime.InteropServices;

namespace Steam4Net
{
    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    public class SteamUtils002VTable
    {
        public IntPtr GetSecondsSinceAppActive0;
        public IntPtr GetSecondsSinceComputerActive1;
        public IntPtr GetConnectedUniverse2;
        public IntPtr GetServerRealTime3;
        public IntPtr GetIPCountry4;
        public IntPtr GetImageSize5;
        public IntPtr GetImageRGBA6;
        public IntPtr GetCSERIPPort7;
        public IntPtr GetCurrentBatteryPower8;
        private IntPtr DTorISteamUtils0029;
    };

    [InteropHelp.InterfaceVersionAttribute("SteamUtils002")]
    public class SteamUtils002 : InteropHelp.NativeWrapper<SteamUtils002VTable>
    {
        public uint GetSecondsSinceAppActive()
        {
            return GetFunction<NativeGetSecondsSinceAppActive>(Functions.GetSecondsSinceAppActive0)(ObjectAddress);
        }

        public uint GetSecondsSinceComputerActive()
        {
            return
                GetFunction<NativeGetSecondsSinceComputerActive>(Functions.GetSecondsSinceComputerActive1)(ObjectAddress);
        }

        public EUniverse GetConnectedUniverse()
        {
            return GetFunction<NativeGetConnectedUniverse>(Functions.GetConnectedUniverse2)(ObjectAddress);
        }

        public uint GetServerRealTime()
        {
            return GetFunction<NativeGetServerRealTime>(Functions.GetServerRealTime3)(ObjectAddress);
        }

        public string GetIpCountry()
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(GetFunction<NativeGetIpCountry>(Functions.GetIPCountry4)(ObjectAddress)));
        }

        public bool GetImageSize(int iImage, ref uint pnWidth, ref uint pnHeight)
        {
            return GetFunction<NativeGetImageSizeIuu>(Functions.GetImageSize5)(ObjectAddress, iImage, ref pnWidth,
                ref pnHeight);
        }

        public bool GetImageRgba(int iImage, byte[] pubDest, int nDestBufferSize)
        {
            return GetFunction<NativeGetImageRgbaibi>(Functions.GetImageRGBA6)(ObjectAddress, iImage, pubDest,
                nDestBufferSize);
        }

        public bool GetCseripPort(ref uint unIp, ref ushort usPort)
        {
            return GetFunction<NativeGetCseripPortUu>(Functions.GetCSERIPPort7)(ObjectAddress, ref unIp, ref usPort);
        }

        public byte GetCurrentBatteryPower()
        {
            return GetFunction<NativeGetCurrentBatteryPower>(Functions.GetCurrentBatteryPower8)(ObjectAddress);
        }

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetSecondsSinceAppActive(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetSecondsSinceComputerActive(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EUniverse NativeGetConnectedUniverse(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetServerRealTime(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetIpCountry(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetImageSizeIuu(IntPtr thisptr, int iImage, ref uint pnWidth, ref uint pnHeight);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetImageRgbaibi(IntPtr thisptr, int iImage, byte[] pubDest, int nDestBufferSize);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetCseripPortUu(IntPtr thisptr, ref uint unIp, ref ushort usPort);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate byte NativeGetCurrentBatteryPower(IntPtr thisptr);
    };
}