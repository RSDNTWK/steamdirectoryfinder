// This file is automatically generated.

using System;
using System.Runtime.InteropServices;

namespace Steam4Net
{
    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    public class SteamUserStats001VTable
    {
        public IntPtr GetNumStats0;
        public IntPtr GetStatName1;
        public IntPtr GetStatType2;
        public IntPtr GetNumAchievements3;
        public IntPtr GetAchievementName4;
        public IntPtr GetNumGroupAchievements5;
        public IntPtr GetGroupAchievementName6;
        public IntPtr RequestCurrentStats7;
        public IntPtr GetStat8;
        public IntPtr GetStat9;
        public IntPtr SetStat10;
        public IntPtr SetStat11;
        public IntPtr UpdateAvgRateStat12;
        public IntPtr GetAchievement13;
        public IntPtr GetGroupAchievement14;
        public IntPtr SetAchievement15;
        public IntPtr SetGroupAchievement16;
        public IntPtr StoreStats17;
        public IntPtr ClearAchievement18;
        public IntPtr ClearGroupAchievement19;
        public IntPtr GetAchievementIcon20;
        public IntPtr GetAchievementDisplayAttribute21;
        private IntPtr DTorISteamUserStats00122;
    };

    [InteropHelp.InterfaceVersionAttribute("STEAMUSERSTATS_INTERFACE_VERSION001")]
    public class SteamUserStats001 : InteropHelp.NativeWrapper<SteamUserStats001VTable>
    {
        public uint GetNumStats(CGameId nGameId)
        {
            return GetFunction<NativeGetNumStatsC>(Functions.GetNumStats0)(ObjectAddress, nGameId.ConvertToUint64());
        }

        public string GetStatName(CGameId nGameId, uint iStat)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(GetFunction<NativeGetStatNameCu>(Functions.GetStatName1)(ObjectAddress,
                        nGameId.ConvertToUint64(), iStat)));
        }

        public ESteamUserStatType GetStatType(CGameId nGameId, string pchName)
        {
            return GetFunction<NativeGetStatTypeCs>(Functions.GetStatType2)(ObjectAddress, nGameId.ConvertToUint64(),
                pchName);
        }

        public uint GetNumAchievements(CGameId nGameId)
        {
            return GetFunction<NativeGetNumAchievementsC>(Functions.GetNumAchievements3)(ObjectAddress,
                nGameId.ConvertToUint64());
        }

        public string GetAchievementName(CGameId nGameId, uint iAchievement)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetAchievementNameCu>(Functions.GetAchievementName4)(ObjectAddress,
                            nGameId.ConvertToUint64(), iAchievement)));
        }

        public uint GetNumGroupAchievements(CGameId arg0)
        {
            return GetFunction<NativeGetNumGroupAchievementsC>(Functions.GetNumGroupAchievements5)(ObjectAddress,
                arg0.ConvertToUint64());
        }

        public string GetGroupAchievementName(CGameId arg0, uint iAchievement)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetGroupAchievementNameCu>(Functions.GetGroupAchievementName6)(ObjectAddress,
                            arg0.ConvertToUint64(), iAchievement)));
        }

        public bool RequestCurrentStats(CGameId nGameId)
        {
            return GetFunction<NativeRequestCurrentStatsC>(Functions.RequestCurrentStats7)(ObjectAddress,
                nGameId.ConvertToUint64());
        }

        public bool GetStat(CGameId nGameId, string pchName, ref float pData)
        {
            return GetFunction<NativeGetStatCsf>(Functions.GetStat8)(ObjectAddress, nGameId.ConvertToUint64(), pchName,
                ref pData);
        }

        public bool GetStat(CGameId nGameId, string pchName, ref int pData)
        {
            return GetFunction<NativeGetStatCsi>(Functions.GetStat9)(ObjectAddress, nGameId.ConvertToUint64(), pchName,
                ref pData);
        }

        public bool SetStat(CGameId nGameId, string pchName, float fData)
        {
            return GetFunction<NativeSetStatCsf>(Functions.SetStat10)(ObjectAddress, nGameId.ConvertToUint64(), pchName,
                fData);
        }

        public bool SetStat(CGameId nGameId, string pchName, int nData)
        {
            return GetFunction<NativeSetStatCsi>(Functions.SetStat11)(ObjectAddress, nGameId.ConvertToUint64(), pchName,
                nData);
        }

        public bool UpdateAvgRateStat(CGameId nGameId, string pchName, float arg2, double dSessionLength)
        {
            return GetFunction<NativeUpdateAvgRateStatCsfd>(Functions.UpdateAvgRateStat12)(ObjectAddress,
                nGameId.ConvertToUint64(), pchName, arg2, dSessionLength);
        }

        public bool GetAchievement(CGameId nGameId, string pchName, ref bool pbAchieved)
        {
            return GetFunction<NativeGetAchievementCsb>(Functions.GetAchievement13)(ObjectAddress,
                nGameId.ConvertToUint64(), pchName, ref pbAchieved);
        }

        public bool GetGroupAchievement(CGameId nGameId, string pchName, ref bool pbAchieved)
        {
            return GetFunction<NativeGetGroupAchievementCsb>(Functions.GetGroupAchievement14)(ObjectAddress,
                nGameId.ConvertToUint64(), pchName, ref pbAchieved);
        }

        public bool SetAchievement(CGameId nGameId, string pchName)
        {
            return GetFunction<NativeSetAchievementCs>(Functions.SetAchievement15)(ObjectAddress,
                nGameId.ConvertToUint64(), pchName);
        }

        public bool SetGroupAchievement(CGameId nGameId, string pchName)
        {
            return GetFunction<NativeSetGroupAchievementCs>(Functions.SetGroupAchievement16)(ObjectAddress,
                nGameId.ConvertToUint64(), pchName);
        }

        public bool StoreStats(CGameId nGameId)
        {
            return GetFunction<NativeStoreStatsC>(Functions.StoreStats17)(ObjectAddress, nGameId.ConvertToUint64());
        }

        public bool ClearAchievement(CGameId nGameId, string pchName)
        {
            return GetFunction<NativeClearAchievementCs>(Functions.ClearAchievement18)(ObjectAddress,
                nGameId.ConvertToUint64(), pchName);
        }

        public bool ClearGroupAchievement(CGameId nGameId, string pchName)
        {
            return GetFunction<NativeClearGroupAchievementCs>(Functions.ClearGroupAchievement19)(ObjectAddress,
                nGameId.ConvertToUint64(), pchName);
        }

        public int GetAchievementIcon(CGameId nGameId, string pchName)
        {
            return GetFunction<NativeGetAchievementIconCs>(Functions.GetAchievementIcon20)(ObjectAddress,
                nGameId.ConvertToUint64(), pchName);
        }

        public string GetAchievementDisplayAttribute(CGameId nGameId, string pchName, string pchKey)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetAchievementDisplayAttributeCss>(Functions.GetAchievementDisplayAttribute21)
                            (ObjectAddress, nGameId.ConvertToUint64(), pchName, pchKey)));
        }

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetNumStatsC(IntPtr thisptr, ulong nGameId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetStatNameCu(IntPtr thisptr, ulong nGameId, uint iStat);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ESteamUserStatType NativeGetStatTypeCs(IntPtr thisptr, ulong nGameId, string pchName);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetNumAchievementsC(IntPtr thisptr, ulong nGameId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetAchievementNameCu(IntPtr thisptr, ulong nGameId, uint iAchievement);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetNumGroupAchievementsC(IntPtr thisptr, ulong arg0);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetGroupAchievementNameCu(IntPtr thisptr, ulong arg0, uint iAchievement);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeRequestCurrentStatsC(IntPtr thisptr, ulong nGameId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetStatCsf(IntPtr thisptr, ulong nGameId, string pchName, ref float pData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetStatCsi(IntPtr thisptr, ulong nGameId, string pchName, ref int pData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetStatCsf(IntPtr thisptr, ulong nGameId, string pchName, float fData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetStatCsi(IntPtr thisptr, ulong nGameId, string pchName, int nData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeUpdateAvgRateStatCsfd(
            IntPtr thisptr, ulong nGameId, string pchName, float arg2, double dSessionLength);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetAchievementCsb(IntPtr thisptr, ulong nGameId, string pchName, ref bool pbAchieved
            );

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetGroupAchievementCsb(
            IntPtr thisptr, ulong nGameId, string pchName, ref bool pbAchieved);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetAchievementCs(IntPtr thisptr, ulong nGameId, string pchName);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetGroupAchievementCs(IntPtr thisptr, ulong nGameId, string pchName);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeStoreStatsC(IntPtr thisptr, ulong nGameId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeClearAchievementCs(IntPtr thisptr, ulong nGameId, string pchName);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeClearGroupAchievementCs(IntPtr thisptr, ulong nGameId, string pchName);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetAchievementIconCs(IntPtr thisptr, ulong nGameId, string pchName);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetAchievementDisplayAttributeCss(
            IntPtr thisptr, ulong nGameId, string pchName, string pchKey);
    };
}