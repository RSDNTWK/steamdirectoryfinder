// This file is automatically generated.

using System.Runtime.InteropServices;

namespace Steam4Net
{
    public enum Ep2PSend
    {
        KEp2PSendUnreliable = 0,
        KEp2PSendUnreliableNoDelay = 1,
        KEp2PSendReliable = 2,
        KEp2PSendReliableWithBuffering = 3
    };

    public enum Ep2PSessionError
    {
        KEp2PSessionErrorNone = 0,
        KEp2PSessionErrorNotRunningApp = 1,
        KEp2PSessionErrorNoRightsToApp = 2,
        KEp2PSessionErrorDestinationNotLoggedIn = 3,
        KEp2PSessionErrorTimeout = 4,
        KEp2PSessionErrorMax = 5
    };

    public enum EsNetSocketConnectionType
    {
        KEsNetSocketConnectionTypeNotConnected = 0,
        KEsNetSocketConnectionTypeUdp = 1,
        KEsNetSocketConnectionTypeUdpRelay = 2
    };

    public enum EsNetSocketState
    {
        KEsNetSocketStateInvalid = 0,
        KEsNetSocketStateConnected = 1,
        KEsNetSocketStateInitiated = 10,
        KEsNetSocketStateLocalCandidatesFound = 11,
        KEsNetSocketStateReceivedRemoteCandidates = 12,
        KEsNetSocketStateChallengeHandshake = 15,
        KEsNetSocketStateDisconnecting = 21,
        KEsNetSocketStateLocalDisconnect = 22,
        KEsNetSocketStateTimeoutDuringConnect = 23,
        KEsNetSocketStateRemoteEndDisconnected = 24,
        KEsNetSocketStateConnectionBroken = 25
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    public struct P2PSessionStateT
    {
        public byte m_bConnectionActive;
        public byte m_bConnecting;
        public byte m_eP2PSessionError;
        public byte m_bUsingRelay;
        public int m_nBytesQueuedForSend;
        public int m_nPacketsQueuedForSend;
        public uint m_nRemoteIP;
        public ushort m_nRemotePort;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1201)]
    public struct SocketStatusCallbackT
    {
        public const int KiCallback = 1201;
        public uint m_hSocket;
        public uint m_hListenSocket;
        public SteamIdT m_steamIDRemote;
        public int m_eSNetSocketState;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1202)]
    public struct P2PSessionRequestT
    {
        public const int KiCallback = 1202;
        public SteamIdT m_steamIDRemote;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1203)]
    public struct P2PSessionConnectFailT
    {
        public const int KiCallback = 1203;
        public SteamIdT m_steamIDRemote;
        public byte m_eP2PSessionError;
    };
}