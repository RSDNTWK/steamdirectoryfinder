// This file is automatically generated.

using System;
using System.Runtime.InteropServices;
using System.Text;

namespace Steam4Net
{
    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    public class SteamRemoteStorage003VTable
    {
        public IntPtr FileWrite0;
        public IntPtr FileRead1;
        public IntPtr FileForget2;
        public IntPtr FileDelete3;
        public IntPtr FileShare4;
        public IntPtr FileExists5;
        public IntPtr FilePersisted6;
        public IntPtr GetFileSize7;
        public IntPtr GetFileTimestamp8;
        public IntPtr GetFileCount9;
        public IntPtr GetFileNameAndSize10;
        public IntPtr GetQuota11;
        public IntPtr IsCloudEnabledForAccount12;
        public IntPtr IsCloudEnabledThisApp13;
        public IntPtr SetCloudEnabledThisApp14;
        public IntPtr UGCDownload15;
        public IntPtr GetUGCDetails16;
        public IntPtr UGCRead17;
        public IntPtr GetCachedUGCCount18;
        public IntPtr GetCachedUGCHandle19;
        private IntPtr DTorISteamRemoteStorage00320;
    };

    [InteropHelp.InterfaceVersionAttribute("STEAMREMOTESTORAGE_INTERFACE_VERSION003")]
    public class SteamRemoteStorage003 : InteropHelp.NativeWrapper<SteamRemoteStorage003VTable>
    {
        public bool FileWrite(string pchFile, byte[] pvData)
        {
            return GetFunction<NativeFileWriteSbi>(Functions.FileWrite0)(ObjectAddress, pchFile, pvData, pvData.Length);
        }

        public int FileRead(string pchFile, byte[] pvData)
        {
            return GetFunction<NativeFileReadSbi>(Functions.FileRead1)(ObjectAddress, pchFile, pvData, pvData.Length);
        }

        public bool FileForget(string pchFile)
        {
            return GetFunction<NativeFileForgetS>(Functions.FileForget2)(ObjectAddress, pchFile);
        }

        public bool FileDelete(string pchFile)
        {
            return GetFunction<NativeFileDeleteS>(Functions.FileDelete3)(ObjectAddress, pchFile);
        }

        public ulong FileShare(string pchFile)
        {
            return GetFunction<NativeFileShareS>(Functions.FileShare4)(ObjectAddress, pchFile);
        }

        public bool FileExists(string pchFile)
        {
            return GetFunction<NativeFileExistsS>(Functions.FileExists5)(ObjectAddress, pchFile);
        }

        public bool FilePersisted(string pchFile)
        {
            return GetFunction<NativeFilePersistedS>(Functions.FilePersisted6)(ObjectAddress, pchFile);
        }

        public int GetFileSize(string pchFile)
        {
            return GetFunction<NativeGetFileSizeS>(Functions.GetFileSize7)(ObjectAddress, pchFile);
        }

        public long GetFileTimestamp(string pchFile)
        {
            return GetFunction<NativeGetFileTimestampS>(Functions.GetFileTimestamp8)(ObjectAddress, pchFile);
        }

        public int GetFileCount()
        {
            return GetFunction<NativeGetFileCount>(Functions.GetFileCount9)(ObjectAddress);
        }

        public string GetFileNameAndSize(int iFile, ref int pnFileSizeInBytes)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetFileNameAndSizeIi>(Functions.GetFileNameAndSize10)(ObjectAddress, iFile,
                            ref pnFileSizeInBytes)));
        }

        public bool GetQuota(ref int pnTotalBytes, ref int puAvailableBytes)
        {
            return GetFunction<NativeGetQuotaIi>(Functions.GetQuota11)(ObjectAddress, ref pnTotalBytes,
                ref puAvailableBytes);
        }

        public bool IsCloudEnabledForAccount()
        {
            return GetFunction<NativeIsCloudEnabledForAccount>(Functions.IsCloudEnabledForAccount12)(ObjectAddress);
        }

        public bool IsCloudEnabledThisApp()
        {
            return GetFunction<NativeIsCloudEnabledThisApp>(Functions.IsCloudEnabledThisApp13)(ObjectAddress);
        }

        public bool SetCloudEnabledThisApp(bool bEnable)
        {
            return GetFunction<NativeSetCloudEnabledThisAppB>(Functions.SetCloudEnabledThisApp14)(ObjectAddress, bEnable);
        }

        public ulong UgcDownload(ulong hContent)
        {
            return GetFunction<NativeUgcDownloadU>(Functions.UGCDownload15)(ObjectAddress, hContent);
        }

        public bool GetUgcDetails(ulong hContent, ref uint pnAppId, StringBuilder ppchName, ref int pnFileSizeInBytes,
            ref CSteamId pSteamIdOwner)
        {
            ulong s0 = 0;
            var result = GetFunction<NativeGetUgcDetailsUusic>(Functions.GetUGCDetails16)(ObjectAddress, hContent,
                ref pnAppId, ppchName, ref pnFileSizeInBytes, ref s0);
            pSteamIdOwner = new CSteamId(s0);
            return result;
        }

        public int UgcRead(ulong hContent, byte[] pvData)
        {
            return GetFunction<NativeUgcReadUbi>(Functions.UGCRead17)(ObjectAddress, hContent, pvData, pvData.Length);
        }

        public int GetCachedUgcCount()
        {
            return GetFunction<NativeGetCachedUgcCount>(Functions.GetCachedUGCCount18)(ObjectAddress);
        }

        public ulong GetCachedUgcHandle(int iCachedContent)
        {
            return GetFunction<NativeGetCachedUgcHandleI>(Functions.GetCachedUGCHandle19)(ObjectAddress, iCachedContent);
        }

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeFileWriteSbi(IntPtr thisptr, string pchFile, byte[] pvData, int cubData);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeFileReadSbi(IntPtr thisptr, string pchFile, byte[] pvData, int cubDataToRead);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeFileForgetS(IntPtr thisptr, string pchFile);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeFileDeleteS(IntPtr thisptr, string pchFile);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeFileShareS(IntPtr thisptr, string pchFile);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeFileExistsS(IntPtr thisptr, string pchFile);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeFilePersistedS(IntPtr thisptr, string pchFile);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetFileSizeS(IntPtr thisptr, string pchFile);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate long NativeGetFileTimestampS(IntPtr thisptr, string pchFile);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetFileCount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetFileNameAndSizeIi(IntPtr thisptr, int iFile, ref int pnFileSizeInBytes);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetQuotaIi(IntPtr thisptr, ref int pnTotalBytes, ref int puAvailableBytes);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsCloudEnabledForAccount(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsCloudEnabledThisApp(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetCloudEnabledThisAppB(IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bEnable);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeUgcDownloadU(IntPtr thisptr, ulong hContent);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetUgcDetailsUusic(
            IntPtr thisptr, ulong hContent, ref uint pnAppId, StringBuilder ppchName, ref int pnFileSizeInBytes,
            ref ulong pSteamIdOwner);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeUgcReadUbi(IntPtr thisptr, ulong hContent, byte[] pvData, int cubDataToRead);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetCachedUgcCount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeGetCachedUgcHandleI(IntPtr thisptr, int iCachedContent);
    };
}