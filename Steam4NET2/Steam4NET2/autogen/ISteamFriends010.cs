// This file is automatically generated.

using System;
using System.Runtime.InteropServices;

namespace Steam4Net
{
    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    public class SteamFriends010VTable
    {
        public IntPtr GetPersonaName0;
        public IntPtr SetPersonaName1;
        public IntPtr GetPersonaState2;
        public IntPtr GetFriendCount3;
        public IntPtr GetFriendByIndex4;
        public IntPtr GetFriendRelationship5;
        public IntPtr GetFriendPersonaState6;
        public IntPtr GetFriendPersonaName7;
        public IntPtr GetFriendGamePlayed8;
        public IntPtr GetFriendPersonaNameHistory9;
        public IntPtr HasFriend10;
        public IntPtr GetClanCount11;
        public IntPtr GetClanByIndex12;
        public IntPtr GetClanName13;
        public IntPtr GetClanTag14;
        public IntPtr GetClanActivityCounts15;
        public IntPtr DownloadClanActivityCounts16;
        public IntPtr GetFriendCountFromSource17;
        public IntPtr GetFriendFromSourceByIndex18;
        public IntPtr IsUserInSource19;
        public IntPtr SetInGameVoiceSpeaking20;
        public IntPtr ActivateGameOverlay21;
        public IntPtr ActivateGameOverlayToUser22;
        public IntPtr ActivateGameOverlayToWebPage23;
        public IntPtr ActivateGameOverlayToStore24;
        public IntPtr SetPlayedWith25;
        public IntPtr ActivateGameOverlayInviteDialog26;
        public IntPtr GetSmallFriendAvatar27;
        public IntPtr GetMediumFriendAvatar28;
        public IntPtr GetLargeFriendAvatar29;
        public IntPtr RequestUserInformation30;
        public IntPtr RequestClanOfficerList31;
        public IntPtr GetClanOwner32;
        public IntPtr GetClanOfficerCount33;
        public IntPtr GetClanOfficerByIndex34;
        public IntPtr GetUserRestrictions35;
        public IntPtr SetRichPresence36;
        public IntPtr ClearRichPresence37;
        public IntPtr GetFriendRichPresence38;
        public IntPtr GetFriendRichPresenceKeyCount39;
        public IntPtr GetFriendRichPresenceKeyByIndex40;
        public IntPtr InviteUserToGame41;
        public IntPtr GetCoplayFriendCount42;
        public IntPtr GetCoplayFriend43;
        public IntPtr GetFriendCoplayTime44;
        public IntPtr GetFriendCoplayGame45;
        public IntPtr JoinClanChatRoom46;
        public IntPtr LeaveClanChatRoom47;
        public IntPtr GetClanChatMemberCount48;
        public IntPtr GetChatMemberByIndex49;
        public IntPtr SendClanChatMessage50;
        public IntPtr GetClanChatMessage51;
        public IntPtr IsClanChatAdmin52;
        public IntPtr IsClanChatWindowOpenInSteam53;
        public IntPtr OpenClanChatWindowInSteam54;
        public IntPtr CloseClanChatWindowInSteam55;
        public IntPtr SetListenForFriendsMessages56;
        public IntPtr ReplyToFriendMessage57;
        public IntPtr GetFriendMessage58;
        private IntPtr DTorISteamFriends01059;
    };

    [InteropHelp.InterfaceVersionAttribute("SteamFriends010")]
    public class SteamFriends010 : InteropHelp.NativeWrapper<SteamFriends010VTable>
    {
        public string GetPersonaName()
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(GetFunction<NativeGetPersonaName>(Functions.GetPersonaName0)(ObjectAddress)));
        }

        public void SetPersonaName(string pchPersonaName)
        {
            GetFunction<NativeSetPersonaNameS>(Functions.SetPersonaName1)(ObjectAddress, pchPersonaName);
        }

        public EPersonaState GetPersonaState()
        {
            return GetFunction<NativeGetPersonaState>(Functions.GetPersonaState2)(ObjectAddress);
        }

        public int GetFriendCount(int iFriendFlags)
        {
            return GetFunction<NativeGetFriendCountI>(Functions.GetFriendCount3)(ObjectAddress, iFriendFlags);
        }

        public CSteamId GetFriendByIndex(int iFriend, int iFriendFlags)
        {
            ulong ret = 0;
            GetFunction<NativeGetFriendByIndexIi>(Functions.GetFriendByIndex4)(ObjectAddress, ref ret, iFriend,
                iFriendFlags);
            return new CSteamId(ret);
        }

        public EFriendRelationship GetFriendRelationship(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetFriendRelationshipC>(Functions.GetFriendRelationship5)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public EPersonaState GetFriendPersonaState(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetFriendPersonaStateC>(Functions.GetFriendPersonaState6)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public string GetFriendPersonaName(CSteamId steamIdFriend)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetFriendPersonaNameC>(Functions.GetFriendPersonaName7)(ObjectAddress,
                            steamIdFriend.ConvertToUint64())));
        }

        public bool GetFriendGamePlayed(CSteamId steamIdFriend, ref FriendGameInfoT pFriendGameInfo)
        {
            return GetFunction<NativeGetFriendGamePlayedCf>(Functions.GetFriendGamePlayed8)(ObjectAddress,
                steamIdFriend.ConvertToUint64(), ref pFriendGameInfo);
        }

        public string GetFriendPersonaNameHistory(CSteamId steamIdFriend, int iPersonaName)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetFriendPersonaNameHistoryCi>(Functions.GetFriendPersonaNameHistory9)(
                            ObjectAddress, steamIdFriend.ConvertToUint64(), iPersonaName)));
        }

        public bool HasFriend(CSteamId steamIdFriend, int iFriendFlags)
        {
            return GetFunction<NativeHasFriendCi>(Functions.HasFriend10)(ObjectAddress, steamIdFriend.ConvertToUint64(),
                iFriendFlags);
        }

        public int GetClanCount()
        {
            return GetFunction<NativeGetClanCount>(Functions.GetClanCount11)(ObjectAddress);
        }

        public CSteamId GetClanByIndex(int iClan)
        {
            ulong ret = 0;
            GetFunction<NativeGetClanByIndexI>(Functions.GetClanByIndex12)(ObjectAddress, ref ret, iClan);
            return new CSteamId(ret);
        }

        public string GetClanName(CSteamId steamIdClan)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(GetFunction<NativeGetClanNameC>(Functions.GetClanName13)(ObjectAddress,
                        steamIdClan.ConvertToUint64())));
        }

        public string GetClanTag(CSteamId steamIdClan)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(GetFunction<NativeGetClanTagC>(Functions.GetClanTag14)(ObjectAddress,
                        steamIdClan.ConvertToUint64())));
        }

        public bool GetClanActivityCounts(CSteamId steamId, ref int pnOnline, ref int pnInGame, ref int pnChatting)
        {
            return GetFunction<NativeGetClanActivityCountsCiii>(Functions.GetClanActivityCounts15)(ObjectAddress,
                steamId.ConvertToUint64(), ref pnOnline, ref pnInGame, ref pnChatting);
        }

        public ulong DownloadClanActivityCounts(ref CSteamId groupIDs, int nIds)
        {
            ulong s0 = 0;
            var result =
                GetFunction<NativeDownloadClanActivityCountsCi>(Functions.DownloadClanActivityCounts16)(ObjectAddress,
                    ref s0, nIds);
            groupIDs = new CSteamId(s0);
            return result;
        }

        public int GetFriendCountFromSource(CSteamId steamIdSource)
        {
            return GetFunction<NativeGetFriendCountFromSourceC>(Functions.GetFriendCountFromSource17)(ObjectAddress,
                steamIdSource.ConvertToUint64());
        }

        public CSteamId GetFriendFromSourceByIndex(CSteamId steamIdSource, int iFriend)
        {
            ulong ret = 0;
            GetFunction<NativeGetFriendFromSourceByIndexCi>(Functions.GetFriendFromSourceByIndex18)(ObjectAddress,
                ref ret, steamIdSource.ConvertToUint64(), iFriend);
            return new CSteamId(ret);
        }

        public bool IsUserInSource(CSteamId steamIdUser, CSteamId steamIdSource)
        {
            return GetFunction<NativeIsUserInSourceCc>(Functions.IsUserInSource19)(ObjectAddress,
                steamIdUser.ConvertToUint64(), steamIdSource.ConvertToUint64());
        }

        public void SetInGameVoiceSpeaking(CSteamId steamIdUser, bool bSpeaking)
        {
            GetFunction<NativeSetInGameVoiceSpeakingCb>(Functions.SetInGameVoiceSpeaking20)(ObjectAddress,
                steamIdUser.ConvertToUint64(), bSpeaking);
        }

        public void ActivateGameOverlay(string pchDialog)
        {
            GetFunction<NativeActivateGameOverlayS>(Functions.ActivateGameOverlay21)(ObjectAddress, pchDialog);
        }

        public void ActivateGameOverlayToUser(string pchDialog, CSteamId steamId)
        {
            GetFunction<NativeActivateGameOverlayToUserSc>(Functions.ActivateGameOverlayToUser22)(ObjectAddress,
                pchDialog, steamId.ConvertToUint64());
        }

        public void ActivateGameOverlayToWebPage(string pchUrl)
        {
            GetFunction<NativeActivateGameOverlayToWebPageS>(Functions.ActivateGameOverlayToWebPage23)(ObjectAddress,
                pchUrl);
        }

        public void ActivateGameOverlayToStore(uint nAppId)
        {
            GetFunction<NativeActivateGameOverlayToStoreU>(Functions.ActivateGameOverlayToStore24)(ObjectAddress, nAppId);
        }

        public void SetPlayedWith(CSteamId steamIdUserPlayedWith)
        {
            GetFunction<NativeSetPlayedWithC>(Functions.SetPlayedWith25)(ObjectAddress,
                steamIdUserPlayedWith.ConvertToUint64());
        }

        public void ActivateGameOverlayInviteDialog(CSteamId steamIdLobby)
        {
            GetFunction<NativeActivateGameOverlayInviteDialogC>(Functions.ActivateGameOverlayInviteDialog26)(
                ObjectAddress, steamIdLobby.ConvertToUint64());
        }

        public int GetSmallFriendAvatar(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetSmallFriendAvatarC>(Functions.GetSmallFriendAvatar27)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public int GetMediumFriendAvatar(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetMediumFriendAvatarC>(Functions.GetMediumFriendAvatar28)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public int GetLargeFriendAvatar(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetLargeFriendAvatarC>(Functions.GetLargeFriendAvatar29)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public bool RequestUserInformation(CSteamId steamIdUser, bool bRequireNameOnly)
        {
            return GetFunction<NativeRequestUserInformationCb>(Functions.RequestUserInformation30)(ObjectAddress,
                steamIdUser.ConvertToUint64(), bRequireNameOnly);
        }

        public ulong RequestClanOfficerList(CSteamId steamIdClan)
        {
            return GetFunction<NativeRequestClanOfficerListC>(Functions.RequestClanOfficerList31)(ObjectAddress,
                steamIdClan.ConvertToUint64());
        }

        public CSteamId GetClanOwner(CSteamId steamIdClan)
        {
            ulong ret = 0;
            GetFunction<NativeGetClanOwnerC>(Functions.GetClanOwner32)(ObjectAddress, ref ret,
                steamIdClan.ConvertToUint64());
            return new CSteamId(ret);
        }

        public int GetClanOfficerCount(CSteamId steamIdClan)
        {
            return GetFunction<NativeGetClanOfficerCountC>(Functions.GetClanOfficerCount33)(ObjectAddress,
                steamIdClan.ConvertToUint64());
        }

        public CSteamId GetClanOfficerByIndex(CSteamId steamIdClan, int iOfficer)
        {
            ulong ret = 0;
            GetFunction<NativeGetClanOfficerByIndexCi>(Functions.GetClanOfficerByIndex34)(ObjectAddress, ref ret,
                steamIdClan.ConvertToUint64(), iOfficer);
            return new CSteamId(ret);
        }

        public EUserRestriction GetUserRestrictions()
        {
            return GetFunction<NativeGetUserRestrictions>(Functions.GetUserRestrictions35)(ObjectAddress);
        }

        public bool SetRichPresence(string pchKey, string pchValue)
        {
            return GetFunction<NativeSetRichPresenceSs>(Functions.SetRichPresence36)(ObjectAddress, pchKey, pchValue);
        }

        public void ClearRichPresence()
        {
            GetFunction<NativeClearRichPresence>(Functions.ClearRichPresence37)(ObjectAddress);
        }

        public string GetFriendRichPresence(CSteamId steamIdFriend, string pchKey)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetFriendRichPresenceCs>(Functions.GetFriendRichPresence38)(ObjectAddress,
                            steamIdFriend.ConvertToUint64(), pchKey)));
        }

        public int GetFriendRichPresenceKeyCount(CSteamId steamIdFriend)
        {
            return
                GetFunction<NativeGetFriendRichPresenceKeyCountC>(Functions.GetFriendRichPresenceKeyCount39)(
                    ObjectAddress, steamIdFriend.ConvertToUint64());
        }

        public string GetFriendRichPresenceKeyByIndex(CSteamId steamIdFriend, int iKey)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetFriendRichPresenceKeyByIndexCi>(Functions.GetFriendRichPresenceKeyByIndex40)
                            (ObjectAddress, steamIdFriend.ConvertToUint64(), iKey)));
        }

        public bool InviteUserToGame(CSteamId steamIdFriend, string pchConnectString)
        {
            return GetFunction<NativeInviteUserToGameCs>(Functions.InviteUserToGame41)(ObjectAddress,
                steamIdFriend.ConvertToUint64(), pchConnectString);
        }

        public int GetCoplayFriendCount()
        {
            return GetFunction<NativeGetCoplayFriendCount>(Functions.GetCoplayFriendCount42)(ObjectAddress);
        }

        public CSteamId GetCoplayFriend(int iCoplayFriend)
        {
            ulong ret = 0;
            GetFunction<NativeGetCoplayFriendI>(Functions.GetCoplayFriend43)(ObjectAddress, ref ret, iCoplayFriend);
            return new CSteamId(ret);
        }

        public int GetFriendCoplayTime(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetFriendCoplayTimeC>(Functions.GetFriendCoplayTime44)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public uint GetFriendCoplayGame(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetFriendCoplayGameC>(Functions.GetFriendCoplayGame45)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public ulong JoinClanChatRoom(CSteamId groupId)
        {
            return GetFunction<NativeJoinClanChatRoomC>(Functions.JoinClanChatRoom46)(ObjectAddress,
                groupId.ConvertToUint64());
        }

        public bool LeaveClanChatRoom(CSteamId groupId)
        {
            return GetFunction<NativeLeaveClanChatRoomC>(Functions.LeaveClanChatRoom47)(ObjectAddress,
                groupId.ConvertToUint64());
        }

        public int GetClanChatMemberCount(CSteamId groupId)
        {
            return GetFunction<NativeGetClanChatMemberCountC>(Functions.GetClanChatMemberCount48)(ObjectAddress,
                groupId.ConvertToUint64());
        }

        public CSteamId GetChatMemberByIndex(CSteamId groupId, int iIndex)
        {
            ulong ret = 0;
            GetFunction<NativeGetChatMemberByIndexCi>(Functions.GetChatMemberByIndex49)(ObjectAddress, ref ret,
                groupId.ConvertToUint64(), iIndex);
            return new CSteamId(ret);
        }

        public bool SendClanChatMessage(CSteamId groupId, string cszMessage)
        {
            return GetFunction<NativeSendClanChatMessageCs>(Functions.SendClanChatMessage50)(ObjectAddress,
                groupId.ConvertToUint64(), cszMessage);
        }

        public int GetClanChatMessage(CSteamId groupId, int iChatId, byte[] pvData, ref EChatEntryType peChatEntryType,
            ref CSteamId pSteamIdChatter)
        {
            ulong s0 = 0;
            var result = GetFunction<NativeGetClanChatMessageCibiec>(Functions.GetClanChatMessage51)(ObjectAddress,
                groupId.ConvertToUint64(), iChatId, pvData, pvData.Length, ref peChatEntryType, ref s0);
            pSteamIdChatter = new CSteamId(s0);
            return result;
        }

        public bool IsClanChatAdmin(CSteamId groupId, CSteamId userId)
        {
            return GetFunction<NativeIsClanChatAdminCc>(Functions.IsClanChatAdmin52)(ObjectAddress,
                groupId.ConvertToUint64(), userId.ConvertToUint64());
        }

        public bool IsClanChatWindowOpenInSteam(CSteamId groupId)
        {
            return
                GetFunction<NativeIsClanChatWindowOpenInSteamC>(Functions.IsClanChatWindowOpenInSteam53)(ObjectAddress,
                    groupId.ConvertToUint64());
        }

        public bool OpenClanChatWindowInSteam(CSteamId groupId)
        {
            return GetFunction<NativeOpenClanChatWindowInSteamC>(Functions.OpenClanChatWindowInSteam54)(ObjectAddress,
                groupId.ConvertToUint64());
        }

        public bool CloseClanChatWindowInSteam(CSteamId groupId)
        {
            return GetFunction<NativeCloseClanChatWindowInSteamC>(Functions.CloseClanChatWindowInSteam55)(
                ObjectAddress, groupId.ConvertToUint64());
        }

        public bool SetListenForFriendsMessages(bool bListen)
        {
            return
                GetFunction<NativeSetListenForFriendsMessagesB>(Functions.SetListenForFriendsMessages56)(ObjectAddress,
                    bListen);
        }

        public bool ReplyToFriendMessage(CSteamId friendId, string cszMessage)
        {
            return GetFunction<NativeReplyToFriendMessageCs>(Functions.ReplyToFriendMessage57)(ObjectAddress,
                friendId.ConvertToUint64(), cszMessage);
        }

        public int GetFriendMessage(CSteamId friendId, int iChatId, byte[] pvData, ref EChatEntryType peChatEntryType)
        {
            return GetFunction<NativeGetFriendMessageCibie>(Functions.GetFriendMessage58)(ObjectAddress,
                friendId.ConvertToUint64(), iChatId, pvData, pvData.Length, ref peChatEntryType);
        }

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetPersonaName(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetPersonaNameS(IntPtr thisptr, string pchPersonaName);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EPersonaState NativeGetPersonaState(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetFriendCountI(IntPtr thisptr, int iFriendFlags);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetFriendByIndexIi(IntPtr thisptr, ref ulong retarg, int iFriend, int iFriendFlags);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EFriendRelationship NativeGetFriendRelationshipC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EPersonaState NativeGetFriendPersonaStateC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetFriendPersonaNameC(IntPtr thisptr, ulong steamIdFriend);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetFriendGamePlayedCf(
            IntPtr thisptr, ulong steamIdFriend, ref FriendGameInfoT pFriendGameInfo);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetFriendPersonaNameHistoryCi(
            IntPtr thisptr, ulong steamIdFriend, int iPersonaName);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeHasFriendCi(IntPtr thisptr, ulong steamIdFriend, int iFriendFlags);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetClanCount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetClanByIndexI(IntPtr thisptr, ref ulong retarg, int iClan);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetClanNameC(IntPtr thisptr, ulong steamIdClan);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetClanTagC(IntPtr thisptr, ulong steamIdClan);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetClanActivityCountsCiii(
            IntPtr thisptr, ulong steamId, ref int pnOnline, ref int pnInGame, ref int pnChatting);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeDownloadClanActivityCountsCi(IntPtr thisptr, ref ulong groupIDs, int nIds);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetFriendCountFromSourceC(IntPtr thisptr, ulong steamIdSource);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetFriendFromSourceByIndexCi(
            IntPtr thisptr, ref ulong retarg, ulong steamIdSource, int iFriend);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsUserInSourceCc(IntPtr thisptr, ulong steamIdUser, ulong steamIdSource);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetInGameVoiceSpeakingCb(
            IntPtr thisptr, ulong steamIdUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeActivateGameOverlayS(IntPtr thisptr, string pchDialog);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeActivateGameOverlayToUserSc(IntPtr thisptr, string pchDialog, ulong steamId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeActivateGameOverlayToWebPageS(IntPtr thisptr, string pchUrl);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeActivateGameOverlayToStoreU(IntPtr thisptr, uint nAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetPlayedWithC(IntPtr thisptr, ulong steamIdUserPlayedWith);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeActivateGameOverlayInviteDialogC(IntPtr thisptr, ulong steamIdLobby);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetSmallFriendAvatarC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetMediumFriendAvatarC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetLargeFriendAvatarC(IntPtr thisptr, ulong steamIdFriend);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeRequestUserInformationCb(
            IntPtr thisptr, ulong steamIdUser, [MarshalAs(UnmanagedType.I1)] bool bRequireNameOnly);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeRequestClanOfficerListC(IntPtr thisptr, ulong steamIdClan);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetClanOwnerC(IntPtr thisptr, ref ulong retarg, ulong steamIdClan);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetClanOfficerCountC(IntPtr thisptr, ulong steamIdClan);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetClanOfficerByIndexCi(
            IntPtr thisptr, ref ulong retarg, ulong steamIdClan, int iOfficer);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EUserRestriction NativeGetUserRestrictions(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetRichPresenceSs(IntPtr thisptr, string pchKey, string pchValue);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeClearRichPresence(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetFriendRichPresenceCs(IntPtr thisptr, ulong steamIdFriend, string pchKey);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetFriendRichPresenceKeyCountC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetFriendRichPresenceKeyByIndexCi(IntPtr thisptr, ulong steamIdFriend, int iKey);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeInviteUserToGameCs(IntPtr thisptr, ulong steamIdFriend, string pchConnectString);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetCoplayFriendCount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetCoplayFriendI(IntPtr thisptr, ref ulong retarg, int iCoplayFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetFriendCoplayTimeC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetFriendCoplayGameC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeJoinClanChatRoomC(IntPtr thisptr, ulong groupId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeLeaveClanChatRoomC(IntPtr thisptr, ulong groupId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetClanChatMemberCountC(IntPtr thisptr, ulong groupId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetChatMemberByIndexCi(IntPtr thisptr, ref ulong retarg, ulong groupId, int iIndex);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSendClanChatMessageCs(IntPtr thisptr, ulong groupId, string cszMessage);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetClanChatMessageCibiec(
            IntPtr thisptr, ulong groupId, int iChatId, byte[] pvData, int cubData, ref EChatEntryType peChatEntryType,
            ref ulong pSteamIdChatter);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsClanChatAdminCc(IntPtr thisptr, ulong groupId, ulong userId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsClanChatWindowOpenInSteamC(IntPtr thisptr, ulong groupId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeOpenClanChatWindowInSteamC(IntPtr thisptr, ulong groupId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeCloseClanChatWindowInSteamC(IntPtr thisptr, ulong groupId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetListenForFriendsMessagesB(
            IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bListen);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeReplyToFriendMessageCs(IntPtr thisptr, ulong friendId, string cszMessage);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetFriendMessageCibie(
            IntPtr thisptr, ulong friendId, int iChatId, byte[] pvData, int cubData, ref EChatEntryType peChatEntryType);
    };
}