// This file is automatically generated.

using System;
using System.Runtime.InteropServices;
using System.Text;

namespace Steam4Net
{
    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    public class ClientUserStatsVTable
    {
        public IntPtr GetNumStats0;
        public IntPtr GetStatName1;
        public IntPtr GetStatType2;
        public IntPtr GetNumAchievements3;
        public IntPtr GetAchievementName4;
        public IntPtr RequestCurrentStats5;
        public IntPtr GetStat6;
        public IntPtr GetStat7;
        public IntPtr SetStat8;
        public IntPtr SetStat9;
        public IntPtr UpdateAvgRateStat10;
        public IntPtr GetAchievement11;
        public IntPtr SetAchievement12;
        public IntPtr ClearAchievement13;
        public IntPtr StoreStats14;
        public IntPtr GetAchievementIcon15;
        public IntPtr GetAchievementDisplayAttribute16;
        public IntPtr IndicateAchievementProgress17;
        public IntPtr SetMaxStatsLoaded18;
        public IntPtr RequestUserStats19;
        public IntPtr GetUserStat20;
        public IntPtr GetUserStat21;
        public IntPtr GetUserAchievement22;
        public IntPtr ResetAllStats23;
        public IntPtr FindOrCreateLeaderboard24;
        public IntPtr FindLeaderboard25;
        public IntPtr GetLeaderboardName26;
        public IntPtr GetLeaderboardEntryCount27;
        public IntPtr GetLeaderboardSortMethod28;
        public IntPtr GetLeaderboardDisplayType29;
        public IntPtr DownloadLeaderboardEntries30;
        public IntPtr DownloadLeaderboardEntriesForUsers31;
        public IntPtr GetDownloadedLeaderboardEntry32;
        public IntPtr AttachLeaderboardUGC33;
        public IntPtr UploadLeaderboardScore34;
        public IntPtr GetNumberOfCurrentPlayers35;
        public IntPtr GetNumAchievedAchievements36;
        public IntPtr GetLastAchievementUnlocked37;
        public IntPtr RequestGlobalAchievementPercentages38;
        public IntPtr GetMostAchievedAchievementInfo39;
        public IntPtr GetNextMostAchievedAchievementInfo40;
        public IntPtr GetAchievementAchievedPercent41;
        public IntPtr RequestGlobalStats42;
        public IntPtr GetGlobalStat43;
        public IntPtr GetGlobalStat44;
        public IntPtr GetGlobalStatHistory45;
        public IntPtr GetGlobalStatHistory46;
        private IntPtr DTorIClientUserStats47;
    };

    [InteropHelp.InterfaceVersionAttribute("CLIENTUSERSTATS_INTERFACE_VERSION002")]
    public class ClientUserStats : InteropHelp.NativeWrapper<ClientUserStatsVTable>
    {
        public uint GetNumStats(CGameId nGameId)
        {
            return GetFunction<NativeGetNumStatsC>(Functions.GetNumStats0)(ObjectAddress, nGameId.ConvertToUint64());
        }

        public string GetStatName(CGameId nGameId, uint iStat)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(GetFunction<NativeGetStatNameCu>(Functions.GetStatName1)(ObjectAddress,
                        nGameId.ConvertToUint64(), iStat)));
        }

        public ESteamUserStatType GetStatType(CGameId nGameId, string pchName)
        {
            return GetFunction<NativeGetStatTypeCs>(Functions.GetStatType2)(ObjectAddress, nGameId.ConvertToUint64(),
                pchName);
        }

        public uint GetNumAchievements(CGameId nGameId)
        {
            return GetFunction<NativeGetNumAchievementsC>(Functions.GetNumAchievements3)(ObjectAddress,
                nGameId.ConvertToUint64());
        }

        public string GetAchievementName(CGameId nGameId, uint iAchievement)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetAchievementNameCu>(Functions.GetAchievementName4)(ObjectAddress,
                            nGameId.ConvertToUint64(), iAchievement)));
        }

        public bool RequestCurrentStats(CGameId nGameId)
        {
            return GetFunction<NativeRequestCurrentStatsC>(Functions.RequestCurrentStats5)(ObjectAddress,
                nGameId.ConvertToUint64());
        }

        public bool GetStat(CGameId nGameId, string pchName, ref float pData)
        {
            return GetFunction<NativeGetStatCsf>(Functions.GetStat6)(ObjectAddress, nGameId.ConvertToUint64(), pchName,
                ref pData);
        }

        public bool GetStat(CGameId nGameId, string pchName, ref int pData)
        {
            return GetFunction<NativeGetStatCsi>(Functions.GetStat7)(ObjectAddress, nGameId.ConvertToUint64(), pchName,
                ref pData);
        }

        public bool SetStat(CGameId nGameId, string pchName, float fData)
        {
            return GetFunction<NativeSetStatCsf>(Functions.SetStat8)(ObjectAddress, nGameId.ConvertToUint64(), pchName,
                fData);
        }

        public bool SetStat(CGameId nGameId, string pchName, int nData)
        {
            return GetFunction<NativeSetStatCsi>(Functions.SetStat9)(ObjectAddress, nGameId.ConvertToUint64(), pchName,
                nData);
        }

        public bool UpdateAvgRateStat(CGameId nGameId, string pchName, float flCountThisSession, double dSessionLength)
        {
            return GetFunction<NativeUpdateAvgRateStatCsfd>(Functions.UpdateAvgRateStat10)(ObjectAddress,
                nGameId.ConvertToUint64(), pchName, flCountThisSession, dSessionLength);
        }

        public bool GetAchievement(CGameId nGameId, string pchName, ref bool pbAchieved, ref uint punUnlockTime)
        {
            return GetFunction<NativeGetAchievementCsbu>(Functions.GetAchievement11)(ObjectAddress,
                nGameId.ConvertToUint64(), pchName, ref pbAchieved, ref punUnlockTime);
        }

        public bool SetAchievement(CGameId nGameId, string pchName)
        {
            return GetFunction<NativeSetAchievementCs>(Functions.SetAchievement12)(ObjectAddress,
                nGameId.ConvertToUint64(), pchName);
        }

        public bool ClearAchievement(CGameId nGameId, string pchName)
        {
            return GetFunction<NativeClearAchievementCs>(Functions.ClearAchievement13)(ObjectAddress,
                nGameId.ConvertToUint64(), pchName);
        }

        public bool StoreStats(CGameId nGameId)
        {
            return GetFunction<NativeStoreStatsC>(Functions.StoreStats14)(ObjectAddress, nGameId.ConvertToUint64());
        }

        public int GetAchievementIcon(CGameId nGameId, string pchName, EGetAchievementIcon arg2)
        {
            return GetFunction<NativeGetAchievementIconCse>(Functions.GetAchievementIcon15)(ObjectAddress,
                nGameId.ConvertToUint64(), pchName, arg2);
        }

        public string GetAchievementDisplayAttribute(CGameId nGameId, string pchName, string pchKey,
            bool bUseGameLanguage)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetAchievementDisplayAttributeCssb>(Functions.GetAchievementDisplayAttribute16)
                            (ObjectAddress, nGameId.ConvertToUint64(), pchName, pchKey, bUseGameLanguage)));
        }

        public bool IndicateAchievementProgress(CGameId nGameId, string pchName, uint nCurProgress, uint nMaxProgress)
        {
            return
                GetFunction<NativeIndicateAchievementProgressCsuu>(Functions.IndicateAchievementProgress17)(
                    ObjectAddress, nGameId.ConvertToUint64(), pchName, nCurProgress, nMaxProgress);
        }

        public void SetMaxStatsLoaded(uint uMax)
        {
            GetFunction<NativeSetMaxStatsLoadedU>(Functions.SetMaxStatsLoaded18)(ObjectAddress, uMax);
        }

        public ulong RequestUserStats(CSteamId steamIdUser, CGameId nGameId)
        {
            return GetFunction<NativeRequestUserStatsCc>(Functions.RequestUserStats19)(ObjectAddress,
                steamIdUser.ConvertToUint64(), nGameId.ConvertToUint64());
        }

        public bool GetUserStat(CSteamId steamIdUser, CGameId nGameId, string pchName, ref float pData)
        {
            return GetFunction<NativeGetUserStatCcsf>(Functions.GetUserStat20)(ObjectAddress,
                steamIdUser.ConvertToUint64(), nGameId.ConvertToUint64(), pchName, ref pData);
        }

        public bool GetUserStat(CSteamId steamIdUser, CGameId nGameId, string pchName, ref int pData)
        {
            return GetFunction<NativeGetUserStatCcsi>(Functions.GetUserStat21)(ObjectAddress,
                steamIdUser.ConvertToUint64(), nGameId.ConvertToUint64(), pchName, ref pData);
        }

        public bool GetUserAchievement(CSteamId steamIdUser, CGameId nGameId, string pchName, ref bool pbAchieved,
            ref uint punUnlockTime)
        {
            return GetFunction<NativeGetUserAchievementCcsbu>(Functions.GetUserAchievement22)(ObjectAddress,
                steamIdUser.ConvertToUint64(), nGameId.ConvertToUint64(), pchName, ref pbAchieved, ref punUnlockTime);
        }

        public bool ResetAllStats(CGameId nGameId, bool bAchievementsToo)
        {
            return GetFunction<NativeResetAllStatsCb>(Functions.ResetAllStats23)(ObjectAddress,
                nGameId.ConvertToUint64(), bAchievementsToo);
        }

        public ulong FindOrCreateLeaderboard(string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod,
            ELeaderboardDisplayType eLeaderboardDisplayType)
        {
            return GetFunction<NativeFindOrCreateLeaderboardSee>(Functions.FindOrCreateLeaderboard24)(ObjectAddress,
                pchLeaderboardName, eLeaderboardSortMethod, eLeaderboardDisplayType);
        }

        public ulong FindLeaderboard(string pchLeaderboardName)
        {
            return GetFunction<NativeFindLeaderboardS>(Functions.FindLeaderboard25)(ObjectAddress, pchLeaderboardName);
        }

        public string GetLeaderboardName(ulong hSteamLeaderboard)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetLeaderboardNameU>(Functions.GetLeaderboardName26)(ObjectAddress,
                            hSteamLeaderboard)));
        }

        public int GetLeaderboardEntryCount(ulong hSteamLeaderboard)
        {
            return GetFunction<NativeGetLeaderboardEntryCountU>(Functions.GetLeaderboardEntryCount27)(ObjectAddress,
                hSteamLeaderboard);
        }

        public ELeaderboardSortMethod GetLeaderboardSortMethod(ulong hSteamLeaderboard)
        {
            return GetFunction<NativeGetLeaderboardSortMethodU>(Functions.GetLeaderboardSortMethod28)(ObjectAddress,
                hSteamLeaderboard);
        }

        public ELeaderboardDisplayType GetLeaderboardDisplayType(ulong hSteamLeaderboard)
        {
            return GetFunction<NativeGetLeaderboardDisplayTypeU>(Functions.GetLeaderboardDisplayType29)(ObjectAddress,
                hSteamLeaderboard);
        }

        public ulong DownloadLeaderboardEntries(ulong hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest,
            int nRangeStart, int nRangeEnd)
        {
            return
                GetFunction<NativeDownloadLeaderboardEntriesUeii>(Functions.DownloadLeaderboardEntries30)(
                    ObjectAddress, hSteamLeaderboard, eLeaderboardDataRequest, nRangeStart, nRangeEnd);
        }

        public ulong DownloadLeaderboardEntriesForUsers(ulong hSteamLeaderboard, ref CSteamId prgUsers, int cUsers)
        {
            ulong s0 = 0;
            var result =
                GetFunction<NativeDownloadLeaderboardEntriesForUsersUci>(Functions.DownloadLeaderboardEntriesForUsers31)
                    (ObjectAddress, hSteamLeaderboard, ref s0, cUsers);
            prgUsers = new CSteamId(s0);
            return result;
        }

        public bool GetDownloadedLeaderboardEntry(ulong hSteamLeaderboardEntries, int index,
            ref LeaderboardEntry002T pLeaderboardEntry, ref int pDetails, int cDetailsMax)
        {
            return
                GetFunction<NativeGetDownloadedLeaderboardEntryUilii>(Functions.GetDownloadedLeaderboardEntry32)(
                    ObjectAddress, hSteamLeaderboardEntries, index, ref pLeaderboardEntry, ref pDetails, cDetailsMax);
        }

        public ulong AttachLeaderboardUgc(ulong hSteamLeaderboard, ulong hUgc)
        {
            return GetFunction<NativeAttachLeaderboardUgcuu>(Functions.AttachLeaderboardUGC33)(ObjectAddress,
                hSteamLeaderboard, hUgc);
        }

        public ulong UploadLeaderboardScore(ulong hSteamLeaderboard,
            ELeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod, int nScore, ref int pScoreDetails,
            int cScoreDetailsCount)
        {
            return GetFunction<NativeUploadLeaderboardScoreUeiii>(Functions.UploadLeaderboardScore34)(ObjectAddress,
                hSteamLeaderboard, eLeaderboardUploadScoreMethod, nScore, ref pScoreDetails, cScoreDetailsCount);
        }

        public ulong GetNumberOfCurrentPlayers()
        {
            return GetFunction<NativeGetNumberOfCurrentPlayers>(Functions.GetNumberOfCurrentPlayers35)(ObjectAddress);
        }

        public uint GetNumAchievedAchievements(CGameId nGameId)
        {
            return GetFunction<NativeGetNumAchievedAchievementsC>(Functions.GetNumAchievedAchievements36)(
                ObjectAddress, nGameId.ConvertToUint64());
        }

        public string GetLastAchievementUnlocked(CGameId nGameId)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetLastAchievementUnlockedC>(Functions.GetLastAchievementUnlocked37)(
                            ObjectAddress, nGameId.ConvertToUint64())));
        }

        public ulong RequestGlobalAchievementPercentages(CGameId nGameId)
        {
            return
                GetFunction<NativeRequestGlobalAchievementPercentagesC>(Functions.RequestGlobalAchievementPercentages38)
                    (ObjectAddress, nGameId.ConvertToUint64());
        }

        public int GetMostAchievedAchievementInfo(CGameId nGameId, StringBuilder pchName, ref float pflPercent,
            ref bool pbAchieved)
        {
            return
                GetFunction<NativeGetMostAchievedAchievementInfoCsufb>(Functions.GetMostAchievedAchievementInfo39)(
                    ObjectAddress, nGameId.ConvertToUint64(), pchName, (uint)pchName.Capacity, ref pflPercent,
                    ref pbAchieved);
        }

        public int GetNextMostAchievedAchievementInfo(CGameId nGameId, int iIteratorPrevious, StringBuilder pchName,
            ref float pflPercent, ref bool pbAchieved)
        {
            return
                GetFunction<NativeGetNextMostAchievedAchievementInfoCisufb>(
                    Functions.GetNextMostAchievedAchievementInfo40)(ObjectAddress, nGameId.ConvertToUint64(),
                        iIteratorPrevious, pchName, (uint)pchName.Capacity, ref pflPercent, ref pbAchieved);
        }

        public bool GetAchievementAchievedPercent(CGameId nGameId, string pchName, ref float pflPercent)
        {
            return
                GetFunction<NativeGetAchievementAchievedPercentCsf>(Functions.GetAchievementAchievedPercent41)(
                    ObjectAddress, nGameId.ConvertToUint64(), pchName, ref pflPercent);
        }

        public ulong RequestGlobalStats(CGameId nGameId, int nHistoryDays)
        {
            return GetFunction<NativeRequestGlobalStatsCi>(Functions.RequestGlobalStats42)(ObjectAddress,
                nGameId.ConvertToUint64(), nHistoryDays);
        }

        public bool GetGlobalStat(CGameId nGameId, string pchName, ref double pData)
        {
            return GetFunction<NativeGetGlobalStatCsd>(Functions.GetGlobalStat43)(ObjectAddress,
                nGameId.ConvertToUint64(), pchName, ref pData);
        }

        public bool GetGlobalStat(CGameId nGameId, string pchName, ref long pData)
        {
            return GetFunction<NativeGetGlobalStatCsi>(Functions.GetGlobalStat44)(ObjectAddress,
                nGameId.ConvertToUint64(), pchName, ref pData);
        }

        public int GetGlobalStatHistory(CGameId nGameId, string pchName, ref double pData, uint cubData)
        {
            return GetFunction<NativeGetGlobalStatHistoryCsdu>(Functions.GetGlobalStatHistory45)(ObjectAddress,
                nGameId.ConvertToUint64(), pchName, ref pData, cubData);
        }

        public int GetGlobalStatHistory(CGameId nGameId, string pchName, ref long pData, uint cubData)
        {
            return GetFunction<NativeGetGlobalStatHistoryCsiu>(Functions.GetGlobalStatHistory46)(ObjectAddress,
                nGameId.ConvertToUint64(), pchName, ref pData, cubData);
        }

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetNumStatsC(IntPtr thisptr, ulong nGameId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetStatNameCu(IntPtr thisptr, ulong nGameId, uint iStat);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ESteamUserStatType NativeGetStatTypeCs(IntPtr thisptr, ulong nGameId, string pchName);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetNumAchievementsC(IntPtr thisptr, ulong nGameId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetAchievementNameCu(IntPtr thisptr, ulong nGameId, uint iAchievement);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeRequestCurrentStatsC(IntPtr thisptr, ulong nGameId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetStatCsf(IntPtr thisptr, ulong nGameId, string pchName, ref float pData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetStatCsi(IntPtr thisptr, ulong nGameId, string pchName, ref int pData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetStatCsf(IntPtr thisptr, ulong nGameId, string pchName, float fData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetStatCsi(IntPtr thisptr, ulong nGameId, string pchName, int nData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeUpdateAvgRateStatCsfd(
            IntPtr thisptr, ulong nGameId, string pchName, float flCountThisSession, double dSessionLength);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetAchievementCsbu(
            IntPtr thisptr, ulong nGameId, string pchName, ref bool pbAchieved, ref uint punUnlockTime);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetAchievementCs(IntPtr thisptr, ulong nGameId, string pchName);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeClearAchievementCs(IntPtr thisptr, ulong nGameId, string pchName);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeStoreStatsC(IntPtr thisptr, ulong nGameId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetAchievementIconCse(
            IntPtr thisptr, ulong nGameId, string pchName, EGetAchievementIcon arg2);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetAchievementDisplayAttributeCssb(
            IntPtr thisptr, ulong nGameId, string pchName, string pchKey,
            [MarshalAs(UnmanagedType.I1)] bool bUseGameLanguage);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIndicateAchievementProgressCsuu(
            IntPtr thisptr, ulong nGameId, string pchName, uint nCurProgress, uint nMaxProgress);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetMaxStatsLoadedU(IntPtr thisptr, uint uMax);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeRequestUserStatsCc(IntPtr thisptr, ulong steamIdUser, ulong nGameId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetUserStatCcsf(
            IntPtr thisptr, ulong steamIdUser, ulong nGameId, string pchName, ref float pData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetUserStatCcsi(
            IntPtr thisptr, ulong steamIdUser, ulong nGameId, string pchName, ref int pData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetUserAchievementCcsbu(
            IntPtr thisptr, ulong steamIdUser, ulong nGameId, string pchName, ref bool pbAchieved,
            ref uint punUnlockTime);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeResetAllStatsCb(
            IntPtr thisptr, ulong nGameId, [MarshalAs(UnmanagedType.I1)] bool bAchievementsToo);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeFindOrCreateLeaderboardSee(
            IntPtr thisptr, string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod,
            ELeaderboardDisplayType eLeaderboardDisplayType);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeFindLeaderboardS(IntPtr thisptr, string pchLeaderboardName);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetLeaderboardNameU(IntPtr thisptr, ulong hSteamLeaderboard);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetLeaderboardEntryCountU(IntPtr thisptr, ulong hSteamLeaderboard);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ELeaderboardSortMethod NativeGetLeaderboardSortMethodU(IntPtr thisptr, ulong hSteamLeaderboard);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ELeaderboardDisplayType NativeGetLeaderboardDisplayTypeU(
            IntPtr thisptr, ulong hSteamLeaderboard);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeDownloadLeaderboardEntriesUeii(
            IntPtr thisptr, ulong hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, int nRangeStart,
            int nRangeEnd);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeDownloadLeaderboardEntriesForUsersUci(
            IntPtr thisptr, ulong hSteamLeaderboard, ref ulong prgUsers, int cUsers);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetDownloadedLeaderboardEntryUilii(
            IntPtr thisptr, ulong hSteamLeaderboardEntries, int index, ref LeaderboardEntry002T pLeaderboardEntry,
            ref int pDetails, int cDetailsMax);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeAttachLeaderboardUgcuu(IntPtr thisptr, ulong hSteamLeaderboard, ulong hUgc);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeUploadLeaderboardScoreUeiii(
            IntPtr thisptr, ulong hSteamLeaderboard, ELeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod,
            int nScore, ref int pScoreDetails, int cScoreDetailsCount);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeGetNumberOfCurrentPlayers(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetNumAchievedAchievementsC(IntPtr thisptr, ulong nGameId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetLastAchievementUnlockedC(IntPtr thisptr, ulong nGameId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeRequestGlobalAchievementPercentagesC(IntPtr thisptr, ulong nGameId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetMostAchievedAchievementInfoCsufb(
            IntPtr thisptr, ulong nGameId, StringBuilder pchName, uint unNameBufLen, ref float pflPercent,
            ref bool pbAchieved);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetNextMostAchievedAchievementInfoCisufb(
            IntPtr thisptr, ulong nGameId, int iIteratorPrevious, StringBuilder pchName, uint unNameBufLen,
            ref float pflPercent, ref bool pbAchieved);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetAchievementAchievedPercentCsf(
            IntPtr thisptr, ulong nGameId, string pchName, ref float pflPercent);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeRequestGlobalStatsCi(IntPtr thisptr, ulong nGameId, int nHistoryDays);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetGlobalStatCsd(IntPtr thisptr, ulong nGameId, string pchName, ref double pData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetGlobalStatCsi(IntPtr thisptr, ulong nGameId, string pchName, ref long pData);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetGlobalStatHistoryCsdu(
            IntPtr thisptr, ulong nGameId, string pchName, ref double pData, uint cubData);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetGlobalStatHistoryCsiu(
            IntPtr thisptr, ulong nGameId, string pchName, ref long pData, uint cubData);
    };
}