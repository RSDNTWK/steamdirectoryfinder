// This file is automatically generated.

using System;
using System.Runtime.InteropServices;

namespace Steam4Net
{
    public enum EDepotBuildStatus
    {
        KeDepotBuildStatusInvalid = 0,
        KeDepotBuildStatusProcessingConfig = 1,
        KeDepotBuildStatusBuildingFileList = 2,
        KeDepotBuildStatusProcessingData = 3,
        KeDepotBuildStatusUploadingData = 4,
        KeDepotBuildStatusCompleted = 5,
        KeDepotBuildStatusFailed = 6
    };

    public enum EStatusDepotVersion
    {
        KeStatusDepotVersionInvalid = 0,
        KeStatusDepotVersionDisabled = 1,
        KeStatusDepotVersionAvailable = 2,
        KeStatusDepotVersionCurrent = 3
    };

    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    public class ClientDepotBuilderVTable
    {
        public IntPtr RegisterAppBuild0;
        public IntPtr GetRegisteredBuildID1;
        public IntPtr InitializeDepotBuildForConfigFile2;
        public IntPtr StartBuild3;
        public IntPtr BGetDepotBuildStatus4;
        public IntPtr CloseDepotBuildHandle5;
        public IntPtr ReconstructDepotFromManifestAndChunks6;
        public IntPtr BGetChunkCounts7;
        public IntPtr GetManifestGIDs8;
        public IntPtr FinishAppBuild9;
        public IntPtr VerifyChunkStore10;
        public IntPtr StartUploadTest11;
        private IntPtr DTorIClientDepotBuilder12;
    };

    [InteropHelp.InterfaceVersionAttribute("CLIENTDEPOTBUILDER_INTERFACE_VERSION001")]
    public class ClientDepotBuilder : InteropHelp.NativeWrapper<ClientDepotBuilderVTable>
    {
        public uint RegisterAppBuild(uint nAppId, bool bLocalCsBuild, string cszDescription)
        {
            return GetFunction<NativeRegisterAppBuildUbs>(Functions.RegisterAppBuild0)(ObjectAddress, nAppId,
                bLocalCsBuild, cszDescription);
        }

        public uint GetRegisteredBuildId(uint arg0)
        {
            return GetFunction<NativeGetRegisteredBuildIdu>(Functions.GetRegisteredBuildID1)(ObjectAddress, arg0);
        }

        public uint InitializeDepotBuildForConfigFile(string pchConfigFile, string arg1, string arg2)
        {
            return
                GetFunction<NativeInitializeDepotBuildForConfigFileSss>(Functions.InitializeDepotBuildForConfigFile2)(
                    ObjectAddress, pchConfigFile, arg1, arg2);
        }

        public bool StartBuild(uint hDepotBuild, uint uFlags, string cszChunksPath, string arg3, uint arg4)
        {
            return GetFunction<NativeStartBuildUussu>(Functions.StartBuild3)(ObjectAddress, hDepotBuild, uFlags,
                cszChunksPath, arg3, arg4);
        }

        public bool BGetDepotBuildStatus(uint hDepotBuild, ref EDepotBuildStatus pStatusOut, ref uint pPercentDone)
        {
            return GetFunction<NativeBGetDepotBuildStatusUeu>(Functions.BGetDepotBuildStatus4)(ObjectAddress,
                hDepotBuild, ref pStatusOut, ref pPercentDone);
        }

        public bool CloseDepotBuildHandle(uint hDepotBuild)
        {
            return GetFunction<NativeCloseDepotBuildHandleU>(Functions.CloseDepotBuildHandle5)(ObjectAddress,
                hDepotBuild);
        }

        public uint ReconstructDepotFromManifestAndChunks(string pchLocalManifestPath, string pchLocalChunkPath,
            string pchRestorePath, uint arg3)
        {
            return
                GetFunction<NativeReconstructDepotFromManifestAndChunksSssu>(
                    Functions.ReconstructDepotFromManifestAndChunks6)(ObjectAddress, pchLocalManifestPath,
                        pchLocalChunkPath, pchRestorePath, arg3);
        }

        public bool BGetChunkCounts(uint hDepotBuild, ref uint unTotalChunksInNewBuild, ref uint unChunksAlsoInOldBuild)
        {
            return GetFunction<NativeBGetChunkCountsUuu>(Functions.BGetChunkCounts7)(ObjectAddress, hDepotBuild,
                ref unTotalChunksInNewBuild, ref unChunksAlsoInOldBuild);
        }

        public bool GetManifestGiDs(uint hDepotBuild, ref ulong pBaselineGid, ref ulong pNewGid, ref bool arg3)
        {
            return GetFunction<NativeGetManifestGidsUuub>(Functions.GetManifestGIDs8)(ObjectAddress, hDepotBuild,
                ref pBaselineGid, ref pNewGid, ref arg3);
        }

        public uint FinishAppBuild(uint uBuildId, uint nAppId, string cszBetaKey, bool bOnlyFinish, uint cNumSkipDepots)
        {
            return GetFunction<NativeFinishAppBuildUusbu>(Functions.FinishAppBuild9)(ObjectAddress, uBuildId, nAppId,
                cszBetaKey, bOnlyFinish, cNumSkipDepots);
        }

        public uint VerifyChunkStore(uint arg0, uint arg1, string arg2)
        {
            return GetFunction<NativeVerifyChunkStoreUus>(Functions.VerifyChunkStore10)(ObjectAddress, arg0, arg1, arg2);
        }

        public uint StartUploadTest(uint arg0, uint arg1)
        {
            return GetFunction<NativeStartUploadTestUu>(Functions.StartUploadTest11)(ObjectAddress, arg0, arg1);
        }

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeRegisterAppBuildUbs(
            IntPtr thisptr, uint nAppId, [MarshalAs(UnmanagedType.I1)] bool bLocalCsBuild, string cszDescription);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetRegisteredBuildIdu(IntPtr thisptr, uint arg0);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeInitializeDepotBuildForConfigFileSss(
            IntPtr thisptr, string pchConfigFile, string arg1, string arg2);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeStartBuildUussu(
            IntPtr thisptr, uint hDepotBuild, uint uFlags, string cszChunksPath, string arg3, uint arg4);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBGetDepotBuildStatusUeu(
            IntPtr thisptr, uint hDepotBuild, ref EDepotBuildStatus pStatusOut, ref uint pPercentDone);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeCloseDepotBuildHandleU(IntPtr thisptr, uint hDepotBuild);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeReconstructDepotFromManifestAndChunksSssu(
            IntPtr thisptr, string pchLocalManifestPath, string pchLocalChunkPath, string pchRestorePath, uint arg3);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBGetChunkCountsUuu(
            IntPtr thisptr, uint hDepotBuild, ref uint unTotalChunksInNewBuild, ref uint unChunksAlsoInOldBuild);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetManifestGidsUuub(
            IntPtr thisptr, uint hDepotBuild, ref ulong pBaselineGid, ref ulong pNewGid, ref bool arg3);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeFinishAppBuildUusbu(
            IntPtr thisptr, uint uBuildId, uint nAppId, string cszBetaKey,
            [MarshalAs(UnmanagedType.I1)] bool bOnlyFinish, uint cNumSkipDepots);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeVerifyChunkStoreUus(IntPtr thisptr, uint arg0, uint arg1, string arg2);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeStartUploadTestUu(IntPtr thisptr, uint arg0, uint arg1);
    };
}