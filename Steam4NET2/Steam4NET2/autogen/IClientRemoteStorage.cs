// This file is automatically generated.

using System;
using System.Runtime.InteropServices;
using System.Text;

namespace Steam4Net
{
    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    public class ClientRemoteStorageVTable
    {
        public IntPtr FileWrite0;
        public IntPtr GetFileSize1;
        public IntPtr FileRead2;
        public IntPtr FileForget3;
        public IntPtr FileDelete4;
        public IntPtr FileShare5;
        public IntPtr FileExists6;
        public IntPtr FilePersisted7;
        public IntPtr GetFileTimestamp8;
        public IntPtr SetSyncPlatforms9;
        public IntPtr GetSyncPlatforms10;
        public IntPtr FileWriteStreamOpen11;
        public IntPtr FileWriteStreamClose12;
        public IntPtr FileWriteStreamCancel13;
        public IntPtr FileWriteStreamWriteChunk14;
        public IntPtr GetFileCount15;
        public IntPtr GetFileNameAndSize16;
        public IntPtr GetQuota17;
        public IntPtr IsCloudEnabledForAccount18;
        public IntPtr IsCloudEnabledForApp19;
        public IntPtr SetCloudEnabledForApp20;
        public IntPtr UGCDownload21;
        public IntPtr UGCDownloadToLocation22;
        public IntPtr GetUGCDownloadProgress23;
        public IntPtr GetUGCDetails24;
        public IntPtr UGCRead25;
        public IntPtr GetCachedUGCCount26;
        public IntPtr GetCachedUGCHandle27;
        public IntPtr PublishFile28;
        public IntPtr PublishVideo29;
        public IntPtr PublishVideoFromURL30;
        public IntPtr CreatePublishedFileUpdateRequest31;
        public IntPtr UpdatePublishedFileFile32;
        public IntPtr UpdatePublishedFilePreviewFile33;
        public IntPtr UpdatePublishedFileTitle34;
        public IntPtr UpdatePublishedFileDescription35;
        public IntPtr UpdatePublishedFileSetChangeDescription36;
        public IntPtr UpdatePublishedFileVisibility37;
        public IntPtr UpdatePublishedFileTags38;
        public IntPtr UpdatePublishedFileURL39;
        public IntPtr CommitPublishedFileUpdate40;
        public IntPtr GetPublishedFileDetails41;
        public IntPtr DeletePublishedFile42;
        public IntPtr EnumerateUserPublishedFiles43;
        public IntPtr SubscribePublishedFile44;
        public IntPtr EnumerateUserSubscribedFiles45;
        public IntPtr UnsubscribePublishedFile46;
        public IntPtr SetUserPublishedFileAction47;
        public IntPtr EnumeratePublishedFilesByUserAction48;
        public IntPtr EnumerateUserSubscribedFilesWithUpdates49;
        public IntPtr GetCREItemVoteSummary50;
        public IntPtr UpdateUserPublishedItemVote51;
        public IntPtr GetUserPublishedItemVoteDetails52;
        public IntPtr EnumerateUserSharedWorkshopFiles53;
        public IntPtr EnumeratePublishedWorkshopFiles54;
        public IntPtr EGetFileSyncState55;
        public IntPtr BIsFileSyncing56;
        public IntPtr FilePersist57;
        public IntPtr FileFetch58;
        public IntPtr ResolvePath59;
        public IntPtr FileTouch60;
        public IntPtr SetCloudEnabledForAccount61;
        public IntPtr LoadLocalFileInfoCache62;
        public IntPtr EvaluateRemoteStorageSyncState63;
        public IntPtr GetRemoteStorageSyncState64;
        public IntPtr HaveLatestFilesLocally65;
        public IntPtr GetConflictingFileTimestamps66;
        public IntPtr ResolveSyncConflict67;
        public IntPtr SynchronizeApp68;
        public IntPtr IsAppSyncInProgress69;
        public IntPtr RunAutoCloudOnAppLaunch70;
        public IntPtr RunAutoCloudOnAppExit71;
        public IntPtr ResetFileRequestState72;
        public IntPtr ClearPublishFileUpdateRequests73;
        public IntPtr GetSubscribedFileDownloadCount74;
        public IntPtr BGetSubscribedFileDownloadInfo75;
        public IntPtr BGetSubscribedFileDownloadInfo76;
        public IntPtr PauseSubscribedFileDownloadsForApp77;
        public IntPtr ResumeSubscribedFileDownloadsForApp78;
        public IntPtr PauseAllSubscribedFileDownloads79;
        public IntPtr ResumeAllSubscribedFileDownloads80;
        public IntPtr OnAppLifetime81;
        private IntPtr DTorIClientRemoteStorage82;
    };

    [InteropHelp.InterfaceVersionAttribute("CLIENTREMOTESTORAGE_INTERFACE_VERSION001")]
    public class ClientRemoteStorage : InteropHelp.NativeWrapper<ClientRemoteStorageVTable>
    {
        public EResult FileWrite(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile,
            byte[] pvData)
        {
            return GetFunction<NativeFileWriteUesbi>(Functions.FileWrite0)(ObjectAddress, nAppId, eRemoteStorageFileRoot,
                pchFile, pvData, pvData.Length);
        }

        public int GetFileSize(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile)
        {
            return GetFunction<NativeGetFileSizeUes>(Functions.GetFileSize1)(ObjectAddress, nAppId,
                eRemoteStorageFileRoot, pchFile);
        }

        public int FileRead(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile, byte[] pvData)
        {
            return GetFunction<NativeFileReadUesbi>(Functions.FileRead2)(ObjectAddress, nAppId, eRemoteStorageFileRoot,
                pchFile, pvData, pvData.Length);
        }

        public bool FileForget(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile)
        {
            return GetFunction<NativeFileForgetUes>(Functions.FileForget3)(ObjectAddress, nAppId, eRemoteStorageFileRoot,
                pchFile);
        }

        public bool FileDelete(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile)
        {
            return GetFunction<NativeFileDeleteUes>(Functions.FileDelete4)(ObjectAddress, nAppId, eRemoteStorageFileRoot,
                pchFile);
        }

        public ulong FileShare(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile)
        {
            return GetFunction<NativeFileShareUes>(Functions.FileShare5)(ObjectAddress, nAppId, eRemoteStorageFileRoot,
                pchFile);
        }

        public bool FileExists(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile)
        {
            return GetFunction<NativeFileExistsUes>(Functions.FileExists6)(ObjectAddress, nAppId, eRemoteStorageFileRoot,
                pchFile);
        }

        public bool FilePersisted(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile)
        {
            return GetFunction<NativeFilePersistedUes>(Functions.FilePersisted7)(ObjectAddress, nAppId,
                eRemoteStorageFileRoot, pchFile);
        }

        public long GetFileTimestamp(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile)
        {
            return GetFunction<NativeGetFileTimestampUes>(Functions.GetFileTimestamp8)(ObjectAddress, nAppId,
                eRemoteStorageFileRoot, pchFile);
        }

        public bool SetSyncPlatforms(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile,
            ERemoteStoragePlatform eRemoteStoragePlatform)
        {
            return GetFunction<NativeSetSyncPlatformsUese>(Functions.SetSyncPlatforms9)(ObjectAddress, nAppId,
                eRemoteStorageFileRoot, pchFile, eRemoteStoragePlatform);
        }

        public ERemoteStoragePlatform GetSyncPlatforms(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot,
            string pchFile)
        {
            return GetFunction<NativeGetSyncPlatformsUes>(Functions.GetSyncPlatforms10)(ObjectAddress, nAppId,
                eRemoteStorageFileRoot, pchFile);
        }

        public ulong FileWriteStreamOpen(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile)
        {
            return GetFunction<NativeFileWriteStreamOpenUes>(Functions.FileWriteStreamOpen11)(ObjectAddress, nAppId,
                eRemoteStorageFileRoot, pchFile);
        }

        public EResult FileWriteStreamClose(ulong hStream)
        {
            return GetFunction<NativeFileWriteStreamCloseU>(Functions.FileWriteStreamClose12)(ObjectAddress, hStream);
        }

        public EResult FileWriteStreamCancel(ulong hStream)
        {
            return GetFunction<NativeFileWriteStreamCancelU>(Functions.FileWriteStreamCancel13)(ObjectAddress, hStream);
        }

        public EResult FileWriteStreamWriteChunk(ulong hStream, byte[] pvData)
        {
            return GetFunction<NativeFileWriteStreamWriteChunkUbi>(Functions.FileWriteStreamWriteChunk14)(
                ObjectAddress, hStream, pvData, pvData.Length);
        }

        public int GetFileCount(uint nAppId, bool bFromExternalApi)
        {
            return GetFunction<NativeGetFileCountUb>(Functions.GetFileCount15)(ObjectAddress, nAppId, bFromExternalApi);
        }

        public string GetFileNameAndSize(uint nAppId, int iFile, ref ERemoteStorageFileRoot peRemoteStorageFileRoot,
            ref int pnFileSizeInBytes, bool bFromExternalApi)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetFileNameAndSizeUieib>(Functions.GetFileNameAndSize16)(ObjectAddress, nAppId,
                            iFile, ref peRemoteStorageFileRoot, ref pnFileSizeInBytes, bFromExternalApi)));
        }

        public bool GetQuota(uint nAppId, ref int pnTotalBytes, ref int pnAvailableBytes)
        {
            return GetFunction<NativeGetQuotaUii>(Functions.GetQuota17)(ObjectAddress, nAppId, ref pnTotalBytes,
                ref pnAvailableBytes);
        }

        public bool IsCloudEnabledForAccount()
        {
            return GetFunction<NativeIsCloudEnabledForAccount>(Functions.IsCloudEnabledForAccount18)(ObjectAddress);
        }

        public bool IsCloudEnabledForApp(uint nAppId)
        {
            return GetFunction<NativeIsCloudEnabledForAppU>(Functions.IsCloudEnabledForApp19)(ObjectAddress, nAppId);
        }

        public void SetCloudEnabledForApp(uint nAppId, bool bEnable)
        {
            GetFunction<NativeSetCloudEnabledForAppUb>(Functions.SetCloudEnabledForApp20)(ObjectAddress, nAppId, bEnable);
        }

        public ulong UgcDownload(ulong hContent, bool bUseNewCallback, uint uUnk)
        {
            return GetFunction<NativeUgcDownloadUbu>(Functions.UGCDownload21)(ObjectAddress, hContent, bUseNewCallback,
                uUnk);
        }

        public ulong UgcDownloadToLocation(ulong hContent, string cszLocation, uint uUnk)
        {
            return GetFunction<NativeUgcDownloadToLocationUsu>(Functions.UGCDownloadToLocation22)(ObjectAddress,
                hContent, cszLocation, uUnk);
        }

        public bool GetUgcDownloadProgress(ulong hContent, ref uint puDownloadedBytes, ref uint puTotalBytes)
        {
            return GetFunction<NativeGetUgcDownloadProgressUuu>(Functions.GetUGCDownloadProgress23)(ObjectAddress,
                hContent, ref puDownloadedBytes, ref puTotalBytes);
        }

        public bool GetUgcDetails(ulong hContent, ref uint pnAppId, StringBuilder ppchName, ref int pnFileSizeInBytes,
            ref CSteamId pSteamIdOwner)
        {
            ulong s0 = 0;
            var result = GetFunction<NativeGetUgcDetailsUusic>(Functions.GetUGCDetails24)(ObjectAddress, hContent,
                ref pnAppId, ppchName, ref pnFileSizeInBytes, ref s0);
            pSteamIdOwner = new CSteamId(s0);
            return result;
        }

        public int UgcRead(ulong hContent, byte[] pvData, uint uOffset, EugcReadAction eAction)
        {
            return GetFunction<NativeUgcReadUbiue>(Functions.UGCRead25)(ObjectAddress, hContent, pvData, pvData.Length,
                uOffset, eAction);
        }

        public int GetCachedUgcCount()
        {
            return GetFunction<NativeGetCachedUgcCount>(Functions.GetCachedUGCCount26)(ObjectAddress);
        }

        public ulong GetCachedUgcHandle(int iCachedContent)
        {
            return GetFunction<NativeGetCachedUgcHandleI>(Functions.GetCachedUGCHandle27)(ObjectAddress, iCachedContent);
        }

        public ulong PublishFile(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string cszFileName,
            string cszPreviewFileName, uint nConsumerAppId, string cszTitle, string cszDescription,
            ERemoteStoragePublishedFileVisibility eVisibility, ref SteamParamStringArrayT pTags,
            EWorkshopFileType eType)
        {
            return GetFunction<NativePublishFileUessussese>(Functions.PublishFile28)(ObjectAddress, nAppId,
                eRemoteStorageFileRoot, cszFileName, cszPreviewFileName, nConsumerAppId, cszTitle, cszDescription,
                eVisibility, ref pTags, eType);
        }

        public ulong PublishVideo(uint nAppId, EWorkshopVideoProvider eVideoProvider, string cszVideoAccountName,
            string cszVideoIdentifier, ERemoteStorageFileRoot eRemoteStorageFileRoot, string cszFileName,
            uint nConsumerAppId, string cszTitle, string cszDescription,
            ERemoteStoragePublishedFileVisibility eVisibility, ref SteamParamStringArrayT pTags)
        {
            return GetFunction<NativePublishVideoUessesusses>(Functions.PublishVideo29)(ObjectAddress, nAppId,
                eVideoProvider, cszVideoAccountName, cszVideoIdentifier, eRemoteStorageFileRoot, cszFileName,
                nConsumerAppId, cszTitle, cszDescription, eVisibility, ref pTags);
        }

        public ulong PublishVideoFromUrl(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string cszVideoUrl,
            string cszFileName, uint nConsumerAppId, string cszTitle, string cszDescription,
            ERemoteStoragePublishedFileVisibility eVisibility, ref SteamParamStringArrayT pTags)
        {
            return GetFunction<NativePublishVideoFromUrluessusses>(Functions.PublishVideoFromURL30)(ObjectAddress,
                nAppId, eRemoteStorageFileRoot, cszVideoUrl, cszFileName, nConsumerAppId, cszTitle, cszDescription,
                eVisibility, ref pTags);
        }

        public ulong CreatePublishedFileUpdateRequest(uint nAppId, ulong unPublishedFileId)
        {
            return
                GetFunction<NativeCreatePublishedFileUpdateRequestUu>(Functions.CreatePublishedFileUpdateRequest31)(
                    ObjectAddress, nAppId, unPublishedFileId);
        }

        public bool UpdatePublishedFileFile(ulong hUpdateRequest, string cszFile)
        {
            return GetFunction<NativeUpdatePublishedFileFileUs>(Functions.UpdatePublishedFileFile32)(ObjectAddress,
                hUpdateRequest, cszFile);
        }

        public bool UpdatePublishedFilePreviewFile(ulong hUpdateRequest, string cszPreviewFile)
        {
            return
                GetFunction<NativeUpdatePublishedFilePreviewFileUs>(Functions.UpdatePublishedFilePreviewFile33)(
                    ObjectAddress, hUpdateRequest, cszPreviewFile);
        }

        public bool UpdatePublishedFileTitle(ulong hUpdateRequest, string cszTitle)
        {
            return GetFunction<NativeUpdatePublishedFileTitleUs>(Functions.UpdatePublishedFileTitle34)(ObjectAddress,
                hUpdateRequest, cszTitle);
        }

        public bool UpdatePublishedFileDescription(ulong hUpdateRequest, string cszDescription)
        {
            return
                GetFunction<NativeUpdatePublishedFileDescriptionUs>(Functions.UpdatePublishedFileDescription35)(
                    ObjectAddress, hUpdateRequest, cszDescription);
        }

        public bool UpdatePublishedFileSetChangeDescription(ulong hUpdateRequest, string cszDescription)
        {
            return
                GetFunction<NativeUpdatePublishedFileSetChangeDescriptionUs>(
                    Functions.UpdatePublishedFileSetChangeDescription36)(ObjectAddress, hUpdateRequest, cszDescription);
        }

        public bool UpdatePublishedFileVisibility(ulong hUpdateRequest,
            ERemoteStoragePublishedFileVisibility eVisibility)
        {
            return
                GetFunction<NativeUpdatePublishedFileVisibilityUe>(Functions.UpdatePublishedFileVisibility37)(
                    ObjectAddress, hUpdateRequest, eVisibility);
        }

        public bool UpdatePublishedFileTags(ulong hUpdateRequest, ref SteamParamStringArrayT pTags)
        {
            return GetFunction<NativeUpdatePublishedFileTagsUs>(Functions.UpdatePublishedFileTags38)(ObjectAddress,
                hUpdateRequest, ref pTags);
        }

        public bool UpdatePublishedFileUrl(ulong hUpdateRequest, string cszUrl)
        {
            return GetFunction<NativeUpdatePublishedFileUrlus>(Functions.UpdatePublishedFileURL39)(ObjectAddress,
                hUpdateRequest, cszUrl);
        }

        public ulong CommitPublishedFileUpdate(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot,
            ulong hUpdateRequest)
        {
            return GetFunction<NativeCommitPublishedFileUpdateUeu>(Functions.CommitPublishedFileUpdate40)(
                ObjectAddress, nAppId, eRemoteStorageFileRoot, hUpdateRequest);
        }

        public ulong GetPublishedFileDetails(ulong unPublishedFileId, bool bUseNewCallback, uint arg2)
        {
            return GetFunction<NativeGetPublishedFileDetailsUbu>(Functions.GetPublishedFileDetails41)(ObjectAddress,
                unPublishedFileId, bUseNewCallback, arg2);
        }

        public ulong DeletePublishedFile(ulong unPublishedFileId)
        {
            return GetFunction<NativeDeletePublishedFileU>(Functions.DeletePublishedFile42)(ObjectAddress,
                unPublishedFileId);
        }

        public ulong EnumerateUserPublishedFiles(uint nAppId, uint uStartIndex,
            ERemoteStoragePublishedFileSortOrder eOrder)
        {
            return
                GetFunction<NativeEnumerateUserPublishedFilesUue>(Functions.EnumerateUserPublishedFiles43)(
                    ObjectAddress, nAppId, uStartIndex, eOrder);
        }

        public ulong SubscribePublishedFile(uint nAppId, ulong unPublishedFileId)
        {
            return GetFunction<NativeSubscribePublishedFileUu>(Functions.SubscribePublishedFile44)(ObjectAddress, nAppId,
                unPublishedFileId);
        }

        public ulong EnumerateUserSubscribedFiles(uint nAppId, uint uStartIndex, byte uListType,
            EPublishedFileInfoMatchingFileType eMatchingFileType)
        {
            return
                GetFunction<NativeEnumerateUserSubscribedFilesUube>(Functions.EnumerateUserSubscribedFiles45)(
                    ObjectAddress, nAppId, uStartIndex, uListType, eMatchingFileType);
        }

        public ulong UnsubscribePublishedFile(uint nAppId, ulong unPublishedFileId)
        {
            return GetFunction<NativeUnsubscribePublishedFileUu>(Functions.UnsubscribePublishedFile46)(ObjectAddress,
                nAppId, unPublishedFileId);
        }

        public ulong SetUserPublishedFileAction(uint nAppId, ulong unPublishedFileId, EWorkshopFileAction eAction)
        {
            return
                GetFunction<NativeSetUserPublishedFileActionUue>(Functions.SetUserPublishedFileAction47)(ObjectAddress,
                    nAppId, unPublishedFileId, eAction);
        }

        public ulong EnumeratePublishedFilesByUserAction(uint nAppId, EWorkshopFileAction eAction, uint uStartIndex)
        {
            return
                GetFunction<NativeEnumeratePublishedFilesByUserActionUeu>(
                    Functions.EnumeratePublishedFilesByUserAction48)(ObjectAddress, nAppId, eAction, uStartIndex);
        }

        public ulong EnumerateUserSubscribedFilesWithUpdates(uint nAppId, uint uStartIndex, uint uStartTime)
        {
            return
                GetFunction<NativeEnumerateUserSubscribedFilesWithUpdatesUuu>(
                    Functions.EnumerateUserSubscribedFilesWithUpdates49)(ObjectAddress, nAppId, uStartIndex, uStartTime);
        }

        public ulong GetCreItemVoteSummary(ulong unPublishedFileId)
        {
            return GetFunction<NativeGetCreItemVoteSummaryU>(Functions.GetCREItemVoteSummary50)(ObjectAddress,
                unPublishedFileId);
        }

        public ulong UpdateUserPublishedItemVote(ulong unPublishedFileId, bool bVoteUp)
        {
            return
                GetFunction<NativeUpdateUserPublishedItemVoteUb>(Functions.UpdateUserPublishedItemVote51)(
                    ObjectAddress, unPublishedFileId, bVoteUp);
        }

        public ulong GetUserPublishedItemVoteDetails(ulong unPublishedFileId)
        {
            return
                GetFunction<NativeGetUserPublishedItemVoteDetailsU>(Functions.GetUserPublishedItemVoteDetails52)(
                    ObjectAddress, unPublishedFileId);
        }

        public ulong EnumerateUserSharedWorkshopFiles(uint nAppId, CSteamId creatorSteamId, uint uStartIndex,
            ref SteamParamStringArrayT pRequiredTags, ref SteamParamStringArrayT pExcludedTags)
        {
            return
                GetFunction<NativeEnumerateUserSharedWorkshopFilesUcuss>(Functions.EnumerateUserSharedWorkshopFiles53)(
                    ObjectAddress, nAppId, creatorSteamId.ConvertToUint64(), uStartIndex, ref pRequiredTags,
                    ref pExcludedTags);
        }

        public ulong EnumeratePublishedWorkshopFiles(uint nAppId, EWorkshopEnumerationType eType,
            EPublishedFileInfoMatchingFileType eFileType, uint uStartIndex, uint cDays, uint cCount,
            ref SteamParamStringArrayT pTags, ref SteamParamStringArrayT pUserTags)
        {
            return
                GetFunction<NativeEnumeratePublishedWorkshopFilesUeeuuuss>(Functions.EnumeratePublishedWorkshopFiles54)(
                    ObjectAddress, nAppId, eType, eFileType, uStartIndex, cDays, cCount, ref pTags, ref pUserTags);
        }

        public EFileRemoteStorageSyncState EGetFileSyncState(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot,
            string pchFile)
        {
            return GetFunction<NativeEGetFileSyncStateUes>(Functions.EGetFileSyncState55)(ObjectAddress, nAppId,
                eRemoteStorageFileRoot, pchFile);
        }

        public bool BIsFileSyncing(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile)
        {
            return GetFunction<NativeBIsFileSyncingUes>(Functions.BIsFileSyncing56)(ObjectAddress, nAppId,
                eRemoteStorageFileRoot, pchFile);
        }

        public EResult FilePersist(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile)
        {
            return GetFunction<NativeFilePersistUes>(Functions.FilePersist57)(ObjectAddress, nAppId,
                eRemoteStorageFileRoot, pchFile);
        }

        public bool FileFetch(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile)
        {
            return GetFunction<NativeFileFetchUes>(Functions.FileFetch58)(ObjectAddress, nAppId, eRemoteStorageFileRoot,
                pchFile);
        }

        public bool ResolvePath(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchRelPath,
            StringBuilder pchDest)
        {
            return GetFunction<NativeResolvePathUessu>(Functions.ResolvePath59)(ObjectAddress, nAppId,
                eRemoteStorageFileRoot, pchRelPath, pchDest, (uint)pchDest.Capacity);
        }

        public EResult FileTouch(uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile, bool arg3)
        {
            return GetFunction<NativeFileTouchUesb>(Functions.FileTouch60)(ObjectAddress, nAppId, eRemoteStorageFileRoot,
                pchFile, arg3);
        }

        public void SetCloudEnabledForAccount(bool bEnabled)
        {
            GetFunction<NativeSetCloudEnabledForAccountB>(Functions.SetCloudEnabledForAccount61)(ObjectAddress, bEnabled);
        }

        public void LoadLocalFileInfoCache(uint nAppId)
        {
            GetFunction<NativeLoadLocalFileInfoCacheU>(Functions.LoadLocalFileInfoCache62)(ObjectAddress, nAppId);
        }

        public void EvaluateRemoteStorageSyncState(uint nAppId)
        {
            GetFunction<NativeEvaluateRemoteStorageSyncStateU>(Functions.EvaluateRemoteStorageSyncState63)(
                ObjectAddress, nAppId);
        }

        public ERemoteStorageSyncState GetRemoteStorageSyncState(uint nAppId)
        {
            return GetFunction<NativeGetRemoteStorageSyncStateU>(Functions.GetRemoteStorageSyncState64)(ObjectAddress,
                nAppId);
        }

        public bool HaveLatestFilesLocally(uint nAppId)
        {
            return GetFunction<NativeHaveLatestFilesLocallyU>(Functions.HaveLatestFilesLocally65)(ObjectAddress, nAppId);
        }

        public bool GetConflictingFileTimestamps(uint nAppId, ref uint pnTimestampLocal, ref uint pnTimestampRemote)
        {
            return
                GetFunction<NativeGetConflictingFileTimestampsUuu>(Functions.GetConflictingFileTimestamps66)(
                    ObjectAddress, nAppId, ref pnTimestampLocal, ref pnTimestampRemote);
        }

        public bool ResolveSyncConflict(uint nAppId, bool bAcceptLocalFiles)
        {
            return GetFunction<NativeResolveSyncConflictUb>(Functions.ResolveSyncConflict67)(ObjectAddress, nAppId,
                bAcceptLocalFiles);
        }

        public bool SynchronizeApp(uint nAppId, bool bSyncClient, bool bSyncServer)
        {
            return GetFunction<NativeSynchronizeAppUbb>(Functions.SynchronizeApp68)(ObjectAddress, nAppId, bSyncClient,
                bSyncServer);
        }

        public bool IsAppSyncInProgress(uint nAppId)
        {
            return GetFunction<NativeIsAppSyncInProgressU>(Functions.IsAppSyncInProgress69)(ObjectAddress, nAppId);
        }

        public void RunAutoCloudOnAppLaunch(uint nAppId)
        {
            GetFunction<NativeRunAutoCloudOnAppLaunchU>(Functions.RunAutoCloudOnAppLaunch70)(ObjectAddress, nAppId);
        }

        public void RunAutoCloudOnAppExit(uint nAppId)
        {
            GetFunction<NativeRunAutoCloudOnAppExitU>(Functions.RunAutoCloudOnAppExit71)(ObjectAddress, nAppId);
        }

        public bool ResetFileRequestState(uint nAppId)
        {
            return GetFunction<NativeResetFileRequestStateU>(Functions.ResetFileRequestState72)(ObjectAddress, nAppId);
        }

        public void ClearPublishFileUpdateRequests(uint nAppId)
        {
            GetFunction<NativeClearPublishFileUpdateRequestsU>(Functions.ClearPublishFileUpdateRequests73)(
                ObjectAddress, nAppId);
        }

        public int GetSubscribedFileDownloadCount()
        {
            return
                GetFunction<NativeGetSubscribedFileDownloadCount>(Functions.GetSubscribedFileDownloadCount74)(
                    ObjectAddress);
        }

        public bool BGetSubscribedFileDownloadInfo(int iFile, ref ulong punPublishedFileId, ref uint puBytesDownloaded,
            ref uint puBytesExpected, ref uint pnAppId)
        {
            return
                GetFunction<NativeBGetSubscribedFileDownloadInfoIuuuu>(Functions.BGetSubscribedFileDownloadInfo75)(
                    ObjectAddress, iFile, ref punPublishedFileId, ref puBytesDownloaded, ref puBytesExpected,
                    ref pnAppId);
        }

        public bool BGetSubscribedFileDownloadInfo(ulong unPublishedFileId, ref uint puBytesDownloaded,
            ref uint puBytesExpected, ref uint pnAppId)
        {
            return
                GetFunction<NativeBGetSubscribedFileDownloadInfoUuuu>(Functions.BGetSubscribedFileDownloadInfo76)(
                    ObjectAddress, unPublishedFileId, ref puBytesDownloaded, ref puBytesExpected, ref pnAppId);
        }

        public void PauseSubscribedFileDownloadsForApp(uint nAppId)
        {
            GetFunction<NativePauseSubscribedFileDownloadsForAppU>(Functions.PauseSubscribedFileDownloadsForApp77)(
                ObjectAddress, nAppId);
        }

        public void ResumeSubscribedFileDownloadsForApp(uint nAppId)
        {
            GetFunction<NativeResumeSubscribedFileDownloadsForAppU>(Functions.ResumeSubscribedFileDownloadsForApp78)(
                ObjectAddress, nAppId);
        }

        public void PauseAllSubscribedFileDownloads()
        {
            GetFunction<NativePauseAllSubscribedFileDownloads>(Functions.PauseAllSubscribedFileDownloads79)(
                ObjectAddress);
        }

        public void ResumeAllSubscribedFileDownloads()
        {
            GetFunction<NativeResumeAllSubscribedFileDownloads>(Functions.ResumeAllSubscribedFileDownloads80)(
                ObjectAddress);
        }

        public void OnAppLifetime(uint nAppId, bool bUnk)
        {
            GetFunction<NativeOnAppLifetimeUb>(Functions.OnAppLifetime81)(ObjectAddress, nAppId, bUnk);
        }

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EResult NativeFileWriteUesbi(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile, byte[] pvData,
            int cubData);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetFileSizeUes(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeFileReadUesbi(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile, byte[] pvData,
            int cubDataToRead);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeFileForgetUes(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeFileDeleteUes(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeFileShareUes(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeFileExistsUes(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeFilePersistedUes(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate long NativeGetFileTimestampUes(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetSyncPlatformsUese(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile,
            ERemoteStoragePlatform eRemoteStoragePlatform);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ERemoteStoragePlatform NativeGetSyncPlatformsUes(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeFileWriteStreamOpenUes(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EResult NativeFileWriteStreamCloseU(IntPtr thisptr, ulong hStream);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EResult NativeFileWriteStreamCancelU(IntPtr thisptr, ulong hStream);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EResult NativeFileWriteStreamWriteChunkUbi(
            IntPtr thisptr, ulong hStream, byte[] pvData, int cubData);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetFileCountUb(
            IntPtr thisptr, uint nAppId, [MarshalAs(UnmanagedType.I1)] bool bFromExternalApi);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetFileNameAndSizeUieib(
            IntPtr thisptr, uint nAppId, int iFile, ref ERemoteStorageFileRoot peRemoteStorageFileRoot,
            ref int pnFileSizeInBytes, [MarshalAs(UnmanagedType.I1)] bool bFromExternalApi);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetQuotaUii(
            IntPtr thisptr, uint nAppId, ref int pnTotalBytes, ref int pnAvailableBytes);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsCloudEnabledForAccount(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsCloudEnabledForAppU(IntPtr thisptr, uint nAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetCloudEnabledForAppUb(
            IntPtr thisptr, uint nAppId, [MarshalAs(UnmanagedType.I1)] bool bEnable);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeUgcDownloadUbu(
            IntPtr thisptr, ulong hContent, [MarshalAs(UnmanagedType.I1)] bool bUseNewCallback, uint uUnk);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeUgcDownloadToLocationUsu(
            IntPtr thisptr, ulong hContent, string cszLocation, uint uUnk);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetUgcDownloadProgressUuu(
            IntPtr thisptr, ulong hContent, ref uint puDownloadedBytes, ref uint puTotalBytes);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetUgcDetailsUusic(
            IntPtr thisptr, ulong hContent, ref uint pnAppId, StringBuilder ppchName, ref int pnFileSizeInBytes,
            ref ulong pSteamIdOwner);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeUgcReadUbiue(
            IntPtr thisptr, ulong hContent, byte[] pvData, int cubDataToRead, uint uOffset, EugcReadAction eAction);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetCachedUgcCount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeGetCachedUgcHandleI(IntPtr thisptr, int iCachedContent);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativePublishFileUessussese(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string cszFileName,
            string cszPreviewFileName, uint nConsumerAppId, string cszTitle, string cszDescription,
            ERemoteStoragePublishedFileVisibility eVisibility, ref SteamParamStringArrayT pTags,
            EWorkshopFileType eType);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativePublishVideoUessesusses(
            IntPtr thisptr, uint nAppId, EWorkshopVideoProvider eVideoProvider, string cszVideoAccountName,
            string cszVideoIdentifier, ERemoteStorageFileRoot eRemoteStorageFileRoot, string cszFileName,
            uint nConsumerAppId, string cszTitle, string cszDescription,
            ERemoteStoragePublishedFileVisibility eVisibility, ref SteamParamStringArrayT pTags);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativePublishVideoFromUrluessusses(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string cszVideoUrl,
            string cszFileName, uint nConsumerAppId, string cszTitle, string cszDescription,
            ERemoteStoragePublishedFileVisibility eVisibility, ref SteamParamStringArrayT pTags);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeCreatePublishedFileUpdateRequestUu(
            IntPtr thisptr, uint nAppId, ulong unPublishedFileId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeUpdatePublishedFileFileUs(IntPtr thisptr, ulong hUpdateRequest, string cszFile);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeUpdatePublishedFilePreviewFileUs(
            IntPtr thisptr, ulong hUpdateRequest, string cszPreviewFile);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeUpdatePublishedFileTitleUs(IntPtr thisptr, ulong hUpdateRequest, string cszTitle);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeUpdatePublishedFileDescriptionUs(
            IntPtr thisptr, ulong hUpdateRequest, string cszDescription);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeUpdatePublishedFileSetChangeDescriptionUs(
            IntPtr thisptr, ulong hUpdateRequest, string cszDescription);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeUpdatePublishedFileVisibilityUe(
            IntPtr thisptr, ulong hUpdateRequest, ERemoteStoragePublishedFileVisibility eVisibility);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeUpdatePublishedFileTagsUs(
            IntPtr thisptr, ulong hUpdateRequest, ref SteamParamStringArrayT pTags);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeUpdatePublishedFileUrlus(IntPtr thisptr, ulong hUpdateRequest, string cszUrl);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeCommitPublishedFileUpdateUeu(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, ulong hUpdateRequest);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeGetPublishedFileDetailsUbu(
            IntPtr thisptr, ulong unPublishedFileId, [MarshalAs(UnmanagedType.I1)] bool bUseNewCallback, uint arg2);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeDeletePublishedFileU(IntPtr thisptr, ulong unPublishedFileId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeEnumerateUserPublishedFilesUue(
            IntPtr thisptr, uint nAppId, uint uStartIndex, ERemoteStoragePublishedFileSortOrder eOrder);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeSubscribePublishedFileUu(IntPtr thisptr, uint nAppId, ulong unPublishedFileId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeEnumerateUserSubscribedFilesUube(
            IntPtr thisptr, uint nAppId, uint uStartIndex, byte uListType,
            EPublishedFileInfoMatchingFileType eMatchingFileType);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeUnsubscribePublishedFileUu(IntPtr thisptr, uint nAppId, ulong unPublishedFileId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeSetUserPublishedFileActionUue(
            IntPtr thisptr, uint nAppId, ulong unPublishedFileId, EWorkshopFileAction eAction);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeEnumeratePublishedFilesByUserActionUeu(
            IntPtr thisptr, uint nAppId, EWorkshopFileAction eAction, uint uStartIndex);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeEnumerateUserSubscribedFilesWithUpdatesUuu(
            IntPtr thisptr, uint nAppId, uint uStartIndex, uint uStartTime);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeGetCreItemVoteSummaryU(IntPtr thisptr, ulong unPublishedFileId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeUpdateUserPublishedItemVoteUb(
            IntPtr thisptr, ulong unPublishedFileId, [MarshalAs(UnmanagedType.I1)] bool bVoteUp);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeGetUserPublishedItemVoteDetailsU(IntPtr thisptr, ulong unPublishedFileId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeEnumerateUserSharedWorkshopFilesUcuss(
            IntPtr thisptr, uint nAppId, ulong creatorSteamId, uint uStartIndex,
            ref SteamParamStringArrayT pRequiredTags, ref SteamParamStringArrayT pExcludedTags);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeEnumeratePublishedWorkshopFilesUeeuuuss(
            IntPtr thisptr, uint nAppId, EWorkshopEnumerationType eType, EPublishedFileInfoMatchingFileType eFileType,
            uint uStartIndex, uint cDays, uint cCount, ref SteamParamStringArrayT pTags,
            ref SteamParamStringArrayT pUserTags);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EFileRemoteStorageSyncState NativeEGetFileSyncStateUes(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsFileSyncingUes(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EResult NativeFilePersistUes(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeFileFetchUes(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeResolvePathUessu(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchRelPath,
            StringBuilder pchDest, uint cchDest);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EResult NativeFileTouchUesb(
            IntPtr thisptr, uint nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile,
            [MarshalAs(UnmanagedType.I1)] bool arg3);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetCloudEnabledForAccountB(
            IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bEnabled);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeLoadLocalFileInfoCacheU(IntPtr thisptr, uint nAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeEvaluateRemoteStorageSyncStateU(IntPtr thisptr, uint nAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ERemoteStorageSyncState NativeGetRemoteStorageSyncStateU(IntPtr thisptr, uint nAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeHaveLatestFilesLocallyU(IntPtr thisptr, uint nAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetConflictingFileTimestampsUuu(
            IntPtr thisptr, uint nAppId, ref uint pnTimestampLocal, ref uint pnTimestampRemote);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeResolveSyncConflictUb(
            IntPtr thisptr, uint nAppId, [MarshalAs(UnmanagedType.I1)] bool bAcceptLocalFiles);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSynchronizeAppUbb(
            IntPtr thisptr, uint nAppId, [MarshalAs(UnmanagedType.I1)] bool bSyncClient,
            [MarshalAs(UnmanagedType.I1)] bool bSyncServer);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsAppSyncInProgressU(IntPtr thisptr, uint nAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeRunAutoCloudOnAppLaunchU(IntPtr thisptr, uint nAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeRunAutoCloudOnAppExitU(IntPtr thisptr, uint nAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeResetFileRequestStateU(IntPtr thisptr, uint nAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeClearPublishFileUpdateRequestsU(IntPtr thisptr, uint nAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetSubscribedFileDownloadCount(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBGetSubscribedFileDownloadInfoIuuuu(
            IntPtr thisptr, int iFile, ref ulong punPublishedFileId, ref uint puBytesDownloaded,
            ref uint puBytesExpected, ref uint pnAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBGetSubscribedFileDownloadInfoUuuu(
            IntPtr thisptr, ulong unPublishedFileId, ref uint puBytesDownloaded, ref uint puBytesExpected,
            ref uint pnAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativePauseSubscribedFileDownloadsForAppU(IntPtr thisptr, uint nAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeResumeSubscribedFileDownloadsForAppU(IntPtr thisptr, uint nAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativePauseAllSubscribedFileDownloads(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeResumeAllSubscribedFileDownloads(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeOnAppLifetimeUb(IntPtr thisptr, uint nAppId, [MarshalAs(UnmanagedType.I1)] bool bUnk
            );
    };
}