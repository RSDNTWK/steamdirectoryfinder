// This file is automatically generated.

using System.Runtime.InteropServices;

namespace Steam4Net
{
    public enum ESteamUserStatType
    {
        KeSteamUserStatTypeInvalid = 0,
        KeSteamUserStatTypeInt = 1,
        KeSteamUserStatTypeFloat = 2,
        KeSteamUserStatTypeAvgrate = 3,
        KeSteamUserStatTypeAchievements = 4,
        KeSteamUserStatTypeGroupachievements = 5
    };

    public enum ELeaderboardDataRequest
    {
        KeLeaderboardDataRequestGlobal = 0,
        KeLeaderboardDataRequestGlobalAroundUser = 1,
        KeLeaderboardDataRequestFriends = 2,
        KeLeaderboardDataRequestUsers = 3
    };

    public enum ELeaderboardDisplayType
    {
        KeLeaderboardDisplayTypeNone = 0,
        KeLeaderboardDisplayTypeNumeric = 1,
        KeLeaderboardDisplayTypeTimeSeconds = 2,
        KeLeaderboardDisplayTypeTimeMilliSeconds = 3
    };

    public enum ELeaderboardUploadScoreMethod
    {
        KeLeaderboardUploadScoreMethodNone = 0,
        KeLeaderboardUploadScoreMethodKeepBest = 1,
        KeLeaderboardUploadScoreMethodForceUpdate = 2
    };

    public enum ELeaderboardSortMethod
    {
        KeLeaderboardSortMethodNone = 0,
        KeLeaderboardSortMethodAscending = 1,
        KeLeaderboardSortMethodDescending = 2
    };

    public enum EGetAchievementIcon
    {
        KeGetAchievementIconUser = 0,
        KeGetAchievementIconAchieved = 1,
        KeGetAchievementIconUnachieved = 2
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    public struct LeaderboardEntry001T
    {
        public SteamIdT m_steamIDUser;
        public int m_nGlobalRank;
        public int m_nScore;
        public int m_cDetails;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    public struct LeaderboardEntry002T
    {
        public SteamIdT m_steamIDUser;
        public int m_nGlobalRank;
        public int m_nScore;
        public int m_cDetails;
        public ulong m_hUGC;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1101)]
    public struct UserStatsReceivedT
    {
        public const int KiCallback = 1101;
        public ulong m_nGameID;
        public EResult m_eResult;
        public SteamIdT m_steamIDUser;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1102)]
    public struct UserStatsStoredT
    {
        public const int KiCallback = 1102;
        public ulong m_nGameID;
        public EResult m_eResult;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1103)]
    public struct UserAchievementStoredT
    {
        public const int KiCallback = 1103;
        public ulong m_nGameID;

        [MarshalAs(UnmanagedType.I1)]
        public bool m_bGroupAchievement;

        [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 128)]
        public string m_rgchAchievementName;

        public uint m_nCurProgress;
        public uint m_nMaxProgress;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1104)]
    public struct LeaderboardFindResultT
    {
        public const int KiCallback = 1104;
        public ulong m_hSteamLeaderboard;
        public byte m_bLeaderboardFound;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1105)]
    public struct LeaderboardScoresDownloadedT
    {
        public const int KiCallback = 1105;
        public ulong m_hSteamLeaderboard;
        public ulong m_hSteamLeaderboardEntries;
        public int m_cEntryCount;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1106)]
    public struct LeaderboardScoreUploadedT
    {
        public const int KiCallback = 1106;
        public byte m_bSuccess;
        public ulong m_hSteamLeaderboard;
        public int m_nScore;
        public byte m_bScoreChanged;
        public int m_nGlobalRankNew;
        public int m_nGlobalRankPrevious;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1107)]
    public struct NumberOfCurrentPlayersT
    {
        public const int KiCallback = 1107;
        public byte m_bSuccess;
        public int m_cPlayers;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1108)]
    public struct UserStatsUnloadedT
    {
        public const int KiCallback = 1108;
        public SteamIdT m_steamIDUser;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1109)]
    public struct UserAchievementIconFetchedT
    {
        public const int KiCallback = 1109;
        public GameIdT m_nGameID;

        [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 128)]
        public string m_rgchAchievementName;

        [MarshalAs(UnmanagedType.I1)]
        public bool m_bAchieved;

        public int m_nIconHandle;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1110)]
    public struct GlobalAchievementPercentagesReadyT
    {
        public const int KiCallback = 1110;
        public ulong m_nGameID;
        public EResult m_eResult;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1111)]
    public struct LeaderboardUgcSetT
    {
        public const int KiCallback = 1111;
        public EResult m_eResult;
        public ulong m_hSteamLeaderboard;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1112)]
    public struct GlobalStatsReceivedT
    {
        public const int KiCallback = 1112;
        public ulong m_nGameID;
        public EResult m_eResult;
    };
}