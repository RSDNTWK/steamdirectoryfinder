// This file is automatically generated.

using System;
using System.Runtime.InteropServices;
using System.Text;

namespace Steam4Net
{
    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    public class SteamApps005VTable
    {
        public IntPtr BIsSubscribed0;
        public IntPtr BIsLowViolence1;
        public IntPtr BIsCybercafe2;
        public IntPtr BIsVACBanned3;
        public IntPtr GetCurrentGameLanguage4;
        public IntPtr GetAvailableGameLanguages5;
        public IntPtr BIsSubscribedApp6;
        public IntPtr BIsDlcInstalled7;
        public IntPtr GetEarliestPurchaseUnixTime8;
        public IntPtr BIsSubscribedFromFreeWeekend9;
        public IntPtr GetDLCCount10;
        public IntPtr BGetDLCDataByIndex11;
        public IntPtr InstallDLC12;
        public IntPtr UninstallDLC13;
        public IntPtr RequestAppProofOfPurchaseKey14;
        public IntPtr GetCurrentBetaName15;
        public IntPtr MarkContentCorrupt16;
        public IntPtr GetInstalledDepots17;
        public IntPtr GetAppInstallDir18;
        public IntPtr BIsAppInstalled19;
        private IntPtr DTorISteamApps00520;
    };

    [InteropHelp.InterfaceVersionAttribute("STEAMAPPS_INTERFACE_VERSION005")]
    public class SteamApps005 : InteropHelp.NativeWrapper<SteamApps005VTable>
    {
        public bool BIsSubscribed()
        {
            return GetFunction<NativeBIsSubscribed>(Functions.BIsSubscribed0)(ObjectAddress);
        }

        public bool BIsLowViolence()
        {
            return GetFunction<NativeBIsLowViolence>(Functions.BIsLowViolence1)(ObjectAddress);
        }

        public bool BIsCybercafe()
        {
            return GetFunction<NativeBIsCybercafe>(Functions.BIsCybercafe2)(ObjectAddress);
        }

        public bool BisVacBanned()
        {
            return GetFunction<NativeBisVacBanned>(Functions.BIsVACBanned3)(ObjectAddress);
        }

        public string GetCurrentGameLanguage()
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetCurrentGameLanguage>(Functions.GetCurrentGameLanguage4)(ObjectAddress)));
        }

        public string GetAvailableGameLanguages()
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetAvailableGameLanguages>(Functions.GetAvailableGameLanguages5)(ObjectAddress)));
        }

        public bool BIsSubscribedApp(uint nAppId)
        {
            return GetFunction<NativeBIsSubscribedAppU>(Functions.BIsSubscribedApp6)(ObjectAddress, nAppId);
        }

        public bool BIsDlcInstalled(uint nAppId)
        {
            return GetFunction<NativeBIsDlcInstalledU>(Functions.BIsDlcInstalled7)(ObjectAddress, nAppId);
        }

        public uint GetEarliestPurchaseUnixTime(uint nAppId)
        {
            return GetFunction<NativeGetEarliestPurchaseUnixTimeU>(Functions.GetEarliestPurchaseUnixTime8)(
                ObjectAddress, nAppId);
        }

        public bool BIsSubscribedFromFreeWeekend()
        {
            return
                GetFunction<NativeBIsSubscribedFromFreeWeekend>(Functions.BIsSubscribedFromFreeWeekend9)(ObjectAddress);
        }

        public int GetDlcCount()
        {
            return GetFunction<NativeGetDlcCount>(Functions.GetDLCCount10)(ObjectAddress);
        }

        public bool BGetDlcDataByIndex(int iDlc, ref uint pAppId, ref bool pbAvailable, StringBuilder pchName)
        {
            return GetFunction<NativeBGetDlcDataByIndexIubsi>(Functions.BGetDLCDataByIndex11)(ObjectAddress, iDlc,
                ref pAppId, ref pbAvailable, pchName, pchName.Capacity);
        }

        public void InstallDlc(uint nAppId)
        {
            GetFunction<NativeInstallDlcu>(Functions.InstallDLC12)(ObjectAddress, nAppId);
        }

        public void UninstallDlc(uint nAppId)
        {
            GetFunction<NativeUninstallDlcu>(Functions.UninstallDLC13)(ObjectAddress, nAppId);
        }

        public void RequestAppProofOfPurchaseKey(uint nAppId)
        {
            GetFunction<NativeRequestAppProofOfPurchaseKeyU>(Functions.RequestAppProofOfPurchaseKey14)(ObjectAddress,
                nAppId);
        }

        public bool GetCurrentBetaName(StringBuilder pchName)
        {
            return GetFunction<NativeGetCurrentBetaNameSi>(Functions.GetCurrentBetaName15)(ObjectAddress, pchName,
                pchName.Capacity);
        }

        public bool MarkContentCorrupt(bool bMissingFilesOnly)
        {
            return GetFunction<NativeMarkContentCorruptB>(Functions.MarkContentCorrupt16)(ObjectAddress,
                bMissingFilesOnly);
        }

        public uint GetInstalledDepots(ref uint pvecDepots, uint cMaxDepots)
        {
            return GetFunction<NativeGetInstalledDepotsUu>(Functions.GetInstalledDepots17)(ObjectAddress, ref pvecDepots,
                cMaxDepots);
        }

        public uint GetAppInstallDir(uint appId, StringBuilder pchFolder)
        {
            return GetFunction<NativeGetAppInstallDirUsu>(Functions.GetAppInstallDir18)(ObjectAddress, appId, pchFolder,
                (uint)pchFolder.Capacity);
        }

        public bool BIsAppInstalled(uint appId)
        {
            return GetFunction<NativeBIsAppInstalledU>(Functions.BIsAppInstalled19)(ObjectAddress, appId);
        }

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsSubscribed(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsLowViolence(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsCybercafe(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBisVacBanned(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetCurrentGameLanguage(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetAvailableGameLanguages(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsSubscribedAppU(IntPtr thisptr, uint nAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsDlcInstalledU(IntPtr thisptr, uint nAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetEarliestPurchaseUnixTimeU(IntPtr thisptr, uint nAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsSubscribedFromFreeWeekend(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetDlcCount(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBGetDlcDataByIndexIubsi(
            IntPtr thisptr, int iDlc, ref uint pAppId, ref bool pbAvailable, StringBuilder pchName,
            int cchNameBufferSize);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeInstallDlcu(IntPtr thisptr, uint nAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeUninstallDlcu(IntPtr thisptr, uint nAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeRequestAppProofOfPurchaseKeyU(IntPtr thisptr, uint nAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetCurrentBetaNameSi(IntPtr thisptr, StringBuilder pchName, int cchNameBufferSize);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeMarkContentCorruptB(
            IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bMissingFilesOnly);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetInstalledDepotsUu(IntPtr thisptr, ref uint pvecDepots, uint cMaxDepots);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetAppInstallDirUsu(
            IntPtr thisptr, uint appId, StringBuilder pchFolder, uint cchFolderBufferSize);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsAppInstalledU(IntPtr thisptr, uint appId);
    };
}