// This file is automatically generated.

using System;
using System.Runtime.InteropServices;
using System.Text;

namespace Steam4Net
{
    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    public struct ClientAppInfo
    {
        public int m_iPadding;
    };

    public enum EParentalFeature
    {
        KeParentalFeatureInvalid = 0,
        KeParentalFeatureStore = 1,
        KeParentalFeatureCommunity = 2,
        KeParentalFeatureProfile = 3,
        KeParentalFeatureFriends = 4,
        KeParentalFeatureNews = 5,
        KeParentalFeatureTrading = 6,
        KeParentalFeatureSettings = 7,
        KeParentalFeatureConsole = 8,
        KeParentalFeatureBrowser = 9,
        KeParentalFeatureOverlay = 10
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    public struct COfflineOfflineLogonTicket
    {
        public int m_iPadding;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    public class ClientUserVTable
    {
        public IntPtr GetHSteamUser0;
        public IntPtr LogOn1;
        public IntPtr LogOnWithPassword2;
        public IntPtr LogOnAndCreateNewSteamAccountIfNeeded3;
        public IntPtr LogOnConnectionless4;
        public IntPtr LogOff5;
        public IntPtr BLoggedOn6;
        public IntPtr GetLogonState7;
        public IntPtr BConnected8;
        public IntPtr BTryingToLogin9;
        public IntPtr GetSteamID10;
        public IntPtr GetConsoleSteamID11;
        public IntPtr IsVACBanned12;
        public IntPtr RequireShowVACBannedMessage13;
        public IntPtr AcknowledgeVACBanning14;
        public IntPtr SetSteam2Ticket15;
        public IntPtr BExistsSteam2Ticket16;
        public IntPtr SetEmail17;
        public IntPtr SetConfigString18;
        public IntPtr GetConfigString19;
        public IntPtr SetConfigInt20;
        public IntPtr GetConfigInt21;
        public IntPtr GetConfigStoreKeyName22;
        public IntPtr InitiateGameConnection23;
        public IntPtr InitiateGameConnectionOld24;
        public IntPtr TerminateGameConnection25;
        public IntPtr SetSelfAsPrimaryChatDestination26;
        public IntPtr IsPrimaryChatDestination27;
        public IntPtr RequestLegacyCDKey28;
        public IntPtr SendGuestPassByEmail29;
        public IntPtr SendGuestPassByAccountID30;
        public IntPtr AckGuestPass31;
        public IntPtr RedeemGuestPass32;
        public IntPtr GetGuestPassToGiveCount33;
        public IntPtr GetGuestPassToRedeemCount34;
        public IntPtr GetGuestPassLastUpdateTime35;
        public IntPtr GetGuestPassToGiveInfo36;
        public IntPtr GetGuestPassToRedeemInfo37;
        public IntPtr GetGuestPassToRedeemSenderAddress38;
        public IntPtr GetGuestPassToRedeemSenderName39;
        public IntPtr RequestGuestPassTargetList40;
        public IntPtr RequestGiftTargetList41;
        public IntPtr AcknowledgeMessageByGID42;
        public IntPtr SetLanguage43;
        public IntPtr TrackAppUsageEvent44;
        public IntPtr RaiseConnectionPriority45;
        public IntPtr ResetConnectionPriority46;
        public IntPtr SetAccountNameFromSteam247;
        public IntPtr SetPasswordFromSteam248;
        public IntPtr BHasCachedCredentials49;
        public IntPtr SetAccountNameForCachedCredentialLogin50;
        public IntPtr SetLoginInformation51;
        public IntPtr SetLauncherType52;
        public IntPtr ClearAllLoginInformation53;
        public IntPtr SetAccountCreationTime54;
        public IntPtr RequestWebAuthToken55;
        public IntPtr GetCurrentWebAuthToken56;
        public IntPtr GetLanguage57;
        public IntPtr BIsCyberCafe58;
        public IntPtr BIsAcademicAccount59;
        public IntPtr CreateAccount60;
        public IntPtr ResetPassword61;
        public IntPtr TrackNatTraversalStat62;
        public IntPtr GetPackageIDForGuestPassToRedeemByGID63;
        public IntPtr TrackSteamUsageEvent64;
        public IntPtr TrackSteamGUIUsage65;
        public IntPtr SetComputerInUse66;
        public IntPtr BIsGameRunning67;
        public IntPtr GetCurrentSessionToken68;
        public IntPtr BUpdateAppOwnershipTicket69;
        public IntPtr RequestCustomBinary70;
        public IntPtr GetCustomBinariesState71;
        public IntPtr RequestCustomBinaries72;
        public IntPtr SetCellID73;
        public IntPtr SetWinningPingTimeForCellID74;
        public IntPtr GetUserBaseFolder75;
        public IntPtr GetUserDataFolder76;
        public IntPtr GetUserConfigFolder77;
        public IntPtr GetAccountName78;
        public IntPtr GetAccountName79;
        public IntPtr IsPasswordRemembered80;
        public IntPtr RequiresLegacyCDKey81;
        public IntPtr GetLegacyCDKey82;
        public IntPtr HasLegacyCDKey83;
        public IntPtr SetLegacyCDKey84;
        public IntPtr RemoveLegacyCDKey85;
        public IntPtr RequestLegacyCDKeyFromApp86;
        public IntPtr BIsAnyGameRunning87;
        public IntPtr TestAvailablePassword88;
        public IntPtr GetSteamGuardDetails89;
        public IntPtr ChangePassword90;
        public IntPtr ChangeEmail91;
        public IntPtr ChangeSecretQuestionAndAnswer92;
        public IntPtr SetSteam2FullASTicket93;
        public IntPtr GetSteam2FullASTicket94;
        public IntPtr GetEmail95;
        public IntPtr RequestForgottenPasswordEmail96;
        public IntPtr FindAccountsByEmailAddress97;
        public IntPtr FindAccountsByCdKey98;
        public IntPtr GetNumAccountsWithEmailAddress99;
        public IntPtr IsAccountNameInUse100;
        public IntPtr Test_FakeConnectionTimeout101;
        public IntPtr RunInstallScript102;
        public IntPtr IsInstallScriptRunning103;
        public IntPtr GetInstallScriptState104;
        public IntPtr SpawnProcess105;
        public IntPtr GetAppOwnershipTicketLength106;
        public IntPtr GetAppOwnershipTicketData107;
        public IntPtr GetAppOwnershipTicketExtendedData108;
        public IntPtr GetMarketingMessageCount109;
        public IntPtr GetMarketingMessage110;
        public IntPtr GetAuthSessionTicket111;
        public IntPtr BeginAuthSession112;
        public IntPtr EndAuthSession113;
        public IntPtr CancelAuthTicket114;
        public IntPtr IsUserSubscribedAppInTicket115;
        public IntPtr AdvertiseGame116;
        public IntPtr RequestEncryptedAppTicket117;
        public IntPtr GetEncryptedAppTicket118;
        public IntPtr GetGameBadgeLevel119;
        public IntPtr GetPlayerSteamLevel120;
        public IntPtr SetAccountLimited121;
        public IntPtr BIsAccountLimited122;
        public IntPtr SetAccountCommunityBanned123;
        public IntPtr BIsAccountCommunityBanned124;
        public IntPtr SendValidationEmail125;
        public IntPtr BGameConnectTokensAvailable126;
        public IntPtr NumGamesRunning127;
        public IntPtr GetRunningGameID128;
        public IntPtr GetAccountSecurityPolicyFlags129;
        public IntPtr RequestChangeEmail130;
        public IntPtr ChangePasswordWithCode131;
        public IntPtr ChangeEmailWithCode132;
        public IntPtr ChangeSecretQuestionAndAnswerWithCode133;
        public IntPtr SetClientStat134;
        public IntPtr VerifyPassword135;
        public IntPtr BSupportUser136;
        public IntPtr BIsAppOverlayEnabled137;
        public IntPtr BIsBehindNAT138;
        public IntPtr GetMicroTxnAppID139;
        public IntPtr GetMicroTxnOrderID140;
        public IntPtr BGetMicroTxnPrice141;
        public IntPtr GetMicroTxnLineItemCount142;
        public IntPtr BGetMicroTxnLineItem143;
        public IntPtr BIsSandboxMicroTxn144;
        public IntPtr BMicroTxnRequiresCachedPmtMethod145;
        public IntPtr AuthorizeMicroTxn146;
        public IntPtr BGetWalletBalance147;
        public IntPtr RequestMicroTxnInfo148;
        public IntPtr BGetAppMinutesPlayed149;
        public IntPtr GetAppLastPlayedTime150;
        public IntPtr BGetGuideURL151;
        public IntPtr GetClientAppListResponse_AddApp152;
        public IntPtr GetClientAppListResponse_AddDLC153;
        public IntPtr GetClientAppListResponse_Done154;
        public IntPtr PostUIResultToClientJob155;
        public IntPtr BPromptToVerifyEmail156;
        public IntPtr BPromptToChangePassword157;
        public IntPtr BAccountLocked158;
        public IntPtr BAccountShouldShowLockUI159;
        public IntPtr BAccountLockedByIPT160;
        public IntPtr GetCountAuthedComputers161;
        public IntPtr GetSteamGuardProvider162;
        public IntPtr GetSteamGuardRequireCodeByDefault163;
        public IntPtr ShowSteamGuardProviderOptions164;
        public IntPtr SteamGuardProviderMobileIsOption165;
        public IntPtr BSteamGuardNewMachineNotification166;
        public IntPtr GetSteamGuardEnabledTime167;
        public IntPtr GetSteamGuardHistoryEntry168;
        public IntPtr SetSteamGuardNewMachineDialogResponse169;
        public IntPtr BAccountCanUseIPT170;
        public IntPtr ChangeTwoFactorAuthOptions171;
        public IntPtr ChangeSteamGuardOptions172;
        public IntPtr Set2ndFactorAuthCode173;
        public IntPtr SetUserMachineName174;
        public IntPtr GetUserMachineName175;
        public IntPtr BAccountHasIPTConfig176;
        public IntPtr GetEmailDomainFromLogonFailure177;
        public IntPtr BIsSubscribedApp178;
        public IntPtr RegisterActivationCode179;
        public IntPtr OptionalDLCInstallation180;
        public IntPtr AckSystemIM181;
        public IntPtr RequestSpecialSurvey182;
        public IntPtr SendSpecialSurveyResponse183;
        public IntPtr RequestNotifications184;
        public IntPtr GetAppOwnershipInfo185;
        public IntPtr SendGameWebCallback186;
        public IntPtr BIsCurrentlyStreaming187;
        public IntPtr RequestStopStreaming188;
        public IntPtr OnBigPictureStreamingResult189;
        public IntPtr OnBigPictureStreamingDone190;
        public IntPtr OnBigPictureStreamRestarting191;
        public IntPtr LockParentalLock192;
        public IntPtr UnlockParentalLock193;
        public IntPtr BlockApp194;
        public IntPtr UnblockApp195;
        public IntPtr BIsParentalLockEnabled196;
        public IntPtr BIsParentalLockLocked197;
        public IntPtr BIsAppBlocked198;
        public IntPtr BIsAppInBlockList199;
        public IntPtr BIsFeatureBlocked200;
        public IntPtr BIsFeatureInBlockList201;
        public IntPtr ValidateOfflineLogonTicket202;
        public IntPtr BGetOfflineLogonTicket203;
        private IntPtr DTorIClientUser204;
    };

    [InteropHelp.InterfaceVersionAttribute("CLIENTUSER_INTERFACE_VERSION001")]
    public class ClientUser : InteropHelp.NativeWrapper<ClientUserVTable>
    {
        public int GetHSteamUser()
        {
            return GetFunction<NativeGetHSteamUser>(Functions.GetHSteamUser0)(ObjectAddress);
        }

        public void LogOn(bool bInteractive, CSteamId steamId)
        {
            GetFunction<NativeLogOnBc>(Functions.LogOn1)(ObjectAddress, bInteractive, steamId.ConvertToUint64());
        }

        public void LogOnWithPassword(bool bInteractive, string pchLogin, string pchPassword)
        {
            GetFunction<NativeLogOnWithPasswordBss>(Functions.LogOnWithPassword2)(ObjectAddress, bInteractive, pchLogin,
                pchPassword);
        }

        public void LogOnAndCreateNewSteamAccountIfNeeded(bool bInteractive)
        {
            GetFunction<NativeLogOnAndCreateNewSteamAccountIfNeededB>(Functions.LogOnAndCreateNewSteamAccountIfNeeded3)(
                ObjectAddress, bInteractive);
        }

        public EResult LogOnConnectionless()
        {
            return GetFunction<NativeLogOnConnectionless>(Functions.LogOnConnectionless4)(ObjectAddress);
        }

        public void LogOff()
        {
            GetFunction<NativeLogOff>(Functions.LogOff5)(ObjectAddress);
        }

        public bool BLoggedOn()
        {
            return GetFunction<NativeBLoggedOn>(Functions.BLoggedOn6)(ObjectAddress);
        }

        public ELogonState GetLogonState()
        {
            return GetFunction<NativeGetLogonState>(Functions.GetLogonState7)(ObjectAddress);
        }

        public bool BConnected()
        {
            return GetFunction<NativeBConnected>(Functions.BConnected8)(ObjectAddress);
        }

        public bool BTryingToLogin()
        {
            return GetFunction<NativeBTryingToLogin>(Functions.BTryingToLogin9)(ObjectAddress);
        }

        public CSteamId GetSteamId()
        {
            ulong ret = 0;
            GetFunction<NativeGetSteamId>(Functions.GetSteamID10)(ObjectAddress, ref ret);
            return new CSteamId(ret);
        }

        public CSteamId GetConsoleSteamId()
        {
            ulong ret = 0;
            GetFunction<NativeGetConsoleSteamId>(Functions.GetConsoleSteamID11)(ObjectAddress, ref ret);
            return new CSteamId(ret);
        }

        public bool IsVacBanned(uint nGameId)
        {
            return GetFunction<NativeIsVacBannedU>(Functions.IsVACBanned12)(ObjectAddress, nGameId);
        }

        public bool RequireShowVacBannedMessage(uint nAppId)
        {
            return
                GetFunction<NativeRequireShowVacBannedMessageU>(Functions.RequireShowVACBannedMessage13)(ObjectAddress,
                    nAppId);
        }

        public void AcknowledgeVacBanning(uint nAppId)
        {
            GetFunction<NativeAcknowledgeVacBanningU>(Functions.AcknowledgeVACBanning14)(ObjectAddress, nAppId);
        }

        public void SetSteam2Ticket(byte[] pubTicket)
        {
            GetFunction<NativeSetSteam2TicketBi>(Functions.SetSteam2Ticket15)(ObjectAddress, pubTicket, pubTicket.Length);
        }

        public bool BExistsSteam2Ticket()
        {
            return GetFunction<NativeBExistsSteam2Ticket>(Functions.BExistsSteam2Ticket16)(ObjectAddress);
        }

        public bool SetEmail(string pchEmail)
        {
            return GetFunction<NativeSetEmailS>(Functions.SetEmail17)(ObjectAddress, pchEmail);
        }

        public bool SetConfigString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue)
        {
            return GetFunction<NativeSetConfigStringEss>(Functions.SetConfigString18)(ObjectAddress, eRegistrySubTree,
                pchKey, pchValue);
        }

        public bool GetConfigString(ERegistrySubTree eRegistrySubTree, string pchKey, StringBuilder pchValue)
        {
            return GetFunction<NativeGetConfigStringEssi>(Functions.GetConfigString19)(ObjectAddress, eRegistrySubTree,
                pchKey, pchValue, pchValue.Capacity);
        }

        public bool SetConfigInt(ERegistrySubTree eRegistrySubTree, string pchKey, int iValue)
        {
            return GetFunction<NativeSetConfigIntEsi>(Functions.SetConfigInt20)(ObjectAddress, eRegistrySubTree, pchKey,
                iValue);
        }

        public bool GetConfigInt(ERegistrySubTree eRegistrySubTree, string pchKey, ref int pValue)
        {
            return GetFunction<NativeGetConfigIntEsi>(Functions.GetConfigInt21)(ObjectAddress, eRegistrySubTree, pchKey,
                ref pValue);
        }

        public bool GetConfigStoreKeyName(ERegistrySubTree eRegistrySubTree, string pchKey, StringBuilder pchStoreName)
        {
            return GetFunction<NativeGetConfigStoreKeyNameEssi>(Functions.GetConfigStoreKeyName22)(ObjectAddress,
                eRegistrySubTree, pchKey, pchStoreName, pchStoreName.Capacity);
        }

        public int InitiateGameConnection(byte[] pOutputBlob, CSteamId steamIdgs, CGameId gameId, uint unIpServer,
            ushort usPortServer, bool bSecure)
        {
            return GetFunction<NativeInitiateGameConnectionBiccuub>(Functions.InitiateGameConnection23)(ObjectAddress,
                pOutputBlob, pOutputBlob.Length, steamIdgs.ConvertToUint64(), gameId.ConvertToUint64(), unIpServer,
                usPortServer, bSecure);
        }

        public int InitiateGameConnectionOld(byte[] pOutputBlob, CSteamId steamIdgs, CGameId gameId, uint unIpServer,
            ushort usPortServer, bool bSecure, byte[] pvSteam2GetEncryptionKey)
        {
            return
                GetFunction<NativeInitiateGameConnectionOldBiccuubbi>(Functions.InitiateGameConnectionOld24)(
                    ObjectAddress, pOutputBlob, pOutputBlob.Length, steamIdgs.ConvertToUint64(),
                    gameId.ConvertToUint64(), unIpServer, usPortServer, bSecure, pvSteam2GetEncryptionKey,
                    pvSteam2GetEncryptionKey.Length);
        }

        public void TerminateGameConnection(uint unIpServer, ushort usPortServer)
        {
            GetFunction<NativeTerminateGameConnectionUu>(Functions.TerminateGameConnection25)(ObjectAddress, unIpServer,
                usPortServer);
        }

        public void SetSelfAsPrimaryChatDestination()
        {
            GetFunction<NativeSetSelfAsPrimaryChatDestination>(Functions.SetSelfAsPrimaryChatDestination26)(
                ObjectAddress);
        }

        public bool IsPrimaryChatDestination()
        {
            return GetFunction<NativeIsPrimaryChatDestination>(Functions.IsPrimaryChatDestination27)(ObjectAddress);
        }

        public void RequestLegacyCdKey(uint iAppId)
        {
            GetFunction<NativeRequestLegacyCdKeyU>(Functions.RequestLegacyCDKey28)(ObjectAddress, iAppId);
        }

        public bool SendGuestPassByEmail(string pchEmailAccount, ulong gidGuestPassId, bool bResending)
        {
            return GetFunction<NativeSendGuestPassByEmailSub>(Functions.SendGuestPassByEmail29)(ObjectAddress,
                pchEmailAccount, gidGuestPassId, bResending);
        }

        public bool SendGuestPassByAccountId(uint uAccountId, ulong gidGuestPassId, bool bResending)
        {
            return GetFunction<NativeSendGuestPassByAccountIduub>(Functions.SendGuestPassByAccountID30)(ObjectAddress,
                uAccountId, gidGuestPassId, bResending);
        }

        public bool AckGuestPass(string pchGuestPassCode)
        {
            return GetFunction<NativeAckGuestPassS>(Functions.AckGuestPass31)(ObjectAddress, pchGuestPassCode);
        }

        public bool RedeemGuestPass(string pchGuestPassCode)
        {
            return GetFunction<NativeRedeemGuestPassS>(Functions.RedeemGuestPass32)(ObjectAddress, pchGuestPassCode);
        }

        public uint GetGuestPassToGiveCount()
        {
            return GetFunction<NativeGetGuestPassToGiveCount>(Functions.GetGuestPassToGiveCount33)(ObjectAddress);
        }

        public uint GetGuestPassToRedeemCount()
        {
            return GetFunction<NativeGetGuestPassToRedeemCount>(Functions.GetGuestPassToRedeemCount34)(ObjectAddress);
        }

        public uint GetGuestPassLastUpdateTime()
        {
            return GetFunction<NativeGetGuestPassLastUpdateTime>(Functions.GetGuestPassLastUpdateTime35)(ObjectAddress);
        }

        public bool GetGuestPassToGiveInfo(uint nPassIndex, ref ulong pgidGuestPassId, ref uint pnPackageId,
            ref uint pRTime32Created, ref uint pRTime32Expiration, ref uint pRTime32Sent, ref uint pRTime32Redeemed,
            StringBuilder pchRecipientAddress)
        {
            return GetFunction<NativeGetGuestPassToGiveInfoUuuuuuusi>(Functions.GetGuestPassToGiveInfo36)(
                ObjectAddress, nPassIndex, ref pgidGuestPassId, ref pnPackageId, ref pRTime32Created,
                ref pRTime32Expiration, ref pRTime32Sent, ref pRTime32Redeemed, pchRecipientAddress,
                pchRecipientAddress.Capacity);
        }

        public bool GetGuestPassToRedeemInfo(uint nPassIndex, ref ulong pgidGuestPassId, ref uint pnPackageId,
            ref uint pRTime32Created, ref uint pRTime32Expiration, ref uint pRTime32Sent, ref uint pRTime32Redeemed)
        {
            return
                GetFunction<NativeGetGuestPassToRedeemInfoUuuuuuu>(Functions.GetGuestPassToRedeemInfo37)(ObjectAddress,
                    nPassIndex, ref pgidGuestPassId, ref pnPackageId, ref pRTime32Created, ref pRTime32Expiration,
                    ref pRTime32Sent, ref pRTime32Redeemed);
        }

        public bool GetGuestPassToRedeemSenderAddress(uint nPassIndex, StringBuilder pchSenderAddress)
        {
            return
                GetFunction<NativeGetGuestPassToRedeemSenderAddressUsi>(Functions.GetGuestPassToRedeemSenderAddress38)(
                    ObjectAddress, nPassIndex, pchSenderAddress, pchSenderAddress.Capacity);
        }

        public bool GetGuestPassToRedeemSenderName(uint nPassIndex, StringBuilder pchSenderName)
        {
            return
                GetFunction<NativeGetGuestPassToRedeemSenderNameUsi>(Functions.GetGuestPassToRedeemSenderName39)(
                    ObjectAddress, nPassIndex, pchSenderName, pchSenderName.Capacity);
        }

        public bool RequestGuestPassTargetList(ulong gidGuestPassId)
        {
            return GetFunction<NativeRequestGuestPassTargetListU>(Functions.RequestGuestPassTargetList40)(
                ObjectAddress, gidGuestPassId);
        }

        public bool RequestGiftTargetList(uint nPackageId)
        {
            return GetFunction<NativeRequestGiftTargetListU>(Functions.RequestGiftTargetList41)(ObjectAddress,
                nPackageId);
        }

        public void AcknowledgeMessageByGid(string pchMessageGid)
        {
            GetFunction<NativeAcknowledgeMessageByGids>(Functions.AcknowledgeMessageByGID42)(ObjectAddress,
                pchMessageGid);
        }

        public bool SetLanguage(string pchLanguage)
        {
            return GetFunction<NativeSetLanguageS>(Functions.SetLanguage43)(ObjectAddress, pchLanguage);
        }

        public void TrackAppUsageEvent(CGameId gameId, int eAppUsageEvent, string pchExtraInfo)
        {
            GetFunction<NativeTrackAppUsageEventCis>(Functions.TrackAppUsageEvent44)(ObjectAddress,
                gameId.ConvertToUint64(), eAppUsageEvent, pchExtraInfo);
        }

        public int RaiseConnectionPriority(EConnectionPriority eConnectionPriority)
        {
            return GetFunction<NativeRaiseConnectionPriorityE>(Functions.RaiseConnectionPriority45)(ObjectAddress,
                eConnectionPriority);
        }

        public void ResetConnectionPriority(int hRaiseConnectionPriorityPrev)
        {
            GetFunction<NativeResetConnectionPriorityI>(Functions.ResetConnectionPriority46)(ObjectAddress,
                hRaiseConnectionPriorityPrev);
        }

        public void SetAccountNameFromSteam2(string pchAccountName)
        {
            GetFunction<NativeSetAccountNameFromSteam2S>(Functions.SetAccountNameFromSteam247)(ObjectAddress,
                pchAccountName);
        }

        public bool SetPasswordFromSteam2(string pchPassword)
        {
            return GetFunction<NativeSetPasswordFromSteam2S>(Functions.SetPasswordFromSteam248)(ObjectAddress,
                pchPassword);
        }

        public bool BHasCachedCredentials(string pchUnk)
        {
            return GetFunction<NativeBHasCachedCredentialsS>(Functions.BHasCachedCredentials49)(ObjectAddress, pchUnk);
        }

        public bool SetAccountNameForCachedCredentialLogin(string pchAccountName, bool bUnk)
        {
            return
                GetFunction<NativeSetAccountNameForCachedCredentialLoginSb>(
                    Functions.SetAccountNameForCachedCredentialLogin50)(ObjectAddress, pchAccountName, bUnk);
        }

        public void SetLoginInformation(string pchAccountName, string pchPassword, bool bRememberPassword)
        {
            GetFunction<NativeSetLoginInformationSsb>(Functions.SetLoginInformation51)(ObjectAddress, pchAccountName,
                pchPassword, bRememberPassword);
        }

        public void SetLauncherType(ELauncherType eLauncherType)
        {
            GetFunction<NativeSetLauncherTypeE>(Functions.SetLauncherType52)(ObjectAddress, eLauncherType);
        }

        public void ClearAllLoginInformation()
        {
            GetFunction<NativeClearAllLoginInformation>(Functions.ClearAllLoginInformation53)(ObjectAddress);
        }

        public void SetAccountCreationTime(uint rtime32Time)
        {
            GetFunction<NativeSetAccountCreationTimeU>(Functions.SetAccountCreationTime54)(ObjectAddress, rtime32Time);
        }

        public ulong RequestWebAuthToken()
        {
            return GetFunction<NativeRequestWebAuthToken>(Functions.RequestWebAuthToken55)(ObjectAddress);
        }

        public bool GetCurrentWebAuthToken(StringBuilder pchBuffer)
        {
            return GetFunction<NativeGetCurrentWebAuthTokenSi>(Functions.GetCurrentWebAuthToken56)(ObjectAddress,
                pchBuffer, pchBuffer.Capacity);
        }

        public bool GetLanguage(StringBuilder pchLanguage)
        {
            return GetFunction<NativeGetLanguageSi>(Functions.GetLanguage57)(ObjectAddress, pchLanguage,
                pchLanguage.Capacity);
        }

        public bool BIsCyberCafe()
        {
            return GetFunction<NativeBIsCyberCafe>(Functions.BIsCyberCafe58)(ObjectAddress);
        }

        public bool BIsAcademicAccount()
        {
            return GetFunction<NativeBIsAcademicAccount>(Functions.BIsAcademicAccount59)(ObjectAddress);
        }

        public void CreateAccount(string pchAccountName, string pchNewPassword, string pchNewEmail, int iQuestion,
            string pchNewQuestion, string pchNewAnswer)
        {
            GetFunction<NativeCreateAccountSssiss>(Functions.CreateAccount60)(ObjectAddress, pchAccountName,
                pchNewPassword, pchNewEmail, iQuestion, pchNewQuestion, pchNewAnswer);
        }

        public ulong ResetPassword(string pchAccountName, string pchOldPassword, string pchNewPassword,
            string pchValidationCode, string pchAnswer)
        {
            return GetFunction<NativeResetPasswordSssss>(Functions.ResetPassword61)(ObjectAddress, pchAccountName,
                pchOldPassword, pchNewPassword, pchValidationCode, pchAnswer);
        }

        public void TrackNatTraversalStat(ref CNatTraversalStat pNatStat)
        {
            GetFunction<NativeTrackNatTraversalStatC>(Functions.TrackNatTraversalStat62)(ObjectAddress, ref pNatStat);
        }

        public uint GetPackageIdForGuestPassToRedeemByGid(ulong gid)
        {
            return
                GetFunction<NativeGetPackageIdForGuestPassToRedeemByGidu>(
                    Functions.GetPackageIDForGuestPassToRedeemByGID63)(ObjectAddress, gid);
        }

        public void TrackSteamUsageEvent(ESteamUsageEvent eSteamUsageEvent, byte[] pubKv)
        {
            GetFunction<NativeTrackSteamUsageEventEbu>(Functions.TrackSteamUsageEvent64)(ObjectAddress, eSteamUsageEvent,
                pubKv, (uint)pubKv.Length);
        }

        public void TrackSteamGuiUsage(string arg0)
        {
            GetFunction<NativeTrackSteamGuiUsageS>(Functions.TrackSteamGUIUsage65)(ObjectAddress, arg0);
        }

        public void SetComputerInUse()
        {
            GetFunction<NativeSetComputerInUse>(Functions.SetComputerInUse66)(ObjectAddress);
        }

        public bool BIsGameRunning(CGameId gameId)
        {
            return GetFunction<NativeBIsGameRunningC>(Functions.BIsGameRunning67)(ObjectAddress,
                gameId.ConvertToUint64());
        }

        public ulong GetCurrentSessionToken()
        {
            return GetFunction<NativeGetCurrentSessionToken>(Functions.GetCurrentSessionToken68)(ObjectAddress);
        }

        public bool BUpdateAppOwnershipTicket(uint nAppId, bool bOnlyUpdateIfStale, bool bIsDepot)
        {
            return GetFunction<NativeBUpdateAppOwnershipTicketUbb>(Functions.BUpdateAppOwnershipTicket69)(
                ObjectAddress, nAppId, bOnlyUpdateIfStale, bIsDepot);
        }

        public bool RequestCustomBinary(string pszAbsolutePath, uint nAppId, bool bForceUpdate, bool bAppLaunchRequest)
        {
            return GetFunction<NativeRequestCustomBinarySubb>(Functions.RequestCustomBinary70)(ObjectAddress,
                pszAbsolutePath, nAppId, bForceUpdate, bAppLaunchRequest);
        }

        public EResult GetCustomBinariesState(uint unAppId, ref uint punProgress)
        {
            return GetFunction<NativeGetCustomBinariesStateUu>(Functions.GetCustomBinariesState71)(ObjectAddress,
                unAppId, ref punProgress);
        }

        public EResult RequestCustomBinaries(uint unAppId, bool arg1, bool arg2, ref uint arg3)
        {
            return GetFunction<NativeRequestCustomBinariesUbbu>(Functions.RequestCustomBinaries72)(ObjectAddress,
                unAppId, arg1, arg2, ref arg3);
        }

        public void SetCellId(uint cellId)
        {
            GetFunction<NativeSetCellIdu>(Functions.SetCellID73)(ObjectAddress, cellId);
        }

        public void SetWinningPingTimeForCellId(uint uPing)
        {
            GetFunction<NativeSetWinningPingTimeForCellIdu>(Functions.SetWinningPingTimeForCellID74)(ObjectAddress,
                uPing);
        }

        public string GetUserBaseFolder()
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetUserBaseFolder>(Functions.GetUserBaseFolder75)(ObjectAddress)));
        }

        public bool GetUserDataFolder(CGameId gameId, StringBuilder pchBuffer)
        {
            return GetFunction<NativeGetUserDataFolderCsi>(Functions.GetUserDataFolder76)(ObjectAddress,
                gameId.ConvertToUint64(), pchBuffer, pchBuffer.Capacity);
        }

        public bool GetUserConfigFolder(StringBuilder pchBuffer)
        {
            return GetFunction<NativeGetUserConfigFolderSi>(Functions.GetUserConfigFolder77)(ObjectAddress, pchBuffer,
                pchBuffer.Capacity);
        }

        public bool GetAccountName(StringBuilder pchAccountName)
        {
            return GetFunction<NativeGetAccountNameSu>(Functions.GetAccountName78)(ObjectAddress, pchAccountName,
                (uint)pchAccountName.Capacity);
        }

        public bool GetAccountName(CSteamId userId, StringBuilder pchAccountName)
        {
            return GetFunction<NativeGetAccountNameCsu>(Functions.GetAccountName79)(ObjectAddress,
                userId.ConvertToUint64(), pchAccountName, (uint)pchAccountName.Capacity);
        }

        public bool IsPasswordRemembered()
        {
            return GetFunction<NativeIsPasswordRemembered>(Functions.IsPasswordRemembered80)(ObjectAddress);
        }

        public bool RequiresLegacyCdKey(uint nAppId)
        {
            return GetFunction<NativeRequiresLegacyCdKeyU>(Functions.RequiresLegacyCDKey81)(ObjectAddress, nAppId);
        }

        public bool GetLegacyCdKey(uint nAppId, StringBuilder pchKeyData)
        {
            return GetFunction<NativeGetLegacyCdKeyUsi>(Functions.GetLegacyCDKey82)(ObjectAddress, nAppId, pchKeyData,
                pchKeyData.Capacity);
        }

        public bool HasLegacyCdKey(uint nAppId)
        {
            return GetFunction<NativeHasLegacyCdKeyU>(Functions.HasLegacyCDKey83)(ObjectAddress, nAppId);
        }

        public bool SetLegacyCdKey(uint nAppId, string pchKeyData)
        {
            return GetFunction<NativeSetLegacyCdKeyUs>(Functions.SetLegacyCDKey84)(ObjectAddress, nAppId, pchKeyData);
        }

        public void RemoveLegacyCdKey(uint nAppId)
        {
            GetFunction<NativeRemoveLegacyCdKeyU>(Functions.RemoveLegacyCDKey85)(ObjectAddress, nAppId);
        }

        public void RequestLegacyCdKeyFromApp(uint nMainAppId, uint nDlcAppId)
        {
            GetFunction<NativeRequestLegacyCdKeyFromAppUu>(Functions.RequestLegacyCDKeyFromApp86)(ObjectAddress,
                nMainAppId, nDlcAppId);
        }

        public bool BIsAnyGameRunning()
        {
            return GetFunction<NativeBIsAnyGameRunning>(Functions.BIsAnyGameRunning87)(ObjectAddress);
        }

        public void TestAvailablePassword(byte[] pubDigestPassword)
        {
            GetFunction<NativeTestAvailablePasswordBi>(Functions.TestAvailablePassword88)(ObjectAddress,
                pubDigestPassword, pubDigestPassword.Length);
        }

        public void GetSteamGuardDetails()
        {
            GetFunction<NativeGetSteamGuardDetails>(Functions.GetSteamGuardDetails89)(ObjectAddress);
        }

        public void ChangePassword(string pchOldPassword, string pchNewPassword)
        {
            GetFunction<NativeChangePasswordSs>(Functions.ChangePassword90)(ObjectAddress, pchOldPassword,
                pchNewPassword);
        }

        public void ChangeEmail(string arg0, string pchEmail)
        {
            GetFunction<NativeChangeEmailSs>(Functions.ChangeEmail91)(ObjectAddress, arg0, pchEmail);
        }

        public void ChangeSecretQuestionAndAnswer(string arg0, int iQuestion, string pchNewQuestion, string pchNewAnswer)
        {
            GetFunction<NativeChangeSecretQuestionAndAnswerSiss>(Functions.ChangeSecretQuestionAndAnswer92)(
                ObjectAddress, arg0, iQuestion, pchNewQuestion, pchNewAnswer);
        }

        public void SetSteam2FullAsTicket(byte[] pubTicket)
        {
            GetFunction<NativeSetSteam2FullAsTicketBi>(Functions.SetSteam2FullASTicket93)(ObjectAddress, pubTicket,
                pubTicket.Length);
        }

        public int GetSteam2FullAsTicket(byte[] pubTicket)
        {
            return GetFunction<NativeGetSteam2FullAsTicketBi>(Functions.GetSteam2FullASTicket94)(ObjectAddress,
                pubTicket, pubTicket.Length);
        }

        public bool GetEmail(StringBuilder pchEmail, ref bool pbValidated)
        {
            return GetFunction<NativeGetEmailSib>(Functions.GetEmail95)(ObjectAddress, pchEmail, pchEmail.Capacity,
                ref pbValidated);
        }

        public void RequestForgottenPasswordEmail(string pchAccountName, string pchTriedPassword)
        {
            GetFunction<NativeRequestForgottenPasswordEmailSs>(Functions.RequestForgottenPasswordEmail96)(
                ObjectAddress, pchAccountName, pchTriedPassword);
        }

        public void FindAccountsByEmailAddress(string pchEmailAddress)
        {
            GetFunction<NativeFindAccountsByEmailAddressS>(Functions.FindAccountsByEmailAddress97)(ObjectAddress,
                pchEmailAddress);
        }

        public void FindAccountsByCdKey(string pchCdKey)
        {
            GetFunction<NativeFindAccountsByCdKeyS>(Functions.FindAccountsByCdKey98)(ObjectAddress, pchCdKey);
        }

        public void GetNumAccountsWithEmailAddress(string pchEmailAddress)
        {
            GetFunction<NativeGetNumAccountsWithEmailAddressS>(Functions.GetNumAccountsWithEmailAddress99)(
                ObjectAddress, pchEmailAddress);
        }

        public void IsAccountNameInUse(string pchAccountName)
        {
            GetFunction<NativeIsAccountNameInUseS>(Functions.IsAccountNameInUse100)(ObjectAddress, pchAccountName);
        }

        public void Test_FakeConnectionTimeout()
        {
            GetFunction<NativeTestFakeConnectionTimeout>(Functions.Test_FakeConnectionTimeout101)(ObjectAddress);
        }

        public bool RunInstallScript(ref uint pAppIDs, int cAppIDs, string pchInstallPath, string pchLanguage,
            bool bUninstall)
        {
            return GetFunction<NativeRunInstallScriptUissb>(Functions.RunInstallScript102)(ObjectAddress, ref pAppIDs,
                cAppIDs, pchInstallPath, pchLanguage, bUninstall);
        }

        public uint IsInstallScriptRunning()
        {
            return GetFunction<NativeIsInstallScriptRunning>(Functions.IsInstallScriptRunning103)(ObjectAddress);
        }

        public bool GetInstallScriptState(StringBuilder pchDescription, ref uint punNumSteps, ref uint punCurrStep)
        {
            return GetFunction<NativeGetInstallScriptStateSuuu>(Functions.GetInstallScriptState104)(ObjectAddress,
                pchDescription, (uint)pchDescription.Capacity, ref punNumSteps, ref punCurrStep);
        }

        public bool SpawnProcess(byte[] lpVacBlob, string lpApplicationName, string lpCommandLine, uint dwCreationFlags,
            string lpCurrentDirectory, CGameId gameId, uint nAppId, string pchGameName, bool bAlwaysUseShellExec)
        {
            return GetFunction<NativeSpawnProcessBussuscusb>(Functions.SpawnProcess105)(ObjectAddress, lpVacBlob,
                (uint)lpVacBlob.Length, lpApplicationName, lpCommandLine, dwCreationFlags, lpCurrentDirectory,
                gameId.ConvertToUint64(), nAppId, pchGameName, bAlwaysUseShellExec);
        }

        public uint GetAppOwnershipTicketLength(uint nAppId)
        {
            return
                GetFunction<NativeGetAppOwnershipTicketLengthU>(Functions.GetAppOwnershipTicketLength106)(
                    ObjectAddress, nAppId);
        }

        public uint GetAppOwnershipTicketData(uint nAppId, byte[] pvBuffer)
        {
            return GetFunction<NativeGetAppOwnershipTicketDataUbu>(Functions.GetAppOwnershipTicketData107)(
                ObjectAddress, nAppId, pvBuffer, (uint)pvBuffer.Length);
        }

        public uint GetAppOwnershipTicketExtendedData(uint nAppId, byte[] pvBuffer, ref uint piAppId, ref uint piSteamId,
            ref uint piSignature, ref uint pcbSignature)
        {
            return
                GetFunction<NativeGetAppOwnershipTicketExtendedDataUbuuuuu>(
                    Functions.GetAppOwnershipTicketExtendedData108)(ObjectAddress, nAppId, pvBuffer,
                        (uint)pvBuffer.Length, ref piAppId, ref piSteamId, ref piSignature, ref pcbSignature);
        }

        public int GetMarketingMessageCount()
        {
            return GetFunction<NativeGetMarketingMessageCount>(Functions.GetMarketingMessageCount109)(ObjectAddress);
        }

        public bool GetMarketingMessage(int cMarketingMessage, ref ulong gidMarketingMessageId, StringBuilder pubMsgUrl,
            ref EMarketingMessageFlags eMarketingMssageFlags)
        {
            return GetFunction<NativeGetMarketingMessageIusie>(Functions.GetMarketingMessage110)(ObjectAddress,
                cMarketingMessage, ref gidMarketingMessageId, pubMsgUrl, pubMsgUrl.Capacity, ref eMarketingMssageFlags);
        }

        public uint GetAuthSessionTicket(byte[] pMyAuthTicket, ref uint pcbAuthTicket)
        {
            return GetFunction<NativeGetAuthSessionTicketBiu>(Functions.GetAuthSessionTicket111)(ObjectAddress,
                pMyAuthTicket, pMyAuthTicket.Length, ref pcbAuthTicket);
        }

        public EBeginAuthSessionResult BeginAuthSession(byte[] pTheirAuthTicket, CSteamId steamId)
        {
            return GetFunction<NativeBeginAuthSessionBic>(Functions.BeginAuthSession112)(ObjectAddress, pTheirAuthTicket,
                pTheirAuthTicket.Length, steamId.ConvertToUint64());
        }

        public void EndAuthSession(CSteamId steamId)
        {
            GetFunction<NativeEndAuthSessionC>(Functions.EndAuthSession113)(ObjectAddress, steamId.ConvertToUint64());
        }

        public void CancelAuthTicket(uint hAuthTicket)
        {
            GetFunction<NativeCancelAuthTicketU>(Functions.CancelAuthTicket114)(ObjectAddress, hAuthTicket);
        }

        public EUserHasLicenseForAppResult IsUserSubscribedAppInTicket(CSteamId steamId, uint appId)
        {
            return
                GetFunction<NativeIsUserSubscribedAppInTicketCu>(Functions.IsUserSubscribedAppInTicket115)(
                    ObjectAddress, steamId.ConvertToUint64(), appId);
        }

        public void AdvertiseGame(CGameId gameId, CSteamId steamIdGameServer, uint unIpServer, ushort usPortServer)
        {
            GetFunction<NativeAdvertiseGameCcuu>(Functions.AdvertiseGame116)(ObjectAddress, gameId.ConvertToUint64(),
                steamIdGameServer.ConvertToUint64(), unIpServer, usPortServer);
        }

        public ulong RequestEncryptedAppTicket(byte[] pUserData)
        {
            return GetFunction<NativeRequestEncryptedAppTicketBi>(Functions.RequestEncryptedAppTicket117)(
                ObjectAddress, pUserData, pUserData.Length);
        }

        public bool GetEncryptedAppTicket(byte[] pTicket, ref uint pcbTicket)
        {
            return GetFunction<NativeGetEncryptedAppTicketBiu>(Functions.GetEncryptedAppTicket118)(ObjectAddress,
                pTicket, pTicket.Length, ref pcbTicket);
        }

        public int GetGameBadgeLevel(int nSeries, bool bFoil)
        {
            return GetFunction<NativeGetGameBadgeLevelIb>(Functions.GetGameBadgeLevel119)(ObjectAddress, nSeries, bFoil);
        }

        public int GetPlayerSteamLevel()
        {
            return GetFunction<NativeGetPlayerSteamLevel>(Functions.GetPlayerSteamLevel120)(ObjectAddress);
        }

        public void SetAccountLimited(bool bAccountLimited)
        {
            GetFunction<NativeSetAccountLimitedB>(Functions.SetAccountLimited121)(ObjectAddress, bAccountLimited);
        }

        public bool BIsAccountLimited()
        {
            return GetFunction<NativeBIsAccountLimited>(Functions.BIsAccountLimited122)(ObjectAddress);
        }

        public void SetAccountCommunityBanned(bool bBanned)
        {
            GetFunction<NativeSetAccountCommunityBannedB>(Functions.SetAccountCommunityBanned123)(ObjectAddress, bBanned);
        }

        public bool BIsAccountCommunityBanned()
        {
            return GetFunction<NativeBIsAccountCommunityBanned>(Functions.BIsAccountCommunityBanned124)(ObjectAddress);
        }

        public void SendValidationEmail()
        {
            GetFunction<NativeSendValidationEmail>(Functions.SendValidationEmail125)(ObjectAddress);
        }

        public bool BGameConnectTokensAvailable()
        {
            return
                GetFunction<NativeBGameConnectTokensAvailable>(Functions.BGameConnectTokensAvailable126)(ObjectAddress);
        }

        public int NumGamesRunning()
        {
            return GetFunction<NativeNumGamesRunning>(Functions.NumGamesRunning127)(ObjectAddress);
        }

        public CGameId GetRunningGameId(int iGame)
        {
            ulong ret = 0;
            GetFunction<NativeGetRunningGameIdi>(Functions.GetRunningGameID128)(ObjectAddress, ref ret, iGame);
            return new CGameId(ret);
        }

        public uint GetAccountSecurityPolicyFlags()
        {
            return
                GetFunction<NativeGetAccountSecurityPolicyFlags>(Functions.GetAccountSecurityPolicyFlags129)(
                    ObjectAddress);
        }

        public void RequestChangeEmail(string pchPassword, int eRequestType)
        {
            GetFunction<NativeRequestChangeEmailSi>(Functions.RequestChangeEmail130)(ObjectAddress, pchPassword,
                eRequestType);
        }

        public void ChangePasswordWithCode(string pchOldPassword, string pchCode, string pchNewPassword)
        {
            GetFunction<NativeChangePasswordWithCodeSss>(Functions.ChangePasswordWithCode131)(ObjectAddress,
                pchOldPassword, pchCode, pchNewPassword);
        }

        public void ChangeEmailWithCode(string pchPassword, string pchCode, string pchEmail, bool bFinal)
        {
            GetFunction<NativeChangeEmailWithCodeSssb>(Functions.ChangeEmailWithCode132)(ObjectAddress, pchPassword,
                pchCode, pchEmail, bFinal);
        }

        public void ChangeSecretQuestionAndAnswerWithCode(string pchPassword, string pchCode, string pchNewQuestion,
            string pchNewAnswer)
        {
            GetFunction<NativeChangeSecretQuestionAndAnswerWithCodeSsss>(
                Functions.ChangeSecretQuestionAndAnswerWithCode133)(ObjectAddress, pchPassword, pchCode, pchNewQuestion,
                    pchNewAnswer);
        }

        public void SetClientStat(EClientStat eStat, long llValue, uint nAppId, uint nDepotId, uint nCellId)
        {
            GetFunction<NativeSetClientStatEiuuu>(Functions.SetClientStat134)(ObjectAddress, eStat, llValue, nAppId,
                nDepotId, nCellId);
        }

        public void VerifyPassword(string pchPassword)
        {
            GetFunction<NativeVerifyPasswordS>(Functions.VerifyPassword135)(ObjectAddress, pchPassword);
        }

        public bool BSupportUser()
        {
            return GetFunction<NativeBSupportUser>(Functions.BSupportUser136)(ObjectAddress);
        }

        public bool BIsAppOverlayEnabled(uint nAppId)
        {
            return GetFunction<NativeBIsAppOverlayEnabledU>(Functions.BIsAppOverlayEnabled137)(ObjectAddress, nAppId);
        }

        public bool BIsBehindNat()
        {
            return GetFunction<NativeBIsBehindNat>(Functions.BIsBehindNAT138)(ObjectAddress);
        }

        public uint GetMicroTxnAppId(ulong gidTransId)
        {
            return GetFunction<NativeGetMicroTxnAppIdu>(Functions.GetMicroTxnAppID139)(ObjectAddress, gidTransId);
        }

        public ulong GetMicroTxnOrderId(ulong gidTransId)
        {
            return GetFunction<NativeGetMicroTxnOrderIdu>(Functions.GetMicroTxnOrderID140)(ObjectAddress, gidTransId);
        }

        public bool BGetMicroTxnPrice(ulong gidTransId, ref CAmount pamtTotal, ref CAmount pamtTax, ref bool pbVat)
        {
            return GetFunction<NativeBGetMicroTxnPriceUccb>(Functions.BGetMicroTxnPrice141)(ObjectAddress, gidTransId,
                ref pamtTotal, ref pamtTax, ref pbVat);
        }

        public int GetMicroTxnLineItemCount(ulong gidTransId)
        {
            return GetFunction<NativeGetMicroTxnLineItemCountU>(Functions.GetMicroTxnLineItemCount142)(ObjectAddress,
                gidTransId);
        }

        public bool BGetMicroTxnLineItem(ulong gidTransId, uint unLineItem, ref CAmount pamt, ref uint punQuantity,
            StringBuilder pchDescription, ref int pRecurringTimeUnit, byte[] pRecurringFrequency,
            ref CAmount pRecurringAmount, ref bool pbUnk)
        {
            return GetFunction<NativeBGetMicroTxnLineItemUucusuibcb>(Functions.BGetMicroTxnLineItem143)(ObjectAddress,
                gidTransId, unLineItem, ref pamt, ref punQuantity, pchDescription, (uint)pchDescription.Capacity,
                ref pRecurringTimeUnit, pRecurringFrequency, ref pRecurringAmount, ref pbUnk);
        }

        public bool BIsSandboxMicroTxn(ulong gidTransId, ref bool pbSandbox)
        {
            return GetFunction<NativeBIsSandboxMicroTxnUb>(Functions.BIsSandboxMicroTxn144)(ObjectAddress, gidTransId,
                ref pbSandbox);
        }

        public bool BMicroTxnRequiresCachedPmtMethod(ulong gidTransId, ref bool pbRequired)
        {
            return
                GetFunction<NativeBMicroTxnRequiresCachedPmtMethodUb>(Functions.BMicroTxnRequiresCachedPmtMethod145)(
                    ObjectAddress, gidTransId, ref pbRequired);
        }

        public ulong AuthorizeMicroTxn(ulong gidTransId, EMicroTxnAuthResponse eMicroTxnAuthResponse)
        {
            return GetFunction<NativeAuthorizeMicroTxnUe>(Functions.AuthorizeMicroTxn146)(ObjectAddress, gidTransId,
                eMicroTxnAuthResponse);
        }

        public bool BGetWalletBalance(ref bool pbHasWallet, ref CAmount pamtBalance)
        {
            return GetFunction<NativeBGetWalletBalanceBc>(Functions.BGetWalletBalance147)(ObjectAddress, ref pbHasWallet,
                ref pamtBalance);
        }

        public ulong RequestMicroTxnInfo(ulong gidTransId)
        {
            return GetFunction<NativeRequestMicroTxnInfoU>(Functions.RequestMicroTxnInfo148)(ObjectAddress, gidTransId);
        }

        public bool BGetAppMinutesPlayed(uint nAppId, ref int pnForever, ref int pnLastTwoWeeks)
        {
            return GetFunction<NativeBGetAppMinutesPlayedUii>(Functions.BGetAppMinutesPlayed149)(ObjectAddress, nAppId,
                ref pnForever, ref pnLastTwoWeeks);
        }

        public uint GetAppLastPlayedTime(uint nAppId)
        {
            return GetFunction<NativeGetAppLastPlayedTimeU>(Functions.GetAppLastPlayedTime150)(ObjectAddress, nAppId);
        }

        public bool BGetGuideUrl(uint uAppId, StringBuilder pchUrl)
        {
            return GetFunction<NativeBGetGuideUrlusu>(Functions.BGetGuideURL151)(ObjectAddress, uAppId, pchUrl,
                (uint)pchUrl.Capacity);
        }

        public void GetClientAppListResponse_AddApp(ref ClientAppInfo pClientAppInfo)
        {
            GetFunction<NativeGetClientAppListResponseAddAppC>(Functions.GetClientAppListResponse_AddApp152)(
                ObjectAddress, ref pClientAppInfo);
        }

        public void GetClientAppListResponse_AddDLC(uint nAppId, bool bInstalled)
        {
            GetFunction<NativeGetClientAppListResponseAddDlcub>(Functions.GetClientAppListResponse_AddDLC153)(
                ObjectAddress, nAppId, bInstalled);
        }

        public void GetClientAppListResponse_Done(ulong ulBytesFreeOnDrive)
        {
            GetFunction<NativeGetClientAppListResponseDoneU>(Functions.GetClientAppListResponse_Done154)(
                ObjectAddress, ulBytesFreeOnDrive);
        }

        public void PostUiResultToClientJob(ulong ulJobId, EResult eResult)
        {
            GetFunction<NativePostUiResultToClientJobUe>(Functions.PostUIResultToClientJob155)(ObjectAddress, ulJobId,
                eResult);
        }

        public bool BPromptToVerifyEmail()
        {
            return GetFunction<NativeBPromptToVerifyEmail>(Functions.BPromptToVerifyEmail156)(ObjectAddress);
        }

        public bool BPromptToChangePassword()
        {
            return GetFunction<NativeBPromptToChangePassword>(Functions.BPromptToChangePassword157)(ObjectAddress);
        }

        public bool BAccountLocked()
        {
            return GetFunction<NativeBAccountLocked>(Functions.BAccountLocked158)(ObjectAddress);
        }

        public bool BAccountShouldShowLockUi()
        {
            return GetFunction<NativeBAccountShouldShowLockUi>(Functions.BAccountShouldShowLockUI159)(ObjectAddress);
        }

        public bool BAccountLockedByIpt()
        {
            return GetFunction<NativeBAccountLockedByIpt>(Functions.BAccountLockedByIPT160)(ObjectAddress);
        }

        public int GetCountAuthedComputers()
        {
            return GetFunction<NativeGetCountAuthedComputers>(Functions.GetCountAuthedComputers161)(ObjectAddress);
        }

        public ESteamGuardProvider GetSteamGuardProvider()
        {
            return GetFunction<NativeGetSteamGuardProvider>(Functions.GetSteamGuardProvider162)(ObjectAddress);
        }

        public bool GetSteamGuardRequireCodeByDefault()
        {
            return
                GetFunction<NativeGetSteamGuardRequireCodeByDefault>(Functions.GetSteamGuardRequireCodeByDefault163)(
                    ObjectAddress);
        }

        public bool ShowSteamGuardProviderOptions()
        {
            return
                GetFunction<NativeShowSteamGuardProviderOptions>(Functions.ShowSteamGuardProviderOptions164)(
                    ObjectAddress);
        }

        public bool SteamGuardProviderMobileIsOption()
        {
            return
                GetFunction<NativeSteamGuardProviderMobileIsOption>(Functions.SteamGuardProviderMobileIsOption165)(
                    ObjectAddress);
        }

        public bool BSteamGuardNewMachineNotification()
        {
            return
                GetFunction<NativeBSteamGuardNewMachineNotification>(Functions.BSteamGuardNewMachineNotification166)(
                    ObjectAddress);
        }

        public uint GetSteamGuardEnabledTime()
        {
            return GetFunction<NativeGetSteamGuardEnabledTime>(Functions.GetSteamGuardEnabledTime167)(ObjectAddress);
        }

        public bool GetSteamGuardHistoryEntry(int iEntryIndex, ref uint puTimestamp, ref uint puIp,
            ref bool pbIsRemembered, StringBuilder pchGeolocInfo, StringBuilder pchUnk)
        {
            return
                GetFunction<NativeGetSteamGuardHistoryEntryIuubsisi>(Functions.GetSteamGuardHistoryEntry168)(
                    ObjectAddress, iEntryIndex, ref puTimestamp, ref puIp, ref pbIsRemembered, pchGeolocInfo,
                    pchGeolocInfo.Capacity, pchUnk, pchUnk.Capacity);
        }

        public void SetSteamGuardNewMachineDialogResponse(bool bIsApproved, bool bIsWizardComplete)
        {
            GetFunction<NativeSetSteamGuardNewMachineDialogResponseBb>(
                Functions.SetSteamGuardNewMachineDialogResponse169)(ObjectAddress, bIsApproved, bIsWizardComplete);
        }

        public bool BAccountCanUseIpt()
        {
            return GetFunction<NativeBAccountCanUseIpt>(Functions.BAccountCanUseIPT170)(ObjectAddress);
        }

        public void ChangeTwoFactorAuthOptions(int eOption)
        {
            GetFunction<NativeChangeTwoFactorAuthOptionsI>(Functions.ChangeTwoFactorAuthOptions171)(ObjectAddress,
                eOption);
        }

        public void ChangeSteamGuardOptions(string pchUnk, ESteamGuardProvider eProvider, bool bRequireCode)
        {
            GetFunction<NativeChangeSteamGuardOptionsSeb>(Functions.ChangeSteamGuardOptions172)(ObjectAddress, pchUnk,
                eProvider, bRequireCode);
        }

        public void Set2NdFactorAuthCode(string pchAuthCode, bool bDontRememberComputer)
        {
            GetFunction<NativeSet2NdFactorAuthCodeSb>(Functions.Set2ndFactorAuthCode173)(ObjectAddress, pchAuthCode,
                bDontRememberComputer);
        }

        public void SetUserMachineName(string pchMachineName)
        {
            GetFunction<NativeSetUserMachineNameS>(Functions.SetUserMachineName174)(ObjectAddress, pchMachineName);
        }

        public bool GetUserMachineName(StringBuilder pchMachineName)
        {
            return GetFunction<NativeGetUserMachineNameSi>(Functions.GetUserMachineName175)(ObjectAddress,
                pchMachineName, pchMachineName.Capacity);
        }

        public bool BAccountHasIptConfig()
        {
            return GetFunction<NativeBAccountHasIptConfig>(Functions.BAccountHasIPTConfig176)(ObjectAddress);
        }

        public bool GetEmailDomainFromLogonFailure(StringBuilder pchEmailDomain)
        {
            return
                GetFunction<NativeGetEmailDomainFromLogonFailureSi>(Functions.GetEmailDomainFromLogonFailure177)(
                    ObjectAddress, pchEmailDomain, pchEmailDomain.Capacity);
        }

        public bool BIsSubscribedApp(uint nAppId)
        {
            return GetFunction<NativeBIsSubscribedAppU>(Functions.BIsSubscribedApp178)(ObjectAddress, nAppId);
        }

        public ulong RegisterActivationCode(string pchActivationCode)
        {
            return GetFunction<NativeRegisterActivationCodeS>(Functions.RegisterActivationCode179)(ObjectAddress,
                pchActivationCode);
        }

        public void OptionalDlcInstallation(uint nAppId, bool bInstall)
        {
            GetFunction<NativeOptionalDlcInstallationUb>(Functions.OptionalDLCInstallation180)(ObjectAddress, nAppId,
                bInstall);
        }

        public void AckSystemIm(ulong arg0)
        {
            GetFunction<NativeAckSystemImu>(Functions.AckSystemIM181)(ObjectAddress, arg0);
        }

        public ulong RequestSpecialSurvey(uint uSurveyId)
        {
            return GetFunction<NativeRequestSpecialSurveyU>(Functions.RequestSpecialSurvey182)(ObjectAddress, uSurveyId);
        }

        public ulong SendSpecialSurveyResponse(uint uSurveyId, byte[] pubData)
        {
            return GetFunction<NativeSendSpecialSurveyResponseUbu>(Functions.SendSpecialSurveyResponse183)(
                ObjectAddress, uSurveyId, pubData, (uint)pubData.Length);
        }

        public void RequestNotifications()
        {
            GetFunction<NativeRequestNotifications>(Functions.RequestNotifications184)(ObjectAddress);
        }

        public bool GetAppOwnershipInfo(uint unAppId, ref uint pRTime32Created, StringBuilder pchCountry)
        {
            return GetFunction<NativeGetAppOwnershipInfoUus>(Functions.GetAppOwnershipInfo185)(ObjectAddress, unAppId,
                ref pRTime32Created, pchCountry);
        }

        public void SendGameWebCallback(uint unAppId, string szData)
        {
            GetFunction<NativeSendGameWebCallbackUs>(Functions.SendGameWebCallback186)(ObjectAddress, unAppId, szData);
        }

        public bool BIsCurrentlyStreaming()
        {
            return GetFunction<NativeBIsCurrentlyStreaming>(Functions.BIsCurrentlyStreaming187)(ObjectAddress);
        }

        public void RequestStopStreaming()
        {
            GetFunction<NativeRequestStopStreaming>(Functions.RequestStopStreaming188)(ObjectAddress);
        }

        public void OnBigPictureStreamingResult(bool arg0, byte[] arg1)
        {
            GetFunction<NativeOnBigPictureStreamingResultBb>(Functions.OnBigPictureStreamingResult189)(ObjectAddress,
                arg0, arg1);
        }

        public void OnBigPictureStreamingDone()
        {
            GetFunction<NativeOnBigPictureStreamingDone>(Functions.OnBigPictureStreamingDone190)(ObjectAddress);
        }

        public void OnBigPictureStreamRestarting()
        {
            GetFunction<NativeOnBigPictureStreamRestarting>(Functions.OnBigPictureStreamRestarting191)(ObjectAddress);
        }

        public void LockParentalLock()
        {
            GetFunction<NativeLockParentalLock>(Functions.LockParentalLock192)(ObjectAddress);
        }

        public void UnlockParentalLock(string pchUnk)
        {
            GetFunction<NativeUnlockParentalLockS>(Functions.UnlockParentalLock193)(ObjectAddress, pchUnk);
        }

        public void BlockApp(uint unAppId)
        {
            GetFunction<NativeBlockAppU>(Functions.BlockApp194)(ObjectAddress, unAppId);
        }

        public void UnblockApp(uint unAppId)
        {
            GetFunction<NativeUnblockAppU>(Functions.UnblockApp195)(ObjectAddress, unAppId);
        }

        public bool BIsParentalLockEnabled()
        {
            return GetFunction<NativeBIsParentalLockEnabled>(Functions.BIsParentalLockEnabled196)(ObjectAddress);
        }

        public bool BIsParentalLockLocked()
        {
            return GetFunction<NativeBIsParentalLockLocked>(Functions.BIsParentalLockLocked197)(ObjectAddress);
        }

        public bool BIsAppBlocked(uint unAppId)
        {
            return GetFunction<NativeBIsAppBlockedU>(Functions.BIsAppBlocked198)(ObjectAddress, unAppId);
        }

        public bool BIsAppInBlockList(uint unAppId)
        {
            return GetFunction<NativeBIsAppInBlockListU>(Functions.BIsAppInBlockList199)(ObjectAddress, unAppId);
        }

        public bool BIsFeatureBlocked(EParentalFeature eParentalFeature)
        {
            return GetFunction<NativeBIsFeatureBlockedE>(Functions.BIsFeatureBlocked200)(ObjectAddress, eParentalFeature);
        }

        public bool BIsFeatureInBlockList(EParentalFeature eParentalFeature)
        {
            return GetFunction<NativeBIsFeatureInBlockListE>(Functions.BIsFeatureInBlockList201)(ObjectAddress,
                eParentalFeature);
        }

        public EResult ValidateOfflineLogonTicket(string pchUnk)
        {
            return GetFunction<NativeValidateOfflineLogonTicketS>(Functions.ValidateOfflineLogonTicket202)(
                ObjectAddress, pchUnk);
        }

        public bool BGetOfflineLogonTicket(string pchUnk, ref COfflineOfflineLogonTicket pTicket)
        {
            return GetFunction<NativeBGetOfflineLogonTicketSc>(Functions.BGetOfflineLogonTicket203)(ObjectAddress,
                pchUnk, ref pTicket);
        }

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetHSteamUser(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeLogOnBc(
            IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bInteractive, ulong steamId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeLogOnWithPasswordBss(
            IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bInteractive, string pchLogin, string pchPassword);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeLogOnAndCreateNewSteamAccountIfNeededB(
            IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bInteractive);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EResult NativeLogOnConnectionless(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeLogOff(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBLoggedOn(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ELogonState NativeGetLogonState(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBConnected(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBTryingToLogin(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetSteamId(IntPtr thisptr, ref ulong retarg);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetConsoleSteamId(IntPtr thisptr, ref ulong retarg);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsVacBannedU(IntPtr thisptr, uint nGameId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeRequireShowVacBannedMessageU(IntPtr thisptr, uint nAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeAcknowledgeVacBanningU(IntPtr thisptr, uint nAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetSteam2TicketBi(IntPtr thisptr, byte[] pubTicket, int cubTicket);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBExistsSteam2Ticket(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetEmailS(IntPtr thisptr, string pchEmail);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetConfigStringEss(
            IntPtr thisptr, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetConfigStringEssi(
            IntPtr thisptr, ERegistrySubTree eRegistrySubTree, string pchKey, StringBuilder pchValue, int cbValue);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetConfigIntEsi(
            IntPtr thisptr, ERegistrySubTree eRegistrySubTree, string pchKey, int iValue);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetConfigIntEsi(
            IntPtr thisptr, ERegistrySubTree eRegistrySubTree, string pchKey, ref int pValue);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetConfigStoreKeyNameEssi(
            IntPtr thisptr, ERegistrySubTree eRegistrySubTree, string pchKey, StringBuilder pchStoreName,
            int cbStoreName);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeInitiateGameConnectionBiccuub(
            IntPtr thisptr, byte[] pOutputBlob, int cbBlobMax, ulong steamIdgs, ulong gameId, uint unIpServer,
            ushort usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeInitiateGameConnectionOldBiccuubbi(
            IntPtr thisptr, byte[] pOutputBlob, int cbBlobMax, ulong steamIdgs, ulong gameId, uint unIpServer,
            ushort usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure, byte[] pvSteam2GetEncryptionKey,
            int cbSteam2GetEncryptionKey);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeTerminateGameConnectionUu(IntPtr thisptr, uint unIpServer, ushort usPortServer);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetSelfAsPrimaryChatDestination(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsPrimaryChatDestination(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeRequestLegacyCdKeyU(IntPtr thisptr, uint iAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSendGuestPassByEmailSub(
            IntPtr thisptr, string pchEmailAccount, ulong gidGuestPassId, [MarshalAs(UnmanagedType.I1)] bool bResending);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSendGuestPassByAccountIduub(
            IntPtr thisptr, uint uAccountId, ulong gidGuestPassId, [MarshalAs(UnmanagedType.I1)] bool bResending);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeAckGuestPassS(IntPtr thisptr, string pchGuestPassCode);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeRedeemGuestPassS(IntPtr thisptr, string pchGuestPassCode);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetGuestPassToGiveCount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetGuestPassToRedeemCount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetGuestPassLastUpdateTime(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetGuestPassToGiveInfoUuuuuuusi(
            IntPtr thisptr, uint nPassIndex, ref ulong pgidGuestPassId, ref uint pnPackageId, ref uint pRTime32Created,
            ref uint pRTime32Expiration, ref uint pRTime32Sent, ref uint pRTime32Redeemed,
            StringBuilder pchRecipientAddress, int cRecipientAddressSize);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetGuestPassToRedeemInfoUuuuuuu(
            IntPtr thisptr, uint nPassIndex, ref ulong pgidGuestPassId, ref uint pnPackageId, ref uint pRTime32Created,
            ref uint pRTime32Expiration, ref uint pRTime32Sent, ref uint pRTime32Redeemed);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetGuestPassToRedeemSenderAddressUsi(
            IntPtr thisptr, uint nPassIndex, StringBuilder pchSenderAddress, int cSenderAddressSize);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetGuestPassToRedeemSenderNameUsi(
            IntPtr thisptr, uint nPassIndex, StringBuilder pchSenderName, int cSenderNameSize);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeRequestGuestPassTargetListU(IntPtr thisptr, ulong gidGuestPassId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeRequestGiftTargetListU(IntPtr thisptr, uint nPackageId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeAcknowledgeMessageByGids(IntPtr thisptr, string pchMessageGid);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetLanguageS(IntPtr thisptr, string pchLanguage);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeTrackAppUsageEventCis(
            IntPtr thisptr, ulong gameId, int eAppUsageEvent, string pchExtraInfo);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeRaiseConnectionPriorityE(IntPtr thisptr, EConnectionPriority eConnectionPriority);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeResetConnectionPriorityI(IntPtr thisptr, int hRaiseConnectionPriorityPrev);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetAccountNameFromSteam2S(IntPtr thisptr, string pchAccountName);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetPasswordFromSteam2S(IntPtr thisptr, string pchPassword);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBHasCachedCredentialsS(IntPtr thisptr, string pchUnk);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetAccountNameForCachedCredentialLoginSb(
            IntPtr thisptr, string pchAccountName, [MarshalAs(UnmanagedType.I1)] bool bUnk);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetLoginInformationSsb(
            IntPtr thisptr, string pchAccountName, string pchPassword,
            [MarshalAs(UnmanagedType.I1)] bool bRememberPassword);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetLauncherTypeE(IntPtr thisptr, ELauncherType eLauncherType);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeClearAllLoginInformation(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetAccountCreationTimeU(IntPtr thisptr, uint rtime32Time);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeRequestWebAuthToken(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetCurrentWebAuthTokenSi(IntPtr thisptr, StringBuilder pchBuffer, int cubBuffer);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetLanguageSi(IntPtr thisptr, StringBuilder pchLanguage, int cbLanguage);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsCyberCafe(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsAcademicAccount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeCreateAccountSssiss(
            IntPtr thisptr, string pchAccountName, string pchNewPassword, string pchNewEmail, int iQuestion,
            string pchNewQuestion, string pchNewAnswer);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeResetPasswordSssss(
            IntPtr thisptr, string pchAccountName, string pchOldPassword, string pchNewPassword,
            string pchValidationCode, string pchAnswer);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeTrackNatTraversalStatC(IntPtr thisptr, ref CNatTraversalStat pNatStat);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetPackageIdForGuestPassToRedeemByGidu(IntPtr thisptr, ulong gid);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeTrackSteamUsageEventEbu(
            IntPtr thisptr, ESteamUsageEvent eSteamUsageEvent, byte[] pubKv, uint cubKv);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeTrackSteamGuiUsageS(IntPtr thisptr, string arg0);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetComputerInUse(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsGameRunningC(IntPtr thisptr, ulong gameId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeGetCurrentSessionToken(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBUpdateAppOwnershipTicketUbb(
            IntPtr thisptr, uint nAppId, [MarshalAs(UnmanagedType.I1)] bool bOnlyUpdateIfStale,
            [MarshalAs(UnmanagedType.I1)] bool bIsDepot);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeRequestCustomBinarySubb(
            IntPtr thisptr, string pszAbsolutePath, uint nAppId, [MarshalAs(UnmanagedType.I1)] bool bForceUpdate,
            [MarshalAs(UnmanagedType.I1)] bool bAppLaunchRequest);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EResult NativeGetCustomBinariesStateUu(IntPtr thisptr, uint unAppId, ref uint punProgress);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EResult NativeRequestCustomBinariesUbbu(
            IntPtr thisptr, uint unAppId, [MarshalAs(UnmanagedType.I1)] bool arg1,
            [MarshalAs(UnmanagedType.I1)] bool arg2, ref uint arg3);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetCellIdu(IntPtr thisptr, uint cellId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetWinningPingTimeForCellIdu(IntPtr thisptr, uint uPing);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetUserBaseFolder(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetUserDataFolderCsi(
            IntPtr thisptr, ulong gameId, StringBuilder pchBuffer, int cubBuffer);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetUserConfigFolderSi(IntPtr thisptr, StringBuilder pchBuffer, int cubBuffer);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetAccountNameSu(IntPtr thisptr, StringBuilder pchAccountName, uint cb);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetAccountNameCsu(
            IntPtr thisptr, ulong userId, StringBuilder pchAccountName, uint cb);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsPasswordRemembered(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeRequiresLegacyCdKeyU(IntPtr thisptr, uint nAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetLegacyCdKeyUsi(
            IntPtr thisptr, uint nAppId, StringBuilder pchKeyData, int cbKeyData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeHasLegacyCdKeyU(IntPtr thisptr, uint nAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetLegacyCdKeyUs(IntPtr thisptr, uint nAppId, string pchKeyData);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeRemoveLegacyCdKeyU(IntPtr thisptr, uint nAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeRequestLegacyCdKeyFromAppUu(IntPtr thisptr, uint nMainAppId, uint nDlcAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsAnyGameRunning(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeTestAvailablePasswordBi(
            IntPtr thisptr, byte[] pubDigestPassword, int cubDigestPassword);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetSteamGuardDetails(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeChangePasswordSs(IntPtr thisptr, string pchOldPassword, string pchNewPassword);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeChangeEmailSs(IntPtr thisptr, string arg0, string pchEmail);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeChangeSecretQuestionAndAnswerSiss(
            IntPtr thisptr, string arg0, int iQuestion, string pchNewQuestion, string pchNewAnswer);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetSteam2FullAsTicketBi(IntPtr thisptr, byte[] pubTicket, int cubTicket);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetSteam2FullAsTicketBi(IntPtr thisptr, byte[] pubTicket, int cubTicket);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetEmailSib(
            IntPtr thisptr, StringBuilder pchEmail, int cchEmail, ref bool pbValidated);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeRequestForgottenPasswordEmailSs(
            IntPtr thisptr, string pchAccountName, string pchTriedPassword);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeFindAccountsByEmailAddressS(IntPtr thisptr, string pchEmailAddress);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeFindAccountsByCdKeyS(IntPtr thisptr, string pchCdKey);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetNumAccountsWithEmailAddressS(IntPtr thisptr, string pchEmailAddress);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeIsAccountNameInUseS(IntPtr thisptr, string pchAccountName);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeTestFakeConnectionTimeout(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeRunInstallScriptUissb(
            IntPtr thisptr, ref uint pAppIDs, int cAppIDs, string pchInstallPath, string pchLanguage,
            [MarshalAs(UnmanagedType.I1)] bool bUninstall);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeIsInstallScriptRunning(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetInstallScriptStateSuuu(
            IntPtr thisptr, StringBuilder pchDescription, uint cchDescription, ref uint punNumSteps,
            ref uint punCurrStep);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSpawnProcessBussuscusb(
            IntPtr thisptr, byte[] lpVacBlob, uint cbBlobSize, string lpApplicationName, string lpCommandLine,
            uint dwCreationFlags, string lpCurrentDirectory, ulong gameId, uint nAppId, string pchGameName,
            [MarshalAs(UnmanagedType.I1)] bool bAlwaysUseShellExec);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetAppOwnershipTicketLengthU(IntPtr thisptr, uint nAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetAppOwnershipTicketDataUbu(
            IntPtr thisptr, uint nAppId, byte[] pvBuffer, uint cbBufferLength);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetAppOwnershipTicketExtendedDataUbuuuuu(
            IntPtr thisptr, uint nAppId, byte[] pvBuffer, uint cbBufferLength, ref uint piAppId, ref uint piSteamId,
            ref uint piSignature, ref uint pcbSignature);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetMarketingMessageCount(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetMarketingMessageIusie(
            IntPtr thisptr, int cMarketingMessage, ref ulong gidMarketingMessageId, StringBuilder pubMsgUrl,
            int cubMessageUrl, ref EMarketingMessageFlags eMarketingMssageFlags);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetAuthSessionTicketBiu(
            IntPtr thisptr, byte[] pMyAuthTicket, int cbMaxMyAuthTicket, ref uint pcbAuthTicket);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EBeginAuthSessionResult NativeBeginAuthSessionBic(
            IntPtr thisptr, byte[] pTheirAuthTicket, int cbTicket, ulong steamId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeEndAuthSessionC(IntPtr thisptr, ulong steamId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeCancelAuthTicketU(IntPtr thisptr, uint hAuthTicket);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EUserHasLicenseForAppResult NativeIsUserSubscribedAppInTicketCu(
            IntPtr thisptr, ulong steamId, uint appId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeAdvertiseGameCcuu(
            IntPtr thisptr, ulong gameId, ulong steamIdGameServer, uint unIpServer, ushort usPortServer);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeRequestEncryptedAppTicketBi(IntPtr thisptr, byte[] pUserData, int cbUserData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetEncryptedAppTicketBiu(
            IntPtr thisptr, byte[] pTicket, int cbMaxTicket, ref uint pcbTicket);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetGameBadgeLevelIb(
            IntPtr thisptr, int nSeries, [MarshalAs(UnmanagedType.I1)] bool bFoil);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetPlayerSteamLevel(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetAccountLimitedB(
            IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bAccountLimited);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsAccountLimited(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetAccountCommunityBannedB(
            IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bBanned);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsAccountCommunityBanned(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSendValidationEmail(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBGameConnectTokensAvailable(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeNumGamesRunning(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetRunningGameIdi(IntPtr thisptr, ref ulong retarg, int iGame);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetAccountSecurityPolicyFlags(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeRequestChangeEmailSi(IntPtr thisptr, string pchPassword, int eRequestType);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeChangePasswordWithCodeSss(
            IntPtr thisptr, string pchOldPassword, string pchCode, string pchNewPassword);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeChangeEmailWithCodeSssb(
            IntPtr thisptr, string pchPassword, string pchCode, string pchEmail,
            [MarshalAs(UnmanagedType.I1)] bool bFinal);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeChangeSecretQuestionAndAnswerWithCodeSsss(
            IntPtr thisptr, string pchPassword, string pchCode, string pchNewQuestion, string pchNewAnswer);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetClientStatEiuuu(
            IntPtr thisptr, EClientStat eStat, long llValue, uint nAppId, uint nDepotId, uint nCellId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeVerifyPasswordS(IntPtr thisptr, string pchPassword);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBSupportUser(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsAppOverlayEnabledU(IntPtr thisptr, uint nAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsBehindNat(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetMicroTxnAppIdu(IntPtr thisptr, ulong gidTransId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeGetMicroTxnOrderIdu(IntPtr thisptr, ulong gidTransId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBGetMicroTxnPriceUccb(
            IntPtr thisptr, ulong gidTransId, ref CAmount pamtTotal, ref CAmount pamtTax, ref bool pbVat);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetMicroTxnLineItemCountU(IntPtr thisptr, ulong gidTransId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBGetMicroTxnLineItemUucusuibcb(
            IntPtr thisptr, ulong gidTransId, uint unLineItem, ref CAmount pamt, ref uint punQuantity,
            StringBuilder pchDescription, uint cubDescriptionLength, ref int pRecurringTimeUnit,
            byte[] pRecurringFrequency, ref CAmount pRecurringAmount, ref bool pbUnk);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsSandboxMicroTxnUb(IntPtr thisptr, ulong gidTransId, ref bool pbSandbox);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBMicroTxnRequiresCachedPmtMethodUb(
            IntPtr thisptr, ulong gidTransId, ref bool pbRequired);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeAuthorizeMicroTxnUe(
            IntPtr thisptr, ulong gidTransId, EMicroTxnAuthResponse eMicroTxnAuthResponse);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBGetWalletBalanceBc(IntPtr thisptr, ref bool pbHasWallet, ref CAmount pamtBalance);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeRequestMicroTxnInfoU(IntPtr thisptr, ulong gidTransId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBGetAppMinutesPlayedUii(
            IntPtr thisptr, uint nAppId, ref int pnForever, ref int pnLastTwoWeeks);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetAppLastPlayedTimeU(IntPtr thisptr, uint nAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBGetGuideUrlusu(IntPtr thisptr, uint uAppId, StringBuilder pchUrl, uint cchUrl);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetClientAppListResponseAddAppC(IntPtr thisptr, ref ClientAppInfo pClientAppInfo);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetClientAppListResponseAddDlcub(
            IntPtr thisptr, uint nAppId, [MarshalAs(UnmanagedType.I1)] bool bInstalled);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetClientAppListResponseDoneU(IntPtr thisptr, ulong ulBytesFreeOnDrive);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativePostUiResultToClientJobUe(IntPtr thisptr, ulong ulJobId, EResult eResult);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBPromptToVerifyEmail(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBPromptToChangePassword(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBAccountLocked(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBAccountShouldShowLockUi(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBAccountLockedByIpt(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetCountAuthedComputers(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ESteamGuardProvider NativeGetSteamGuardProvider(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetSteamGuardRequireCodeByDefault(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeShowSteamGuardProviderOptions(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSteamGuardProviderMobileIsOption(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBSteamGuardNewMachineNotification(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetSteamGuardEnabledTime(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetSteamGuardHistoryEntryIuubsisi(
            IntPtr thisptr, int iEntryIndex, ref uint puTimestamp, ref uint puIp, ref bool pbIsRemembered,
            StringBuilder pchGeolocInfo, int cchGeolocInfo, StringBuilder pchUnk, int cbUnk);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetSteamGuardNewMachineDialogResponseBb(
            IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bIsApproved,
            [MarshalAs(UnmanagedType.I1)] bool bIsWizardComplete);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBAccountCanUseIpt(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeChangeTwoFactorAuthOptionsI(IntPtr thisptr, int eOption);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeChangeSteamGuardOptionsSeb(
            IntPtr thisptr, string pchUnk, ESteamGuardProvider eProvider,
            [MarshalAs(UnmanagedType.I1)] bool bRequireCode);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSet2NdFactorAuthCodeSb(
            IntPtr thisptr, string pchAuthCode, [MarshalAs(UnmanagedType.I1)] bool bDontRememberComputer);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetUserMachineNameS(IntPtr thisptr, string pchMachineName);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetUserMachineNameSi(IntPtr thisptr, StringBuilder pchMachineName, int cbMachineName
            );

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBAccountHasIptConfig(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetEmailDomainFromLogonFailureSi(
            IntPtr thisptr, StringBuilder pchEmailDomain, int cbEmailDomain);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsSubscribedAppU(IntPtr thisptr, uint nAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeRegisterActivationCodeS(IntPtr thisptr, string pchActivationCode);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeOptionalDlcInstallationUb(
            IntPtr thisptr, uint nAppId, [MarshalAs(UnmanagedType.I1)] bool bInstall);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeAckSystemImu(IntPtr thisptr, ulong arg0);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeRequestSpecialSurveyU(IntPtr thisptr, uint uSurveyId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeSendSpecialSurveyResponseUbu(
            IntPtr thisptr, uint uSurveyId, byte[] pubData, uint cubData);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeRequestNotifications(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetAppOwnershipInfoUus(
            IntPtr thisptr, uint unAppId, ref uint pRTime32Created, StringBuilder pchCountry);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSendGameWebCallbackUs(IntPtr thisptr, uint unAppId, string szData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsCurrentlyStreaming(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeRequestStopStreaming(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeOnBigPictureStreamingResultBb(
            IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool arg0, byte[] arg1);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeOnBigPictureStreamingDone(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeOnBigPictureStreamRestarting(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeLockParentalLock(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeUnlockParentalLockS(IntPtr thisptr, string pchUnk);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeBlockAppU(IntPtr thisptr, uint unAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeUnblockAppU(IntPtr thisptr, uint unAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsParentalLockEnabled(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsParentalLockLocked(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsAppBlockedU(IntPtr thisptr, uint unAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsAppInBlockListU(IntPtr thisptr, uint unAppId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsFeatureBlockedE(IntPtr thisptr, EParentalFeature eParentalFeature);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsFeatureInBlockListE(IntPtr thisptr, EParentalFeature eParentalFeature);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EResult NativeValidateOfflineLogonTicketS(IntPtr thisptr, string pchUnk);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBGetOfflineLogonTicketSc(
            IntPtr thisptr, string pchUnk, ref COfflineOfflineLogonTicket pTicket);
    };
}