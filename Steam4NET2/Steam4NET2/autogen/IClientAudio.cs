// This file is automatically generated.

using System;
using System.Runtime.InteropServices;
using System.Text;

namespace Steam4Net
{
    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    public class ClientAudioVTable
    {
        public IntPtr StartVoiceRecording0;
        public IntPtr StopVoiceRecording1;
        public IntPtr ResetVoiceRecording2;
        public IntPtr GetAvailableVoice3;
        public IntPtr GetVoice4;
        public IntPtr GetCompressedVoice5;
        public IntPtr DecompressVoice6;
        public IntPtr GetVoiceOptimalSampleRate7;
        public IntPtr PlayAudio8;
        public IntPtr StopAudio9;
        public IntPtr PauseAudio10;
        public IntPtr UnPauseAudio11;
        public IntPtr SetPlayOrder12;
        public IntPtr ShufflePlayList13;
        public IntPtr GetPlayMode14;
        public IntPtr GetAudioHandle15;
        public IntPtr GetAudioDetails16;
        public IntPtr GetAudioArtSize17;
        public IntPtr GetAudioArtImage18;
        public IntPtr GetPlayListCount19;
        public IntPtr AddSongToPlaylist20;
        public IntPtr RemoveSongFromPlaylist21;
        public IntPtr SaveCurrentPlaylistToFile22;
        public IntPtr LoadPlaylistFromFile23;
        public IntPtr GetFileSourceCount24;
        public IntPtr AddLocalFileSource25;
        public IntPtr AddSMBFileSource26;
        public IntPtr AddITunesFileSource27;
        public IntPtr RemoveFileSource28;
        private IntPtr DTorIClientAudio29;
    };

    [InteropHelp.InterfaceVersionAttribute("CLIENTAUDIO_INTERFACE_VERSION001")]
    public class ClientAudio : InteropHelp.NativeWrapper<ClientAudioVTable>
    {
        public void StartVoiceRecording()
        {
            GetFunction<NativeStartVoiceRecording>(Functions.StartVoiceRecording0)(ObjectAddress);
        }

        public void StopVoiceRecording()
        {
            GetFunction<NativeStopVoiceRecording>(Functions.StopVoiceRecording1)(ObjectAddress);
        }

        public void ResetVoiceRecording()
        {
            GetFunction<NativeResetVoiceRecording>(Functions.ResetVoiceRecording2)(ObjectAddress);
        }

        public EVoiceResult GetAvailableVoice(ref uint pcbCompressed, ref uint pcbUncompressed,
            uint nUncompressedVoiceDesiredSampleRate)
        {
            return GetFunction<NativeGetAvailableVoiceUuu>(Functions.GetAvailableVoice3)(ObjectAddress,
                ref pcbCompressed, ref pcbUncompressed, nUncompressedVoiceDesiredSampleRate);
        }

        public EVoiceResult GetVoice(bool bWantCompressed, byte[] pDestBuffer, ref uint nBytesWritten,
            bool bWantUncompressed, byte[] pUncompressedDestBuffer, ref uint nUncompressBytesWritten,
            uint nUncompressedVoiceDesiredSampleRate)
        {
            return GetFunction<NativeGetVoiceBbuubbuuu>(Functions.GetVoice4)(ObjectAddress, bWantCompressed, pDestBuffer,
                (uint)pDestBuffer.Length, ref nBytesWritten, bWantUncompressed, pUncompressedDestBuffer,
                (uint)pUncompressedDestBuffer.Length, ref nUncompressBytesWritten, nUncompressedVoiceDesiredSampleRate);
        }

        public EVoiceResult GetCompressedVoice(byte[] pDestBuffer, ref uint nBytesWritten)
        {
            return GetFunction<NativeGetCompressedVoiceBuu>(Functions.GetCompressedVoice5)(ObjectAddress, pDestBuffer,
                (uint)pDestBuffer.Length, ref nBytesWritten);
        }

        public EVoiceResult DecompressVoice(byte[] pCompressed, byte[] pDestBuffer, ref uint nBytesWritten,
            uint nDesiredSampleRate)
        {
            return GetFunction<NativeDecompressVoiceBubuuu>(Functions.DecompressVoice6)(ObjectAddress, pCompressed,
                (uint)pCompressed.Length, pDestBuffer, (uint)pDestBuffer.Length, ref nBytesWritten, nDesiredSampleRate);
        }

        public uint GetVoiceOptimalSampleRate()
        {
            return GetFunction<NativeGetVoiceOptimalSampleRate>(Functions.GetVoiceOptimalSampleRate7)(ObjectAddress);
        }

        public bool PlayAudio(uint hAudio)
        {
            return GetFunction<NativePlayAudioU>(Functions.PlayAudio8)(ObjectAddress, hAudio);
        }

        public void StopAudio()
        {
            GetFunction<NativeStopAudio>(Functions.StopAudio9)(ObjectAddress);
        }

        public void PauseAudio()
        {
            GetFunction<NativePauseAudio>(Functions.PauseAudio10)(ObjectAddress);
        }

        public void UnPauseAudio()
        {
            GetFunction<NativeUnPauseAudio>(Functions.UnPauseAudio11)(ObjectAddress);
        }

        public void SetPlayOrder(EPlayMode ePlayMode)
        {
            GetFunction<NativeSetPlayOrderE>(Functions.SetPlayOrder12)(ObjectAddress, ePlayMode);
        }

        public void ShufflePlayList()
        {
            GetFunction<NativeShufflePlayList>(Functions.ShufflePlayList13)(ObjectAddress);
        }

        public EPlayMode GetPlayMode()
        {
            return GetFunction<NativeGetPlayMode>(Functions.GetPlayMode14)(ObjectAddress);
        }

        public uint GetAudioHandle(string cszFilePath)
        {
            return GetFunction<NativeGetAudioHandleS>(Functions.GetAudioHandle15)(ObjectAddress, cszFilePath);
        }

        public bool GetAudioDetails(uint hAudio, StringBuilder arg1, int arg2, StringBuilder arg3, int arg4,
            StringBuilder arg5, int arg6)
        {
            return GetFunction<NativeGetAudioDetailsUsisisi>(Functions.GetAudioDetails16)(ObjectAddress, hAudio, arg1,
                arg2, arg3, arg4, arg5, arg6);
        }

        public bool GetAudioArtSize(uint hAudio, ref uint punWidth, ref uint punHeight)
        {
            return GetFunction<NativeGetAudioArtSizeUuu>(Functions.GetAudioArtSize17)(ObjectAddress, hAudio,
                ref punWidth, ref punHeight);
        }

        public bool GetAudioArtImage(uint hAudio, byte[] pubBuffer)
        {
            return GetFunction<NativeGetAudioArtImageUbi>(Functions.GetAudioArtImage18)(ObjectAddress, hAudio, pubBuffer,
                pubBuffer.Length);
        }

        public uint GetPlayListCount()
        {
            return GetFunction<NativeGetPlayListCount>(Functions.GetPlayListCount19)(ObjectAddress);
        }

        public bool AddSongToPlaylist(uint hAudio)
        {
            return GetFunction<NativeAddSongToPlaylistU>(Functions.AddSongToPlaylist20)(ObjectAddress, hAudio);
        }

        public bool RemoveSongFromPlaylist(uint hAudio)
        {
            return GetFunction<NativeRemoveSongFromPlaylistU>(Functions.RemoveSongFromPlaylist21)(ObjectAddress, hAudio);
        }

        public bool SaveCurrentPlaylistToFile(string cszFilePath)
        {
            return GetFunction<NativeSaveCurrentPlaylistToFileS>(Functions.SaveCurrentPlaylistToFile22)(ObjectAddress,
                cszFilePath);
        }

        public bool LoadPlaylistFromFile(string cszFilePath)
        {
            return GetFunction<NativeLoadPlaylistFromFileS>(Functions.LoadPlaylistFromFile23)(ObjectAddress, cszFilePath);
        }

        public uint GetFileSourceCount()
        {
            return GetFunction<NativeGetFileSourceCount>(Functions.GetFileSourceCount24)(ObjectAddress);
        }

        public uint AddLocalFileSource(string cszFileSource)
        {
            return GetFunction<NativeAddLocalFileSourceS>(Functions.AddLocalFileSource25)(ObjectAddress, cszFileSource);
        }

        public uint AddSmbFileSource(string cszFileSource)
        {
            return GetFunction<NativeAddSmbFileSourceS>(Functions.AddSMBFileSource26)(ObjectAddress, cszFileSource);
        }

        public uint AddITunesFileSource(string cszFileSource)
        {
            return GetFunction<NativeAddITunesFileSourceS>(Functions.AddITunesFileSource27)(ObjectAddress, cszFileSource);
        }

        public bool RemoveFileSource(uint hFileSource)
        {
            return GetFunction<NativeRemoveFileSourceU>(Functions.RemoveFileSource28)(ObjectAddress, hFileSource);
        }

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeStartVoiceRecording(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeStopVoiceRecording(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeResetVoiceRecording(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EVoiceResult NativeGetAvailableVoiceUuu(
            IntPtr thisptr, ref uint pcbCompressed, ref uint pcbUncompressed, uint nUncompressedVoiceDesiredSampleRate);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EVoiceResult NativeGetVoiceBbuubbuuu(
            IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bWantCompressed, byte[] pDestBuffer,
            uint cbDestBufferSize, ref uint nBytesWritten, [MarshalAs(UnmanagedType.I1)] bool bWantUncompressed,
            byte[] pUncompressedDestBuffer, uint cbUncompressedDestBufferSize, ref uint nUncompressBytesWritten,
            uint nUncompressedVoiceDesiredSampleRate);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EVoiceResult NativeGetCompressedVoiceBuu(
            IntPtr thisptr, byte[] pDestBuffer, uint cbDestBufferSize, ref uint nBytesWritten);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EVoiceResult NativeDecompressVoiceBubuuu(
            IntPtr thisptr, byte[] pCompressed, uint cbCompressed, byte[] pDestBuffer, uint cbDestBufferSize,
            ref uint nBytesWritten, uint nDesiredSampleRate);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetVoiceOptimalSampleRate(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativePlayAudioU(IntPtr thisptr, uint hAudio);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeStopAudio(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativePauseAudio(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeUnPauseAudio(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetPlayOrderE(IntPtr thisptr, EPlayMode ePlayMode);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeShufflePlayList(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EPlayMode NativeGetPlayMode(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetAudioHandleS(IntPtr thisptr, string cszFilePath);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetAudioDetailsUsisisi(
            IntPtr thisptr, uint hAudio, StringBuilder arg1, int arg2, StringBuilder arg3, int arg4, StringBuilder arg5,
            int arg6);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetAudioArtSizeUuu(
            IntPtr thisptr, uint hAudio, ref uint punWidth, ref uint punHeight);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetAudioArtImageUbi(IntPtr thisptr, uint hAudio, byte[] pubBuffer, int cubBuffer);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetPlayListCount(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeAddSongToPlaylistU(IntPtr thisptr, uint hAudio);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeRemoveSongFromPlaylistU(IntPtr thisptr, uint hAudio);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSaveCurrentPlaylistToFileS(IntPtr thisptr, string cszFilePath);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeLoadPlaylistFromFileS(IntPtr thisptr, string cszFilePath);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetFileSourceCount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeAddLocalFileSourceS(IntPtr thisptr, string cszFileSource);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeAddSmbFileSourceS(IntPtr thisptr, string cszFileSource);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeAddITunesFileSourceS(IntPtr thisptr, string cszFileSource);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeRemoveFileSourceU(IntPtr thisptr, uint hFileSource);
    };

    public enum EPlayMode
    {
    };
}