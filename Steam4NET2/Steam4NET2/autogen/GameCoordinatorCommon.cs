// This file is automatically generated.

using System.Runtime.InteropServices;

namespace Steam4Net
{
    public enum EgcResults
    {
        KEgcResultOk = 0,
        KEgcResultNoMessage = 1,
        KEgcResultBufferTooSmall = 2,
        KEgcResultNotLoggedOn = 3,
        KEgcResultInvalidMessage = 4
    };

    public enum EgcMessages
    {
        KEgcMsgGenericReply = 10,
        KEsoMsgCreate = 21,
        KEsoMsgUpdate = 22,
        KEsoMsgDestroy = 23,
        KEsoMsgCacheSubscribed = 24,
        KEsoMsgCacheUnsubscribed = 25,
        KEsoMsgUpdateMultiple = 26,
        KEsoMsgCacheSubscriptionCheck = 27,
        KEsoMsgCacheSubscriptionRefresh = 28,
        KEgcMsgAchievementAwarded = 51,
        KEgcMsgConCommand = 52,
        KEgcMsgStartPlaying = 53,
        KEgcMsgStopPlaying = 54,
        KEgcMsgStartGameserver = 55,
        KEgcMsgStopGameserver = 56,
        KEgcMsgWgRequest = 57,
        KEgcMsgWgResponse = 58,
        KEgcMsgGetUserGameStatsSchema = 59,
        KEgcMsgGetUserGameStatsSchemaResponse = 60,
        KEgcMsgGetUserStatsDeprecated = 61,
        KEgcMsgGetUserStatsResponse = 62,
        KEgcMsgAppInfoUpdated = 63,
        KEgcMsgValidateSession = 64,
        KEgcMsgValidateSessionResponse = 65,
        KEgcMsgLookupAccountFromInput = 66,
        KEgcMsgSendHttpRequest = 67,
        KEgcMsgSendHttpRequestResponse = 68,
        KEgcMsgPreTestSetup = 69,
        KEgcMsgRecordSupportAction = 70,
        KEgcMsgGetAccountDetails = 71,
        KEgcMsgSendInterAppMessage = 72,
        KEgcMsgReceiveInterAppMessage = 73,
        KEgcMsgFindAccounts = 74,
        KEgcMsgPostAlert = 75,
        KEgcMsgGetLicenses = 76,
        KEgcMsgGetUserStats = 77,
        KEgcMsgGetCommands = 78,
        KEgcMsgGetCommandsResponse = 79,
        KEgcMsgAddFreeLicense = 80,
        KEgcMsgAddFreeLicenseResponse = 81,
        KEgcMsgWebApiRegisterInterfaces = 101,
        KEgcMsgWebApiJobRequest = 102,
        KEgcMsgWebApiRegistrationRequested = 103,
        KEgcMsgMemCachedGet = 200,
        KEgcMsgMemCachedGetResponse = 201,
        KEgcMsgMemCachedSet = 202,
        KEgcMsgMemCachedDelete = 203,
        KeMsgGcSetItemPosition = 1001,
        KeMsgGcCraft = 1002,
        KeMsgGcCraftResponse = 1003,
        KeMsgGcDelete = 1004,
        KeMsgGcVerifyCacheSubscription = 1005,
        KeMsgGcNameItem = 1006,
        KeMsgGcDecodeItem = 1007,
        KeMsgGcDecodeItemResponse = 1008,
        KeMsgGcPaintItem = 1009,
        KeMsgGcPaintItemResponse = 1010,
        KeMsgGcGoldenWrenchBroadcast = 1011,
        KeMsgGcmotdRequest = 1012,
        KeMsgGcmotdRequestResponse = 1013,
        KeMsgGcAddItemToSocket = 1014,
        KeMsgGcAddItemToSocketResponse = 1015,
        KeMsgGcAddSocketToBaseItem = 1016,
        KeMsgGcAddSocketToItem = 1017,
        KeMsgGcAddSocketToItemResponse = 1018,
        KeMsgGcNameBaseItem = 1019,
        KeMsgGcNameBaseItemResponse = 1020,
        KeMsgGcRemoveSocketItem = 1021,
        KeMsgGcRemoveSocketItemResponse = 1022,
        KeMsgGcCustomizeItemTexture = 1023,
        KeMsgGcCustomizeItemTextureResponse = 1024,
        KeMsgGcUseItemRequest = 1025,
        KeMsgGcUseItemResponse = 1026,
        KeMsgGcGiftedItems = 1027,
        KeMsgGcSpawnItem = 1028,
        KeMsgGcRespawnPostLoadoutChange = 1029,
        KeMsgGcRemoveItemName = 1030,
        KeMsgGcRemoveItemPaint = 1031,
        KeMsgGcGiftWrapItem = 1032,
        KeMsgGcGiftWrapItemResponse = 1033,
        KeMsgGcDeliverGift = 1034,
        KeMsgGcDeliverGiftResponseGiver = 1035,
        KeMsgGcDeliverGiftResponseReceiver = 1036,
        KeMsgGcUnwrapGiftRequest = 1037,
        KeMsgGcUnwrapGiftResponse = 1038,
        KeMsgGcSetItemStyle = 1039,
        KeMsgGcUsedClaimCodeItem = 1040,
        KeMsgGcSortItems = 1041,
        KeMsgGcRevolvingLootList = 1042,
        KeMsgGcLookupAccount = 1043,
        KeMsgGcLookupAccountResponse = 1044,
        KeMsgGcLookupAccountName = 1045,
        KeMsgGcLookupAccountNameResponse = 1046,
        KeMsgGcUpdateItemSchema = 1049,
        KeMsgGcRequestInventoryRefresh = 1050,
        KeMsgGcRemoveCustomTexture = 1051,
        KeMsgGcRemoveCustomTextureResponse = 1052,
        KeMsgGcRemoveMakersMark = 1053,
        KeMsgGcRemoveMakersMarkResponse = 1054,
        KeMsgGcRemoveUniqueCraftIndex = 1055,
        KeMsgGcRemoveUniqueCraftIndexResponse = 1056,
        KeMsgGcSaxxyBroadcast = 1057,
        KeMsgGcBackpackSortFinished = 1058,
        KeMsgGcRequestItemSchemaData = 1060,
        KeMsgGcTradingInitiateTradeRequest = 1501,
        KeMsgGcTradingInitiateTradeResponse = 1502,
        KeMsgGcTradingStartSession = 1503,
        KeMsgGcTradingSetItem = 1504,
        KeMsgGcTradingRemoveItem = 1505,
        KeMsgGcTradingUpdateTradeInfo = 1506,
        KeMsgGcTradingSetReadiness = 1507,
        KeMsgGcTradingReadinessResponse = 1508,
        KeMsgGcTradingSessionClosed = 1509,
        KeMsgGcTradingCancelSession = 1510,
        KeMsgGcTradingTradeChatMsg = 1511,
        KeMsgGcTradingConfirmOffer = 1512,
        KeMsgGcTradingTradeTypingChatMsg = 1513,
        KeMsgGcServerBrowserFavoriteServer = 1601,
        KeMsgGcServerBrowserBlacklistServer = 1602,
        KeMsgGcDevNewItemRequest = 2001,
        KeMsgGcDevNewItemRequestResponse = 2002,
        KeMsgGcStoreGetUserData = 2500,
        KeMsgGcStoreGetUserDataResponse = 2501,
        KeMsgGcStorePurchaseInit = 2502,
        KeMsgGcStorePurchaseInitResponse = 2503,
        KeMsgGcStorePurchaseFinalize = 2504,
        KeMsgGcStorePurchaseFinalizeResponse = 2505,
        KeMsgGcStorePurchaseCancel = 2506,
        KeMsgGcStorePurchaseCancelResponse = 2507,
        KeMsgGcStorePurchaseQueryTxn = 2508,
        KeMsgGcStorePurchaseQueryTxnResponse = 2509,
        KeMsgGcSystemMessage = 4001,
        KeMsgGcReplicateConVars = 4002,
        KeMsgGcConVarUpdated = 4003,
        KeMsgGcReportWarKill = 5001,
        KeMsgGcVoteKickBanPlayer = 5018,
        KeMsgGcVoteKickBanPlayerResult = 5019,
        KeMsgGcKickPlayer = 5020,
        KeMsgGcStartedTraining = 5021,
        KeMsgGcFreeTrialChooseMostHelpfulFriend = 5022,
        KeMsgGcRequestTf2Friends = 5023,
        KeMsgGcRequestTf2FriendsResponse = 5024,
        KeMsgGcReplayUploadedToYouTube = 5025,
        KeMsgGcReplaySubmitContestEntry = 5026,
        KeMsgGcReplaySubmitContestEntryResponse = 5027,
        KeMsgGcCoachingAddToCoaches = 5200,
        KeMsgGcCoachingAddToCoachesResponse = 5201,
        KeMsgGcCoachingRemoveFromCoaches = 5202,
        KeMsgGcCoachingRemoveFromCoachesResponse = 5203,
        KeMsgGcCoachingFindCoach = 5204,
        KeMsgGcCoachingFindCoachResponse = 5205,
        KeMsgGcCoachingAskCoach = 5206,
        KeMsgGcCoachingAskCoachResponse = 5207,
        KeMsgGcCoachingCoachJoinGame = 5208,
        KeMsgGcCoachingCoachJoining = 5209,
        KeMsgGcCoachingCoachJoined = 5210,
        KeMsgGcCoachingLikeCurrentCoach = 5211,
        KeMsgGcCoachingRemoveCurrentCoach = 5212,
        KeMsgGcCoachingAlreadyRatedCoach = 5213,
        KeMsgGcDuelRequest = 5500,
        KeMsgGcDuelResponse = 5501,
        KeMsgGcDuelResults = 5502,
        KeMsgGcDuelStatus = 5503,
        KeMsgGcHalloweenReservedItem = 5600,
        KeMsgGcHalloweenGrantItem = 5601,
        KeMsgGcHalloweenGrantItemResponse = 5604,
        KeMsgGcHalloweenCheatQueryResponse = 5605,
        KeMsgGcHalloweenItemClaimed = 5606,
        KeMsgGcGameServerLevelInfo = 5700,
        KeMsgGcGameServerAuthChallenge = 5701,
        KeMsgGcGameServerAuthChallengeResponse = 5702,
        KeMsgGcGameServerCreateIdentity = 5703,
        KeMsgGcGameServerCreateIdentityResponse = 5704,
        KeMsgGcGameServerList = 5705,
        KeMsgGcGameServerListResponse = 5706,
        KeMsgGcGameServerAuthResult = 5707,
        KeMsgGcGameServerResetIdentity = 5708,
        KeMsgGcGameServerResetIdentityResponse = 5709,
        KeMsgGcQpScoreServers = 5800,
        KeMsgGcQpScoreServersResponse = 5801,
        KeMsgGcPickupItemEligibilityQuery = 6000,
        KeMsgGcDevGrantWarKill = 6001,
        KeMsgGcIncrementKillCountAttribute = 6100,
        KeMsgGcIncrementKillCountResponse = 6101
    };

    public enum EtfInitTradeResult
    {
        KEtfInitTradeResultOk = 0,
        KEtfInitTradeResultDeclined = 1,
        KEtfInitTradeResultVacBanned = 2,
        KEtfInitTradeResultOtherVacBanned = 3,
        KEtfInitTradeResultBusy = 4,
        KEtfInitTradeResultDisabled = 5,
        KEtfInitTradeResultNoLoggedIn = 6,
        KEtfInitTradeResultCanceled = 7,
        KEtfInitTradeResultTooSoon = 8
    };

    public enum EtfTradeResult
    {
        KEtfTradeResultOk = 0,
        KEtfTradeResultCanceled = 1,
        KEtfTradeResultStaleInventory = 2,
        KEtfTradeResultUntradeable = 3,
        KEtfTradeResultNoItems = 4,
        KEtfTradeResultDisabled = 5
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1701)]
    public struct GcMessageAvailableT
    {
        public const int KiCallback = 1701;
        public uint m_nMessageSize;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1702)]
    public struct GcMessageFailedT
    {
        public const int KiCallback = 1702;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    public struct GcMsgHeaderT
    {
        public ushort headerVersion;
        public ulong targetJobID;
        public ulong sourceJobID;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(24)]
    public struct SoMsgCacheSubscribedT
    {
        public const int KiMessage = 24;
        public GcMsgHeaderT header;
        public SteamIdT steamid;
        public uint numberOfTypes;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    public struct SoMsgCacheSubscribedItemsT
    {
        public ushort idOfType;
        public ushort itemcount;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    public struct SoMsgCacheSubscribedItemT
    {
        public ulong itemid;
        public uint accountid;
        public ushort itemdefindex;
        public byte itemlevel;
        public byte itemquality;
        public uint position;
        public uint quantity;
        public ushort namelength;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    public struct SoMsgCacheSubscribedItemAttribT
    {
        public ushort attribindex;
        public float value;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(25)]
    public struct SoMsgCacheUnsubscribedT
    {
        public const int KiMessage = 25;
        public GcMsgHeaderT header;
        public SteamIdT steamid;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(21)]
    public struct SoMsgCreateT
    {
        public const int KiMessage = 21;
        public GcMsgHeaderT header;
        public SteamIdT steamid;
        public uint unknown;
        public SoMsgCacheSubscribedItemT item;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(22)]
    public struct SoMsgUpdateT
    {
        public const int KiMessage = 22;
        public GcMsgHeaderT header;
        public SteamIdT steamid;
        public uint unk1;
        public ulong itemID;
        public ushort unk2;
        public uint position;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(23)]
    public struct SoMsgDeletedT
    {
        public const int KiMessage = 23;
        public GcMsgHeaderT header;
        public SteamIdT steamid;
        public uint unk1;
        public ulong itemid;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1001)]
    public struct GcSetItemPositionT
    {
        public const int KiMessage = 1001;
        public GcMsgHeaderT header;
        public ulong itemID;
        public uint position;
        public uint unk1;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1002)]
    public struct GcCraftT
    {
        public const int KiMessage = 1002;
        public GcMsgHeaderT header;
        public ushort blueprint;
        public ushort itemcount;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1003)]
    public struct GcCraftResponseT
    {
        public const int KiMessage = 1003;
        public GcMsgHeaderT header;
        public ushort blueprint;
        public ulong unk1;
        public ulong itemid;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1004)]
    public struct GcDeleteT
    {
        public const int KiMessage = 1004;
        public GcMsgHeaderT header;
        public ulong itemID;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1005)]
    public struct GcVerifyCacheSubscriptionT
    {
        public const int KiMessage = 1005;
        public GcMsgHeaderT header;
        public SteamIdT steamid;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1011)]
    public struct GcGoldenWrenchBroadcastT
    {
        public const int KiMessage = 1011;
        public GcMsgHeaderT header;
        public ushort WrenchNumber;
        public ushort State;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1012)]
    public struct GcmotdRequestT
    {
        public const int KiMessage = 1012;
        public GcMsgHeaderT header;
        public uint timestamp;
        public uint unk1;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1013)]
    public struct GcmotdRequestResponseT
    {
        public const int KiMessage = 1013;
        public GcMsgHeaderT header;
        public ushort NumberOfNews;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(5701)]
    public struct GcGameServerAuthChallengeT
    {
        public const int KiMessage = 5701;
        public GcMsgHeaderT header;
        public byte unknown;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(5702)]
    public struct GcGameServerAuthChallengeResponseT
    {
        public const int KiMessage = 5702;
        public GcMsgHeaderT header;
        public uint accountID;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(5700)]
    public struct GcGameServerLevelInfoT
    {
        public const int KiMessage = 5700;
        public GcMsgHeaderT header;
        public byte unknown;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1501)]
    public struct GcTradingInitiateTradeRequestT
    {
        public const int KiMessage = 1501;
        public GcMsgHeaderT header;
        public uint challenge;
        public SteamIdT steamID;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1502)]
    public struct GcTradingInitiateTradeResponseT
    {
        public const int KiMessage = 1502;
        public GcMsgHeaderT header;
        public uint result;
        public uint challenge;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1511)]
    public struct GcTradingTradeChatMsgT
    {
        public const int KiMessage = 1511;
        public GcMsgHeaderT header;
        public byte unknown;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1513)]
    public struct GcTradingTradeTypingChatMsgT
    {
        public const int KiMessage = 1513;
        public GcMsgHeaderT header;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1503)]
    public struct GcTradingStartSessionT
    {
        public const int KiMessage = 1503;
        public GcMsgHeaderT header;
        public SteamIdT steamID1;
        public SteamIdT steamID2;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1504)]
    public struct GcTradingSetItemT
    {
        public const int KiMessage = 1504;
        public GcMsgHeaderT header;
        public byte showcase;
        public ulong itemID;
        public byte slot;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1505)]
    public struct GcTradingRemoveItemT
    {
        public const int KiMessage = 1505;
        public GcMsgHeaderT header;
        public ulong itemID;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1506)]
    public struct GcTradingUpdateTradeInfoT
    {
        public const int KiMessage = 1506;
        public GcMsgHeaderT header;
        public uint version;
        public byte plyr1_numItems;
        public byte plyr2_numItems;
        public byte plyr1_numItems_showcase;
        public byte plyr2_numItems_showcase;
        public ulong plyr1_showcase;
        public ulong plyr1_slot0;
        public ulong plyr1_slot1;
        public ulong plyr1_slot2;
        public ulong plyr1_slot3;
        public ulong plyr1_slot4;
        public ulong plyr1_slot5;
        public ulong plyr1_slot6;
        public ulong plyr1_slot7;
        public ulong plyr2_showcase;
        public ulong plyr2_slot0;
        public ulong plyr2_slot1;
        public ulong plyr2_slot2;
        public ulong plyr2_slot3;
        public ulong plyr2_slot4;
        public ulong plyr2_slot5;
        public ulong plyr2_slot6;
        public ulong plyr2_slot7;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1508)]
    public struct GcTradingReadinessResponseT
    {
        public const int KiMessage = 1508;
        public GcMsgHeaderT header;
        public uint version;
        public byte player1ready;
        public byte player2ready;
        public byte player1confirmed;
        public byte player2confirmed;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1507)]
    public struct GcTradingSetReadinessT
    {
        public const int KiMessage = 1507;
        public GcMsgHeaderT header;
        public uint version;
        public byte response;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1512)]
    public struct GcTradingConfirmOfferT
    {
        public const int KiMessage = 1512;
        public GcMsgHeaderT header;
        public uint version;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1509)]
    public struct GcTradingSessionClosedT
    {
        public const int KiMessage = 1509;
        public GcMsgHeaderT header;
        public uint result;
    };

    [StructLayout(LayoutKind.Sequential, Pack = 8)]
    [InteropHelp.CallbackIdentityAttribute(1029)]
    public struct GcRespawnPostLoadoutChangeT
    {
        public const int KiMessage = 1029;
        public GcMsgHeaderT header;
        public SteamIdT steamID;
    };
}