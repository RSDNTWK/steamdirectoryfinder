// This file is automatically generated.

using System;
using System.Runtime.InteropServices;

namespace Steam4Net
{
    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    public class ClientFriendsVTable
    {
        public IntPtr GetPersonaName0;
        public IntPtr SetPersonaName1;
        public IntPtr SetPersonaNameEx2;
        public IntPtr IsPersonaNameSet3;
        public IntPtr GetPersonaState4;
        public IntPtr SetPersonaState5;
        public IntPtr NotifyUIOfMenuChange6;
        public IntPtr GetFriendCount7;
        public IntPtr GetFriendByIndex8;
        public IntPtr GetOnlineFriendCount9;
        public IntPtr GetFriendRelationship10;
        public IntPtr GetFriendPersonaState11;
        public IntPtr GetFriendPersonaName12;
        public IntPtr GetSmallFriendAvatar13;
        public IntPtr GetMediumFriendAvatar14;
        public IntPtr GetLargeFriendAvatar15;
        public IntPtr SetFriendRegValue16;
        public IntPtr GetFriendRegValue17;
        public IntPtr DeleteFriendRegValue18;
        public IntPtr GetFriendGamePlayed19;
        public IntPtr GetFriendGamePlayedExtraInfo20;
        public IntPtr GetFriendGameServer21;
        public IntPtr GetFriendPersonaStateFlags22;
        public IntPtr IsFriendGameOnConsole23;
        public IntPtr GetFriendSessionStateInfo24;
        public IntPtr GetFriendRestrictions25;
        public IntPtr GetFriendPersonaNameHistory26;
        public IntPtr RequestPersonaNameHistory27;
        public IntPtr GetFriendPersonaNameHistoryAndDate28;
        public IntPtr AddFriend29;
        public IntPtr RemoveFriend30;
        public IntPtr HasFriend31;
        public IntPtr AddFriendByName32;
        public IntPtr InviteFriendByEmail33;
        public IntPtr RequestUserInformation34;
        public IntPtr SetIgnoreFriend35;
        public IntPtr ReportChatDeclined36;
        public IntPtr CreateFriendsGroup37;
        public IntPtr DeleteFriendsGroup38;
        public IntPtr RenameFriendsGroup39;
        public IntPtr AddFriendToGroup40;
        public IntPtr RemoveFriendFromGroup41;
        public IntPtr IsFriendMemberOfFriendsGroup42;
        public IntPtr GetFriendsGroupCount43;
        public IntPtr GetFriendsGroupIDByIndex44;
        public IntPtr GetFriendsGroupName45;
        public IntPtr GetFriendsGroupMembershipCount46;
        public IntPtr GetFirstFriendsGroupMember47;
        public IntPtr GetNextFriendsGroupMember48;
        public IntPtr GetGroupFriendsMembershipCount49;
        public IntPtr GetFirstGroupFriendsMember50;
        public IntPtr GetNextGroupFriendsMember51;
        public IntPtr GetPlayerNickname52;
        public IntPtr SetPlayerNickname53;
        public IntPtr GetFriendsSteamLevel54;
        public IntPtr GetChatMessagesCount55;
        public IntPtr GetChatMessage56;
        public IntPtr SendMsgToFriend57;
        public IntPtr ClearChatHistory58;
        public IntPtr GetKnownClanCount59;
        public IntPtr GetKnownClanByIndex60;
        public IntPtr GetClanCount61;
        public IntPtr GetClanByIndex62;
        public IntPtr GetClanName63;
        public IntPtr GetClanTag64;
        public IntPtr GetFriendActivityCounts65;
        public IntPtr GetClanActivityCounts66;
        public IntPtr DownloadClanActivityCounts67;
        public IntPtr GetFriendsGroupActivityCounts68;
        public IntPtr IsClanPublic69;
        public IntPtr IsClanLarge70;
        public IntPtr SubscribeToPersonaStateFeed71;
        public IntPtr JoinClanChatRoom72;
        public IntPtr LeaveClanChatRoom73;
        public IntPtr GetClanChatMemberCount74;
        public IntPtr GetChatMemberByIndex75;
        public IntPtr SendClanChatMessage76;
        public IntPtr GetClanChatMessage77;
        public IntPtr IsClanChatAdmin78;
        public IntPtr IsClanChatWindowOpenInSteam79;
        public IntPtr OpenClanChatWindowInSteam80;
        public IntPtr CloseClanChatWindowInSteam81;
        public IntPtr SetListenForFriendsMessages82;
        public IntPtr ReplyToFriendMessage83;
        public IntPtr GetFriendMessage84;
        public IntPtr InviteFriendToClan85;
        public IntPtr AcknowledgeInviteToClan86;
        public IntPtr GetFriendCountFromSource87;
        public IntPtr GetFriendFromSourceByIndex88;
        public IntPtr IsUserInSource89;
        public IntPtr GetCoplayFriendCount90;
        public IntPtr GetCoplayFriend91;
        public IntPtr GetFriendCoplayTime92;
        public IntPtr GetFriendCoplayGame93;
        public IntPtr SetRichPresence94;
        public IntPtr ClearRichPresence95;
        public IntPtr GetFriendRichPresence96;
        public IntPtr GetFriendRichPresenceKeyCount97;
        public IntPtr GetFriendRichPresenceKeyByIndex98;
        public IntPtr RequestFriendRichPresence99;
        public IntPtr JoinChatRoom100;
        public IntPtr LeaveChatRoom101;
        public IntPtr InviteUserToChatRoom102;
        public IntPtr SendChatMsg103;
        public IntPtr GetChatRoomMessagesCount104;
        public IntPtr GetChatRoomEntry105;
        public IntPtr ClearChatRoomHistory106;
        public IntPtr SerializeChatRoomDlg107;
        public IntPtr GetSizeOfSerializedChatRoomDlg108;
        public IntPtr GetSerializedChatRoomDlg109;
        public IntPtr ClearSerializedChatRoomDlg110;
        public IntPtr KickChatMember111;
        public IntPtr BanChatMember112;
        public IntPtr UnBanChatMember113;
        public IntPtr SetChatRoomType114;
        public IntPtr GetChatRoomLockState115;
        public IntPtr GetChatRoomPermissions116;
        public IntPtr SetChatRoomModerated117;
        public IntPtr BChatRoomModerated118;
        public IntPtr NotifyChatRoomDlgsOfUIChange119;
        public IntPtr TerminateChatRoom120;
        public IntPtr GetChatRoomCount121;
        public IntPtr GetChatRoomByIndex122;
        public IntPtr GetChatRoomName123;
        public IntPtr BGetChatRoomMemberDetails124;
        public IntPtr CreateChatRoom125;
        public IntPtr VoiceCall126;
        public IntPtr VoiceHangUp127;
        public IntPtr SetVoiceSpeakerVolume128;
        public IntPtr SetVoiceMicrophoneVolume129;
        public IntPtr SetAutoAnswer130;
        public IntPtr VoiceAnswer131;
        public IntPtr VoicePutOnHold132;
        public IntPtr BVoiceIsLocalOnHold133;
        public IntPtr BVoiceIsRemoteOnHold134;
        public IntPtr SetDoNotDisturb135;
        public IntPtr EnableVoiceNotificationSounds136;
        public IntPtr SetPushToTalkEnabled137;
        public IntPtr IsPushToTalkEnabled138;
        public IntPtr SetPushToTalkKey139;
        public IntPtr GetPushToTalkKey140;
        public IntPtr IsPushToTalkKeyDown141;
        public IntPtr EnableVoiceCalibration142;
        public IntPtr IsVoiceCalibrating143;
        public IntPtr GetVoiceCalibrationSamplePeak144;
        public IntPtr SetMicBoost145;
        public IntPtr GetMicBoost146;
        public IntPtr HasHardwareMicBoost147;
        public IntPtr GetMicDeviceName148;
        public IntPtr StartTalking149;
        public IntPtr EndTalking150;
        public IntPtr VoiceIsValid151;
        public IntPtr SetAutoReflectVoice152;
        public IntPtr GetCallState153;
        public IntPtr GetVoiceMicrophoneVolume154;
        public IntPtr GetVoiceSpeakerVolume155;
        public IntPtr TimeSinceLastVoiceDataReceived156;
        public IntPtr TimeSinceLastVoiceDataSend157;
        public IntPtr BCanSend158;
        public IntPtr BCanReceive159;
        public IntPtr GetEstimatedBitsPerSecond160;
        public IntPtr GetPeakSample161;
        public IntPtr SendResumeRequest162;
        public IntPtr OpenChatDialog163;
        public IntPtr StartChatRoomVoiceSpeaking164;
        public IntPtr EndChatRoomVoiceSpeaking165;
        public IntPtr GetFriendLastLogonTime166;
        public IntPtr GetFriendLastLogoffTime167;
        public IntPtr GetChatRoomVoiceTotalSlotCount168;
        public IntPtr GetChatRoomVoiceUsedSlotCount169;
        public IntPtr GetChatRoomVoiceUsedSlot170;
        public IntPtr GetChatRoomVoiceStatus171;
        public IntPtr BChatRoomHasAvailableVoiceSlots172;
        public IntPtr BIsChatRoomVoiceSpeaking173;
        public IntPtr GetChatRoomPeakSample174;
        public IntPtr ChatRoomVoiceRetryConnections175;
        public IntPtr SetPortTypes176;
        public IntPtr ReinitAudio177;
        public IntPtr SetInGameVoiceSpeaking178;
        public IntPtr IsInGameVoiceSpeaking179;
        public IntPtr ActivateGameOverlay180;
        public IntPtr ActivateGameOverlayToUser181;
        public IntPtr ActivateGameOverlayToWebPage182;
        public IntPtr ActivateGameOverlayToStore183;
        public IntPtr ActivateGameOverlayInviteDialog184;
        public IntPtr NotifyGameOverlayStateChanged185;
        public IntPtr NotifyGameServerChangeRequested186;
        public IntPtr NotifyLobbyJoinRequested187;
        public IntPtr NotifyRichPresenceJoinRequested188;
        public IntPtr GetClanRelationship189;
        public IntPtr GetFriendClanRank190;
        public IntPtr VoiceIsAvailable191;
        public IntPtr TestVoiceDisconnect192;
        public IntPtr TestChatRoomPeerDisconnect193;
        public IntPtr TestVoicePacketLoss194;
        public IntPtr FindFriendVoiceChatHandle195;
        public IntPtr RequestFriendsWhoPlayGame196;
        public IntPtr GetCountFriendsWhoPlayGame197;
        public IntPtr GetFriendWhoPlaysGame198;
        public IntPtr SetPlayedWith199;
        public IntPtr RequestClanOfficerList200;
        public IntPtr GetClanOwner201;
        public IntPtr GetClanOfficerCount202;
        public IntPtr GetClanOfficerByIndex203;
        public IntPtr GetUserRestrictions204;
        public IntPtr RequestFriendProfileInfo205;
        public IntPtr GetFriendProfileInfo206;
        public IntPtr InviteUserToGame207;
        public IntPtr GetOnlineConsoleFriendCount208;
        public IntPtr RequestTrade209;
        public IntPtr TradeResponse210;
        public IntPtr CancelTradeRequest211;
        public IntPtr HideFriend212;
        public IntPtr GetFriendFacebookName213;
        public IntPtr GetFriendFacebookID214;
        public IntPtr GetFollowerCount215;
        public IntPtr IsFollowing216;
        public IntPtr EnumerateFollowingList217;
        public IntPtr RequestFriendMessageHistory218;
        public IntPtr RequestFriendMessageHistoryForOfflineMessages219;
        public IntPtr GetCountFriendsWithOfflineMessages220;
        public IntPtr GetFriendWithOfflineMessage221;
        public IntPtr ClearFriendHasOfflineMessage222;
        public IntPtr RequestEmoticonList223;
        public IntPtr GetEmoticonCount224;
        public IntPtr GetEmoticonName225;
        private IntPtr DTorIClientFriends226;
    };

    [InteropHelp.InterfaceVersionAttribute("CLIENTFRIENDS_INTERFACE_VERSION001")]
    public class ClientFriends : InteropHelp.NativeWrapper<ClientFriendsVTable>
    {
        public string GetPersonaName()
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(GetFunction<NativeGetPersonaName>(Functions.GetPersonaName0)(ObjectAddress)));
        }

        public void SetPersonaName(string pchPersonaName)
        {
            GetFunction<NativeSetPersonaNameS>(Functions.SetPersonaName1)(ObjectAddress, pchPersonaName);
        }

        public ulong SetPersonaNameEx(string pchPersonaName, bool bSendCallback)
        {
            return GetFunction<NativeSetPersonaNameExSb>(Functions.SetPersonaNameEx2)(ObjectAddress, pchPersonaName,
                bSendCallback);
        }

        public bool IsPersonaNameSet()
        {
            return GetFunction<NativeIsPersonaNameSet>(Functions.IsPersonaNameSet3)(ObjectAddress);
        }

        public EPersonaState GetPersonaState()
        {
            return GetFunction<NativeGetPersonaState>(Functions.GetPersonaState4)(ObjectAddress);
        }

        public void SetPersonaState(EPersonaState ePersonaState)
        {
            GetFunction<NativeSetPersonaStateE>(Functions.SetPersonaState5)(ObjectAddress, ePersonaState);
        }

        public bool NotifyUiOfMenuChange(bool bShowAvatars, bool bSortByName, bool bShowOnlineOnly,
            bool bShowUntaggedFriends)
        {
            return GetFunction<NativeNotifyUiOfMenuChangeBbbb>(Functions.NotifyUIOfMenuChange6)(ObjectAddress,
                bShowAvatars, bSortByName, bShowOnlineOnly, bShowUntaggedFriends);
        }

        public int GetFriendCount(EFriendFlags iFriendFlags)
        {
            return GetFunction<NativeGetFriendCountE>(Functions.GetFriendCount7)(ObjectAddress, iFriendFlags);
        }

        public CSteamId GetFriendByIndex(int iFriend, EFriendFlags iFriendFlags)
        {
            ulong ret = 0;
            GetFunction<NativeGetFriendByIndexIe>(Functions.GetFriendByIndex8)(ObjectAddress, ref ret, iFriend,
                iFriendFlags);
            return new CSteamId(ret);
        }

        public int GetOnlineFriendCount()
        {
            return GetFunction<NativeGetOnlineFriendCount>(Functions.GetOnlineFriendCount9)(ObjectAddress);
        }

        public EFriendRelationship GetFriendRelationship(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetFriendRelationshipC>(Functions.GetFriendRelationship10)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public EPersonaState GetFriendPersonaState(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetFriendPersonaStateC>(Functions.GetFriendPersonaState11)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public string GetFriendPersonaName(CSteamId steamIdFriend)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetFriendPersonaNameC>(Functions.GetFriendPersonaName12)(ObjectAddress,
                            steamIdFriend.ConvertToUint64())));
        }

        public int GetSmallFriendAvatar(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetSmallFriendAvatarC>(Functions.GetSmallFriendAvatar13)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public int GetMediumFriendAvatar(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetMediumFriendAvatarC>(Functions.GetMediumFriendAvatar14)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public int GetLargeFriendAvatar(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetLargeFriendAvatarC>(Functions.GetLargeFriendAvatar15)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public void SetFriendRegValue(CSteamId steamIdFriend, string pchKey, string pchValue)
        {
            GetFunction<NativeSetFriendRegValueCss>(Functions.SetFriendRegValue16)(ObjectAddress,
                steamIdFriend.ConvertToUint64(), pchKey, pchValue);
        }

        public string GetFriendRegValue(CSteamId steamIdFriend, string pchKey)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetFriendRegValueCs>(Functions.GetFriendRegValue17)(ObjectAddress,
                            steamIdFriend.ConvertToUint64(), pchKey)));
        }

        public bool DeleteFriendRegValue(CSteamId steamId, string pchKey)
        {
            return GetFunction<NativeDeleteFriendRegValueCs>(Functions.DeleteFriendRegValue18)(ObjectAddress,
                steamId.ConvertToUint64(), pchKey);
        }

        public bool GetFriendGamePlayed(CSteamId steamId, ref FriendGameInfoT pGamePlayInfo)
        {
            return GetFunction<NativeGetFriendGamePlayedCf>(Functions.GetFriendGamePlayed19)(ObjectAddress,
                steamId.ConvertToUint64(), ref pGamePlayInfo);
        }

        public string GetFriendGamePlayedExtraInfo(CSteamId steamIdFriend)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetFriendGamePlayedExtraInfoC>(Functions.GetFriendGamePlayedExtraInfo20)(
                            ObjectAddress, steamIdFriend.ConvertToUint64())));
        }

        public CSteamId GetFriendGameServer(CSteamId steamIdFriend)
        {
            ulong ret = 0;
            GetFunction<NativeGetFriendGameServerC>(Functions.GetFriendGameServer21)(ObjectAddress, ref ret,
                steamIdFriend.ConvertToUint64());
            return new CSteamId(ret);
        }

        public EPersonaStateFlag GetFriendPersonaStateFlags(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetFriendPersonaStateFlagsC>(Functions.GetFriendPersonaStateFlags22)(
                ObjectAddress, steamIdFriend.ConvertToUint64());
        }

        public bool IsFriendGameOnConsole(CSteamId steamIdFriend)
        {
            return GetFunction<NativeIsFriendGameOnConsoleC>(Functions.IsFriendGameOnConsole23)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public FriendSessionStateInfoT GetFriendSessionStateInfo(CSteamId steamIdFriend)
        {
            var ret = new FriendSessionStateInfoT();
            GetFunction<NativeGetFriendSessionStateInfoC>(Functions.GetFriendSessionStateInfo24)(ObjectAddress, ref ret,
                steamIdFriend.ConvertToUint64());
            return ret;
        }

        public EUserRestriction GetFriendRestrictions(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetFriendRestrictionsC>(Functions.GetFriendRestrictions25)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public string GetFriendPersonaNameHistory(CSteamId steamIdFriend, int iPersonaName)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetFriendPersonaNameHistoryCi>(Functions.GetFriendPersonaNameHistory26)(
                            ObjectAddress, steamIdFriend.ConvertToUint64(), iPersonaName)));
        }

        public ulong RequestPersonaNameHistory(CSteamId steamIdFriend)
        {
            return GetFunction<NativeRequestPersonaNameHistoryC>(Functions.RequestPersonaNameHistory27)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public string GetFriendPersonaNameHistoryAndDate(CSteamId steamIdFriend, int iPersonaName, ref uint puTime)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetFriendPersonaNameHistoryAndDateCiu>(
                            Functions.GetFriendPersonaNameHistoryAndDate28)(ObjectAddress,
                                steamIdFriend.ConvertToUint64(), iPersonaName, ref puTime)));
        }

        public bool AddFriend(CSteamId steamId)
        {
            return GetFunction<NativeAddFriendC>(Functions.AddFriend29)(ObjectAddress, steamId.ConvertToUint64());
        }

        public bool RemoveFriend(CSteamId steamId)
        {
            return GetFunction<NativeRemoveFriendC>(Functions.RemoveFriend30)(ObjectAddress, steamId.ConvertToUint64());
        }

        public bool HasFriend(CSteamId steamId, EFriendFlags iFriendFlags)
        {
            return GetFunction<NativeHasFriendCe>(Functions.HasFriend31)(ObjectAddress, steamId.ConvertToUint64(),
                iFriendFlags);
        }

        public int AddFriendByName(string pchEmailOrAccountName)
        {
            return GetFunction<NativeAddFriendByNameS>(Functions.AddFriendByName32)(ObjectAddress, pchEmailOrAccountName);
        }

        public bool InviteFriendByEmail(string pchEmailAddress)
        {
            return GetFunction<NativeInviteFriendByEmailS>(Functions.InviteFriendByEmail33)(ObjectAddress,
                pchEmailAddress);
        }

        public bool RequestUserInformation(CSteamId steamIdUser, bool bRequireNameOnly)
        {
            return GetFunction<NativeRequestUserInformationCb>(Functions.RequestUserInformation34)(ObjectAddress,
                steamIdUser.ConvertToUint64(), bRequireNameOnly);
        }

        public bool SetIgnoreFriend(CSteamId steamIdFriend, bool bIgnore)
        {
            return GetFunction<NativeSetIgnoreFriendCb>(Functions.SetIgnoreFriend35)(ObjectAddress,
                steamIdFriend.ConvertToUint64(), bIgnore);
        }

        public bool ReportChatDeclined(CSteamId steamId)
        {
            return GetFunction<NativeReportChatDeclinedC>(Functions.ReportChatDeclined36)(ObjectAddress,
                steamId.ConvertToUint64());
        }

        public bool CreateFriendsGroup(string pchGroupName)
        {
            return GetFunction<NativeCreateFriendsGroupS>(Functions.CreateFriendsGroup37)(ObjectAddress, pchGroupName);
        }

        public bool DeleteFriendsGroup(short iGroupId)
        {
            return GetFunction<NativeDeleteFriendsGroupI>(Functions.DeleteFriendsGroup38)(ObjectAddress, iGroupId);
        }

        public bool RenameFriendsGroup(string pchNewGroupName, short iGroupId)
        {
            return GetFunction<NativeRenameFriendsGroupSi>(Functions.RenameFriendsGroup39)(ObjectAddress,
                pchNewGroupName, iGroupId);
        }

        public bool AddFriendToGroup(CSteamId steamId, short iGroupId)
        {
            return GetFunction<NativeAddFriendToGroupCi>(Functions.AddFriendToGroup40)(ObjectAddress,
                steamId.ConvertToUint64(), iGroupId);
        }

        public bool RemoveFriendFromGroup(CSteamId steamId, short iGroupId)
        {
            return GetFunction<NativeRemoveFriendFromGroupCi>(Functions.RemoveFriendFromGroup41)(ObjectAddress,
                steamId.ConvertToUint64(), iGroupId);
        }

        public bool IsFriendMemberOfFriendsGroup(CSteamId steamId, short iGroupId)
        {
            return
                GetFunction<NativeIsFriendMemberOfFriendsGroupCi>(Functions.IsFriendMemberOfFriendsGroup42)(
                    ObjectAddress, steamId.ConvertToUint64(), iGroupId);
        }

        public short GetFriendsGroupCount()
        {
            return GetFunction<NativeGetFriendsGroupCount>(Functions.GetFriendsGroupCount43)(ObjectAddress);
        }

        public short GetFriendsGroupIdByIndex(short iGroupIndex)
        {
            return GetFunction<NativeGetFriendsGroupIdByIndexI>(Functions.GetFriendsGroupIDByIndex44)(ObjectAddress,
                iGroupIndex);
        }

        public string GetFriendsGroupName(short iGroupId)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetFriendsGroupNameI>(Functions.GetFriendsGroupName45)(ObjectAddress, iGroupId)));
        }

        public short GetFriendsGroupMembershipCount(short iGroupId)
        {
            return
                GetFunction<NativeGetFriendsGroupMembershipCountI>(Functions.GetFriendsGroupMembershipCount46)(
                    ObjectAddress, iGroupId);
        }

        public CSteamId GetFirstFriendsGroupMember(short iGroupId)
        {
            ulong ret = 0;
            GetFunction<NativeGetFirstFriendsGroupMemberI>(Functions.GetFirstFriendsGroupMember47)(ObjectAddress,
                ref ret, iGroupId);
            return new CSteamId(ret);
        }

        public CSteamId GetNextFriendsGroupMember(short iGroupId)
        {
            ulong ret = 0;
            GetFunction<NativeGetNextFriendsGroupMemberI>(Functions.GetNextFriendsGroupMember48)(ObjectAddress, ref ret,
                iGroupId);
            return new CSteamId(ret);
        }

        public short GetGroupFriendsMembershipCount(CSteamId steamId)
        {
            return
                GetFunction<NativeGetGroupFriendsMembershipCountC>(Functions.GetGroupFriendsMembershipCount49)(
                    ObjectAddress, steamId.ConvertToUint64());
        }

        public short GetFirstGroupFriendsMember(CSteamId steamId)
        {
            return GetFunction<NativeGetFirstGroupFriendsMemberC>(Functions.GetFirstGroupFriendsMember50)(
                ObjectAddress, steamId.ConvertToUint64());
        }

        public short GetNextGroupFriendsMember(CSteamId steamId)
        {
            return GetFunction<NativeGetNextGroupFriendsMemberC>(Functions.GetNextGroupFriendsMember51)(ObjectAddress,
                steamId.ConvertToUint64());
        }

        public string GetPlayerNickname(CSteamId playerSteamId)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetPlayerNicknameC>(Functions.GetPlayerNickname52)(ObjectAddress,
                            playerSteamId.ConvertToUint64())));
        }

        public bool SetPlayerNickname(CSteamId playerSteamId, string cszNickname)
        {
            return GetFunction<NativeSetPlayerNicknameCs>(Functions.SetPlayerNickname53)(ObjectAddress,
                playerSteamId.ConvertToUint64(), cszNickname);
        }

        public uint GetFriendsSteamLevel(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetFriendsSteamLevelC>(Functions.GetFriendsSteamLevel54)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public int GetChatMessagesCount(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetChatMessagesCountC>(Functions.GetChatMessagesCount55)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public int GetChatMessage(CSteamId steamIdFriend, int iChatId, byte[] pvData, ref EChatEntryType peChatEntryType,
            ref CSteamId pSteamIdChatter, ref uint puTime)
        {
            ulong s0 = 0;
            var result = GetFunction<NativeGetChatMessageCibiecu>(Functions.GetChatMessage56)(ObjectAddress,
                steamIdFriend.ConvertToUint64(), iChatId, pvData, pvData.Length, ref peChatEntryType, ref s0, ref puTime);
            pSteamIdChatter = new CSteamId(s0);
            return result;
        }

        public bool SendMsgToFriend(CSteamId steamIdFriend, EChatEntryType eChatEntryType, byte[] pvMsgBody)
        {
            return GetFunction<NativeSendMsgToFriendCebi>(Functions.SendMsgToFriend57)(ObjectAddress,
                steamIdFriend.ConvertToUint64(), eChatEntryType, pvMsgBody, pvMsgBody.Length);
        }

        public void ClearChatHistory(CSteamId steamIdFriend)
        {
            GetFunction<NativeClearChatHistoryC>(Functions.ClearChatHistory58)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public int GetKnownClanCount()
        {
            return GetFunction<NativeGetKnownClanCount>(Functions.GetKnownClanCount59)(ObjectAddress);
        }

        public CSteamId GetKnownClanByIndex(int iClan)
        {
            ulong ret = 0;
            GetFunction<NativeGetKnownClanByIndexI>(Functions.GetKnownClanByIndex60)(ObjectAddress, ref ret, iClan);
            return new CSteamId(ret);
        }

        public int GetClanCount()
        {
            return GetFunction<NativeGetClanCount>(Functions.GetClanCount61)(ObjectAddress);
        }

        public CSteamId GetClanByIndex(int iClan)
        {
            ulong ret = 0;
            GetFunction<NativeGetClanByIndexI>(Functions.GetClanByIndex62)(ObjectAddress, ref ret, iClan);
            return new CSteamId(ret);
        }

        public string GetClanName(CSteamId steamIdClan)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(GetFunction<NativeGetClanNameC>(Functions.GetClanName63)(ObjectAddress,
                        steamIdClan.ConvertToUint64())));
        }

        public string GetClanTag(CSteamId steamIdClan)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(GetFunction<NativeGetClanTagC>(Functions.GetClanTag64)(ObjectAddress,
                        steamIdClan.ConvertToUint64())));
        }

        public bool GetFriendActivityCounts(ref int pnOnline, ref int pnInGame, bool bExcludeTaggedFriends)
        {
            return GetFunction<NativeGetFriendActivityCountsIib>(Functions.GetFriendActivityCounts65)(ObjectAddress,
                ref pnOnline, ref pnInGame, bExcludeTaggedFriends);
        }

        public bool GetClanActivityCounts(CSteamId steamId, ref int pnOnline, ref int pnInGame, ref int pnChatting)
        {
            return GetFunction<NativeGetClanActivityCountsCiii>(Functions.GetClanActivityCounts66)(ObjectAddress,
                steamId.ConvertToUint64(), ref pnOnline, ref pnInGame, ref pnChatting);
        }

        public ulong DownloadClanActivityCounts(ref CSteamId groupIDs, int nIds)
        {
            ulong s0 = 0;
            var result =
                GetFunction<NativeDownloadClanActivityCountsCi>(Functions.DownloadClanActivityCounts67)(ObjectAddress,
                    ref s0, nIds);
            groupIDs = new CSteamId(s0);
            return result;
        }

        public bool GetFriendsGroupActivityCounts(short iGroupId, ref int pnOnline, ref int pnInGame)
        {
            return
                GetFunction<NativeGetFriendsGroupActivityCountsIii>(Functions.GetFriendsGroupActivityCounts68)(
                    ObjectAddress, iGroupId, ref pnOnline, ref pnInGame);
        }

        public bool IsClanPublic(CSteamId steamId)
        {
            return GetFunction<NativeIsClanPublicC>(Functions.IsClanPublic69)(ObjectAddress, steamId.ConvertToUint64());
        }

        public bool IsClanLarge(CSteamId steamId)
        {
            return GetFunction<NativeIsClanLargeC>(Functions.IsClanLarge70)(ObjectAddress, steamId.ConvertToUint64());
        }

        public void SubscribeToPersonaStateFeed(CSteamId steamId, bool bSubscribed)
        {
            GetFunction<NativeSubscribeToPersonaStateFeedCb>(Functions.SubscribeToPersonaStateFeed71)(ObjectAddress,
                steamId.ConvertToUint64(), bSubscribed);
        }

        public ulong JoinClanChatRoom(CSteamId groupId)
        {
            return GetFunction<NativeJoinClanChatRoomC>(Functions.JoinClanChatRoom72)(ObjectAddress,
                groupId.ConvertToUint64());
        }

        public bool LeaveClanChatRoom(CSteamId groupId)
        {
            return GetFunction<NativeLeaveClanChatRoomC>(Functions.LeaveClanChatRoom73)(ObjectAddress,
                groupId.ConvertToUint64());
        }

        public int GetClanChatMemberCount(CSteamId groupId)
        {
            return GetFunction<NativeGetClanChatMemberCountC>(Functions.GetClanChatMemberCount74)(ObjectAddress,
                groupId.ConvertToUint64());
        }

        public CSteamId GetChatMemberByIndex(CSteamId groupId, int iIndex)
        {
            ulong ret = 0;
            GetFunction<NativeGetChatMemberByIndexCi>(Functions.GetChatMemberByIndex75)(ObjectAddress, ref ret,
                groupId.ConvertToUint64(), iIndex);
            return new CSteamId(ret);
        }

        public bool SendClanChatMessage(CSteamId groupId, string cszMessage)
        {
            return GetFunction<NativeSendClanChatMessageCs>(Functions.SendClanChatMessage76)(ObjectAddress,
                groupId.ConvertToUint64(), cszMessage);
        }

        public int GetClanChatMessage(CSteamId groupId, int iChatId, byte[] pvData, ref EChatEntryType peChatEntryType,
            ref CSteamId pSteamIdChatter)
        {
            ulong s0 = 0;
            var result = GetFunction<NativeGetClanChatMessageCibiec>(Functions.GetClanChatMessage77)(ObjectAddress,
                groupId.ConvertToUint64(), iChatId, pvData, pvData.Length, ref peChatEntryType, ref s0);
            pSteamIdChatter = new CSteamId(s0);
            return result;
        }

        public bool IsClanChatAdmin(CSteamId groupId, CSteamId userId)
        {
            return GetFunction<NativeIsClanChatAdminCc>(Functions.IsClanChatAdmin78)(ObjectAddress,
                groupId.ConvertToUint64(), userId.ConvertToUint64());
        }

        public bool IsClanChatWindowOpenInSteam(CSteamId groupId)
        {
            return
                GetFunction<NativeIsClanChatWindowOpenInSteamC>(Functions.IsClanChatWindowOpenInSteam79)(ObjectAddress,
                    groupId.ConvertToUint64());
        }

        public bool OpenClanChatWindowInSteam(CSteamId groupId)
        {
            return GetFunction<NativeOpenClanChatWindowInSteamC>(Functions.OpenClanChatWindowInSteam80)(ObjectAddress,
                groupId.ConvertToUint64());
        }

        public bool CloseClanChatWindowInSteam(CSteamId groupId)
        {
            return GetFunction<NativeCloseClanChatWindowInSteamC>(Functions.CloseClanChatWindowInSteam81)(
                ObjectAddress, groupId.ConvertToUint64());
        }

        public bool SetListenForFriendsMessages(bool bListen)
        {
            return
                GetFunction<NativeSetListenForFriendsMessagesB>(Functions.SetListenForFriendsMessages82)(ObjectAddress,
                    bListen);
        }

        public bool ReplyToFriendMessage(CSteamId friendId, string cszMessage)
        {
            return GetFunction<NativeReplyToFriendMessageCs>(Functions.ReplyToFriendMessage83)(ObjectAddress,
                friendId.ConvertToUint64(), cszMessage);
        }

        public int GetFriendMessage(CSteamId friendId, int iChatId, byte[] pvData, ref EChatEntryType peChatEntryType)
        {
            return GetFunction<NativeGetFriendMessageCibie>(Functions.GetFriendMessage84)(ObjectAddress,
                friendId.ConvertToUint64(), iChatId, pvData, pvData.Length, ref peChatEntryType);
        }

        public bool InviteFriendToClan(CSteamId steamIDfriend, CSteamId steamIDclan)
        {
            return GetFunction<NativeInviteFriendToClanCc>(Functions.InviteFriendToClan85)(ObjectAddress,
                steamIDfriend.ConvertToUint64(), steamIDclan.ConvertToUint64());
        }

        public bool AcknowledgeInviteToClan(CSteamId steamId, bool bAcceptOrDenyClanInvite)
        {
            return GetFunction<NativeAcknowledgeInviteToClanCb>(Functions.AcknowledgeInviteToClan86)(ObjectAddress,
                steamId.ConvertToUint64(), bAcceptOrDenyClanInvite);
        }

        public int GetFriendCountFromSource(CSteamId steamIdSource)
        {
            return GetFunction<NativeGetFriendCountFromSourceC>(Functions.GetFriendCountFromSource87)(ObjectAddress,
                steamIdSource.ConvertToUint64());
        }

        public CSteamId GetFriendFromSourceByIndex(CSteamId steamIdSource, int iFriend)
        {
            ulong ret = 0;
            GetFunction<NativeGetFriendFromSourceByIndexCi>(Functions.GetFriendFromSourceByIndex88)(ObjectAddress,
                ref ret, steamIdSource.ConvertToUint64(), iFriend);
            return new CSteamId(ret);
        }

        public bool IsUserInSource(CSteamId steamIdUser, CSteamId steamIdSource)
        {
            return GetFunction<NativeIsUserInSourceCc>(Functions.IsUserInSource89)(ObjectAddress,
                steamIdUser.ConvertToUint64(), steamIdSource.ConvertToUint64());
        }

        public int GetCoplayFriendCount()
        {
            return GetFunction<NativeGetCoplayFriendCount>(Functions.GetCoplayFriendCount90)(ObjectAddress);
        }

        public CSteamId GetCoplayFriend(int iCoplayEvent)
        {
            ulong ret = 0;
            GetFunction<NativeGetCoplayFriendI>(Functions.GetCoplayFriend91)(ObjectAddress, ref ret, iCoplayEvent);
            return new CSteamId(ret);
        }

        public uint GetFriendCoplayTime(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetFriendCoplayTimeC>(Functions.GetFriendCoplayTime92)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public uint GetFriendCoplayGame(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetFriendCoplayGameC>(Functions.GetFriendCoplayGame93)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public bool SetRichPresence(uint nAppId, string pchKey, string pchValue)
        {
            return GetFunction<NativeSetRichPresenceUss>(Functions.SetRichPresence94)(ObjectAddress, nAppId, pchKey,
                pchValue);
        }

        public void ClearRichPresence(uint nAppId)
        {
            GetFunction<NativeClearRichPresenceU>(Functions.ClearRichPresence95)(ObjectAddress, nAppId);
        }

        public string GetFriendRichPresence(uint nAppId, CSteamId steamIdFriend, string pchKey)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetFriendRichPresenceUcs>(Functions.GetFriendRichPresence96)(ObjectAddress,
                            nAppId, steamIdFriend.ConvertToUint64(), pchKey)));
        }

        public int GetFriendRichPresenceKeyCount(uint nAppId, CSteamId steamIdFriend)
        {
            return
                GetFunction<NativeGetFriendRichPresenceKeyCountUc>(Functions.GetFriendRichPresenceKeyCount97)(
                    ObjectAddress, nAppId, steamIdFriend.ConvertToUint64());
        }

        public string GetFriendRichPresenceKeyByIndex(uint nAppId, CSteamId steamIdFriend, int iIndex)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetFriendRichPresenceKeyByIndexUci>(
                            Functions.GetFriendRichPresenceKeyByIndex98)(ObjectAddress, nAppId,
                                steamIdFriend.ConvertToUint64(), iIndex)));
        }

        public void RequestFriendRichPresence(uint nAppId, CSteamId steamIdFriend)
        {
            GetFunction<NativeRequestFriendRichPresenceUc>(Functions.RequestFriendRichPresence99)(ObjectAddress, nAppId,
                steamIdFriend.ConvertToUint64());
        }

        public bool JoinChatRoom(CSteamId steamIdChat)
        {
            return GetFunction<NativeJoinChatRoomC>(Functions.JoinChatRoom100)(ObjectAddress,
                steamIdChat.ConvertToUint64());
        }

        public void LeaveChatRoom(CSteamId steamIdChat)
        {
            GetFunction<NativeLeaveChatRoomC>(Functions.LeaveChatRoom101)(ObjectAddress, steamIdChat.ConvertToUint64());
        }

        public bool InviteUserToChatRoom(CSteamId steamIdChat, CSteamId steamIdInvitee)
        {
            return GetFunction<NativeInviteUserToChatRoomCc>(Functions.InviteUserToChatRoom102)(ObjectAddress,
                steamIdChat.ConvertToUint64(), steamIdInvitee.ConvertToUint64());
        }

        public bool SendChatMsg(CSteamId steamIdChat, EChatEntryType eChatEntryType, byte[] pvMsgBody)
        {
            return GetFunction<NativeSendChatMsgCebi>(Functions.SendChatMsg103)(ObjectAddress,
                steamIdChat.ConvertToUint64(), eChatEntryType, pvMsgBody, pvMsgBody.Length);
        }

        public int GetChatRoomMessagesCount(CSteamId steamIdChat)
        {
            return GetFunction<NativeGetChatRoomMessagesCountC>(Functions.GetChatRoomMessagesCount104)(ObjectAddress,
                steamIdChat.ConvertToUint64());
        }

        public int GetChatRoomEntry(CSteamId steamIdChat, int iChatId, ref CSteamId steamIDuser, byte[] pvData,
            ref EChatEntryType peChatEntryType)
        {
            ulong s0 = 0;
            var result = GetFunction<NativeGetChatRoomEntryCicbie>(Functions.GetChatRoomEntry105)(ObjectAddress,
                steamIdChat.ConvertToUint64(), iChatId, ref s0, pvData, pvData.Length, ref peChatEntryType);
            steamIDuser = new CSteamId(s0);
            return result;
        }

        public void ClearChatRoomHistory(CSteamId steamId)
        {
            GetFunction<NativeClearChatRoomHistoryC>(Functions.ClearChatRoomHistory106)(ObjectAddress,
                steamId.ConvertToUint64());
        }

        public bool SerializeChatRoomDlg(CSteamId steamIdChat, byte[] pvHistory)
        {
            return GetFunction<NativeSerializeChatRoomDlgCbi>(Functions.SerializeChatRoomDlg107)(ObjectAddress,
                steamIdChat.ConvertToUint64(), pvHistory, pvHistory.Length);
        }

        public int GetSizeOfSerializedChatRoomDlg(CSteamId steamIdChat)
        {
            return
                GetFunction<NativeGetSizeOfSerializedChatRoomDlgC>(Functions.GetSizeOfSerializedChatRoomDlg108)(
                    ObjectAddress, steamIdChat.ConvertToUint64());
        }

        public bool GetSerializedChatRoomDlg(CSteamId steamIdChat, byte[] pvHistory, ref int pcubData)
        {
            return GetFunction<NativeGetSerializedChatRoomDlgCbii>(Functions.GetSerializedChatRoomDlg109)(
                ObjectAddress, steamIdChat.ConvertToUint64(), pvHistory, pvHistory.Length, ref pcubData);
        }

        public bool ClearSerializedChatRoomDlg(CSteamId steamIdChat)
        {
            return GetFunction<NativeClearSerializedChatRoomDlgC>(Functions.ClearSerializedChatRoomDlg110)(
                ObjectAddress, steamIdChat.ConvertToUint64());
        }

        public bool KickChatMember(CSteamId steamIdChat, CSteamId steamIdUserToActOn)
        {
            return GetFunction<NativeKickChatMemberCc>(Functions.KickChatMember111)(ObjectAddress,
                steamIdChat.ConvertToUint64(), steamIdUserToActOn.ConvertToUint64());
        }

        public bool BanChatMember(CSteamId steamIdChat, CSteamId steamIdUserToActOn)
        {
            return GetFunction<NativeBanChatMemberCc>(Functions.BanChatMember112)(ObjectAddress,
                steamIdChat.ConvertToUint64(), steamIdUserToActOn.ConvertToUint64());
        }

        public bool UnBanChatMember(CSteamId steamIdChat, CSteamId steamIdUserToActOn)
        {
            return GetFunction<NativeUnBanChatMemberCc>(Functions.UnBanChatMember113)(ObjectAddress,
                steamIdChat.ConvertToUint64(), steamIdUserToActOn.ConvertToUint64());
        }

        public bool SetChatRoomType(CSteamId steamIdChat, ELobbyType eLobbyType)
        {
            return GetFunction<NativeSetChatRoomTypeCe>(Functions.SetChatRoomType114)(ObjectAddress,
                steamIdChat.ConvertToUint64(), eLobbyType);
        }

        public bool GetChatRoomLockState(CSteamId steamIdChat, ref bool pbLocked)
        {
            return GetFunction<NativeGetChatRoomLockStateCb>(Functions.GetChatRoomLockState115)(ObjectAddress,
                steamIdChat.ConvertToUint64(), ref pbLocked);
        }

        public bool GetChatRoomPermissions(CSteamId steamIdChat, ref uint prgfChatRoomPermissions)
        {
            return GetFunction<NativeGetChatRoomPermissionsCu>(Functions.GetChatRoomPermissions116)(ObjectAddress,
                steamIdChat.ConvertToUint64(), ref prgfChatRoomPermissions);
        }

        public bool SetChatRoomModerated(CSteamId steamIdChat, bool bModerated)
        {
            return GetFunction<NativeSetChatRoomModeratedCb>(Functions.SetChatRoomModerated117)(ObjectAddress,
                steamIdChat.ConvertToUint64(), bModerated);
        }

        public bool BChatRoomModerated(CSteamId steamIdChat)
        {
            return GetFunction<NativeBChatRoomModeratedC>(Functions.BChatRoomModerated118)(ObjectAddress,
                steamIdChat.ConvertToUint64());
        }

        public bool NotifyChatRoomDlgsOfUiChange(CSteamId steamIdChat, bool bShowAvatars, bool bBeepOnNewMsg,
            bool bShowSteamIDs, bool bShowTimestampOnNewMsg)
        {
            return
                GetFunction<NativeNotifyChatRoomDlgsOfUiChangeCbbbb>(Functions.NotifyChatRoomDlgsOfUIChange119)(
                    ObjectAddress, steamIdChat.ConvertToUint64(), bShowAvatars, bBeepOnNewMsg, bShowSteamIDs,
                    bShowTimestampOnNewMsg);
        }

        public bool TerminateChatRoom(CSteamId steamIdChat)
        {
            return GetFunction<NativeTerminateChatRoomC>(Functions.TerminateChatRoom120)(ObjectAddress,
                steamIdChat.ConvertToUint64());
        }

        public int GetChatRoomCount()
        {
            return GetFunction<NativeGetChatRoomCount>(Functions.GetChatRoomCount121)(ObjectAddress);
        }

        public CSteamId GetChatRoomByIndex(int iChatRoom)
        {
            ulong ret = 0;
            GetFunction<NativeGetChatRoomByIndexI>(Functions.GetChatRoomByIndex122)(ObjectAddress, ref ret, iChatRoom);
            return new CSteamId(ret);
        }

        public string GetChatRoomName(CSteamId steamIdChat)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetChatRoomNameC>(Functions.GetChatRoomName123)(ObjectAddress,
                            steamIdChat.ConvertToUint64())));
        }

        public bool BGetChatRoomMemberDetails(CSteamId steamIdChat, CSteamId steamIdUser, ref uint prgfChatMemberDetails,
            ref uint prgfChatMemberDetailsLocal)
        {
            return
                GetFunction<NativeBGetChatRoomMemberDetailsCcuu>(Functions.BGetChatRoomMemberDetails124)(ObjectAddress,
                    steamIdChat.ConvertToUint64(), steamIdUser.ConvertToUint64(), ref prgfChatMemberDetails,
                    ref prgfChatMemberDetailsLocal);
        }

        public void CreateChatRoom(EChatRoomType eType, ulong ulGameId, string pchName, ELobbyType eLobbyType,
            CSteamId steamIdClan, CSteamId steamIdFriendChat, CSteamId steamIdInvited, uint rgfChatPermissionOfficer,
            uint rgfChatPermissionMember, uint rgfChatPermissionAll)
        {
            GetFunction<NativeCreateChatRoomEusecccuuu>(Functions.CreateChatRoom125)(ObjectAddress, eType, ulGameId,
                pchName, eLobbyType, steamIdClan.ConvertToUint64(), steamIdFriendChat.ConvertToUint64(),
                steamIdInvited.ConvertToUint64(), rgfChatPermissionOfficer, rgfChatPermissionMember,
                rgfChatPermissionAll);
        }

        public void VoiceCall(CSteamId steamIdLocalPeer, CSteamId steamIdRemotePeer)
        {
            GetFunction<NativeVoiceCallCc>(Functions.VoiceCall126)(ObjectAddress, steamIdLocalPeer.ConvertToUint64(),
                steamIdRemotePeer.ConvertToUint64());
        }

        public void VoiceHangUp(int hVoiceCall)
        {
            GetFunction<NativeVoiceHangUpI>(Functions.VoiceHangUp127)(ObjectAddress, hVoiceCall);
        }

        public void SetVoiceSpeakerVolume(float flVolume)
        {
            GetFunction<NativeSetVoiceSpeakerVolumeF>(Functions.SetVoiceSpeakerVolume128)(ObjectAddress, flVolume);
        }

        public void SetVoiceMicrophoneVolume(float flVolume)
        {
            GetFunction<NativeSetVoiceMicrophoneVolumeF>(Functions.SetVoiceMicrophoneVolume129)(ObjectAddress, flVolume);
        }

        public void SetAutoAnswer(bool bAutoAnswer)
        {
            GetFunction<NativeSetAutoAnswerB>(Functions.SetAutoAnswer130)(ObjectAddress, bAutoAnswer);
        }

        public void VoiceAnswer(int hVoiceCall)
        {
            GetFunction<NativeVoiceAnswerI>(Functions.VoiceAnswer131)(ObjectAddress, hVoiceCall);
        }

        public void VoicePutOnHold(int hVoiceCall, bool bLocalHold)
        {
            GetFunction<NativeVoicePutOnHoldIb>(Functions.VoicePutOnHold132)(ObjectAddress, hVoiceCall, bLocalHold);
        }

        public bool BVoiceIsLocalOnHold(int hVoiceCall)
        {
            return GetFunction<NativeBVoiceIsLocalOnHoldI>(Functions.BVoiceIsLocalOnHold133)(ObjectAddress, hVoiceCall);
        }

        public bool BVoiceIsRemoteOnHold(int hVoiceCall)
        {
            return GetFunction<NativeBVoiceIsRemoteOnHoldI>(Functions.BVoiceIsRemoteOnHold134)(ObjectAddress, hVoiceCall);
        }

        public void SetDoNotDisturb(bool bDoNotDisturb)
        {
            GetFunction<NativeSetDoNotDisturbB>(Functions.SetDoNotDisturb135)(ObjectAddress, bDoNotDisturb);
        }

        public void EnableVoiceNotificationSounds(bool bEnable)
        {
            GetFunction<NativeEnableVoiceNotificationSoundsB>(Functions.EnableVoiceNotificationSounds136)(
                ObjectAddress, bEnable);
        }

        public void SetPushToTalkEnabled(bool bEnable)
        {
            GetFunction<NativeSetPushToTalkEnabledB>(Functions.SetPushToTalkEnabled137)(ObjectAddress, bEnable);
        }

        public bool IsPushToTalkEnabled()
        {
            return GetFunction<NativeIsPushToTalkEnabled>(Functions.IsPushToTalkEnabled138)(ObjectAddress);
        }

        public void SetPushToTalkKey(int nVirtualKey)
        {
            GetFunction<NativeSetPushToTalkKeyI>(Functions.SetPushToTalkKey139)(ObjectAddress, nVirtualKey);
        }

        public int GetPushToTalkKey()
        {
            return GetFunction<NativeGetPushToTalkKey>(Functions.GetPushToTalkKey140)(ObjectAddress);
        }

        public bool IsPushToTalkKeyDown()
        {
            return GetFunction<NativeIsPushToTalkKeyDown>(Functions.IsPushToTalkKeyDown141)(ObjectAddress);
        }

        public void EnableVoiceCalibration(bool bState)
        {
            GetFunction<NativeEnableVoiceCalibrationB>(Functions.EnableVoiceCalibration142)(ObjectAddress, bState);
        }

        public bool IsVoiceCalibrating()
        {
            return GetFunction<NativeIsVoiceCalibrating>(Functions.IsVoiceCalibrating143)(ObjectAddress);
        }

        public float GetVoiceCalibrationSamplePeak()
        {
            return
                GetFunction<NativeGetVoiceCalibrationSamplePeak>(Functions.GetVoiceCalibrationSamplePeak144)(
                    ObjectAddress);
        }

        public void SetMicBoost(bool bBoost)
        {
            GetFunction<NativeSetMicBoostB>(Functions.SetMicBoost145)(ObjectAddress, bBoost);
        }

        public bool GetMicBoost()
        {
            return GetFunction<NativeGetMicBoost>(Functions.GetMicBoost146)(ObjectAddress);
        }

        public bool HasHardwareMicBoost()
        {
            return GetFunction<NativeHasHardwareMicBoost>(Functions.HasHardwareMicBoost147)(ObjectAddress);
        }

        public string GetMicDeviceName()
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetMicDeviceName>(Functions.GetMicDeviceName148)(ObjectAddress)));
        }

        public void StartTalking(int hVoiceCall)
        {
            GetFunction<NativeStartTalkingI>(Functions.StartTalking149)(ObjectAddress, hVoiceCall);
        }

        public void EndTalking(int hVoiceCall)
        {
            GetFunction<NativeEndTalkingI>(Functions.EndTalking150)(ObjectAddress, hVoiceCall);
        }

        public bool VoiceIsValid(int hVoiceCall)
        {
            return GetFunction<NativeVoiceIsValidI>(Functions.VoiceIsValid151)(ObjectAddress, hVoiceCall);
        }

        public void SetAutoReflectVoice(bool bState)
        {
            GetFunction<NativeSetAutoReflectVoiceB>(Functions.SetAutoReflectVoice152)(ObjectAddress, bState);
        }

        public ECallState GetCallState(int hVoiceCall)
        {
            return GetFunction<NativeGetCallStateI>(Functions.GetCallState153)(ObjectAddress, hVoiceCall);
        }

        public float GetVoiceMicrophoneVolume()
        {
            return GetFunction<NativeGetVoiceMicrophoneVolume>(Functions.GetVoiceMicrophoneVolume154)(ObjectAddress);
        }

        public float GetVoiceSpeakerVolume()
        {
            return GetFunction<NativeGetVoiceSpeakerVolume>(Functions.GetVoiceSpeakerVolume155)(ObjectAddress);
        }

        public float TimeSinceLastVoiceDataReceived(int hVoiceCall)
        {
            return
                GetFunction<NativeTimeSinceLastVoiceDataReceivedI>(Functions.TimeSinceLastVoiceDataReceived156)(
                    ObjectAddress, hVoiceCall);
        }

        public float TimeSinceLastVoiceDataSend(int hVoiceCall)
        {
            return GetFunction<NativeTimeSinceLastVoiceDataSendI>(Functions.TimeSinceLastVoiceDataSend157)(
                ObjectAddress, hVoiceCall);
        }

        public bool BCanSend(int hVoiceCall)
        {
            return GetFunction<NativeBCanSendI>(Functions.BCanSend158)(ObjectAddress, hVoiceCall);
        }

        public bool BCanReceive(int hVoiceCall)
        {
            return GetFunction<NativeBCanReceiveI>(Functions.BCanReceive159)(ObjectAddress, hVoiceCall);
        }

        public float GetEstimatedBitsPerSecond(int hVoiceCall, bool bIncoming)
        {
            return GetFunction<NativeGetEstimatedBitsPerSecondIb>(Functions.GetEstimatedBitsPerSecond160)(
                ObjectAddress, hVoiceCall, bIncoming);
        }

        public float GetPeakSample(int hVoiceCall, bool bIncoming)
        {
            return GetFunction<NativeGetPeakSampleIb>(Functions.GetPeakSample161)(ObjectAddress, hVoiceCall, bIncoming);
        }

        public void SendResumeRequest(int hVoiceCall)
        {
            GetFunction<NativeSendResumeRequestI>(Functions.SendResumeRequest162)(ObjectAddress, hVoiceCall);
        }

        public void OpenChatDialog(CSteamId steamId)
        {
            GetFunction<NativeOpenChatDialogC>(Functions.OpenChatDialog163)(ObjectAddress, steamId.ConvertToUint64());
        }

        public void StartChatRoomVoiceSpeaking(CSteamId steamIdChat, CSteamId steamIdMember)
        {
            GetFunction<NativeStartChatRoomVoiceSpeakingCc>(Functions.StartChatRoomVoiceSpeaking164)(ObjectAddress,
                steamIdChat.ConvertToUint64(), steamIdMember.ConvertToUint64());
        }

        public void EndChatRoomVoiceSpeaking(CSteamId steamIdChat, CSteamId steamIdMember)
        {
            GetFunction<NativeEndChatRoomVoiceSpeakingCc>(Functions.EndChatRoomVoiceSpeaking165)(ObjectAddress,
                steamIdChat.ConvertToUint64(), steamIdMember.ConvertToUint64());
        }

        public uint GetFriendLastLogonTime(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetFriendLastLogonTimeC>(Functions.GetFriendLastLogonTime166)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public uint GetFriendLastLogoffTime(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetFriendLastLogoffTimeC>(Functions.GetFriendLastLogoffTime167)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public int GetChatRoomVoiceTotalSlotCount(CSteamId steamIdChat)
        {
            return
                GetFunction<NativeGetChatRoomVoiceTotalSlotCountC>(Functions.GetChatRoomVoiceTotalSlotCount168)(
                    ObjectAddress, steamIdChat.ConvertToUint64());
        }

        public int GetChatRoomVoiceUsedSlotCount(CSteamId steamIdChat)
        {
            return
                GetFunction<NativeGetChatRoomVoiceUsedSlotCountC>(Functions.GetChatRoomVoiceUsedSlotCount169)(
                    ObjectAddress, steamIdChat.ConvertToUint64());
        }

        public CSteamId GetChatRoomVoiceUsedSlot(CSteamId steamIdChat, int iSlot)
        {
            ulong ret = 0;
            GetFunction<NativeGetChatRoomVoiceUsedSlotCi>(Functions.GetChatRoomVoiceUsedSlot170)(ObjectAddress, ref ret,
                steamIdChat.ConvertToUint64(), iSlot);
            return new CSteamId(ret);
        }

        public EChatRoomVoiceStatus GetChatRoomVoiceStatus(CSteamId steamIdChat, CSteamId steamIdSpeaker)
        {
            return GetFunction<NativeGetChatRoomVoiceStatusCc>(Functions.GetChatRoomVoiceStatus171)(ObjectAddress,
                steamIdChat.ConvertToUint64(), steamIdSpeaker.ConvertToUint64());
        }

        public bool BChatRoomHasAvailableVoiceSlots(CSteamId steamIdChat)
        {
            return
                GetFunction<NativeBChatRoomHasAvailableVoiceSlotsC>(Functions.BChatRoomHasAvailableVoiceSlots172)(
                    ObjectAddress, steamIdChat.ConvertToUint64());
        }

        public bool BIsChatRoomVoiceSpeaking(CSteamId steamIdChat, CSteamId steamIdSpeaker)
        {
            return GetFunction<NativeBIsChatRoomVoiceSpeakingCc>(Functions.BIsChatRoomVoiceSpeaking173)(ObjectAddress,
                steamIdChat.ConvertToUint64(), steamIdSpeaker.ConvertToUint64());
        }

        public float GetChatRoomPeakSample(CSteamId steamIdChat, CSteamId steamIdSpeaker, bool bIncoming)
        {
            return GetFunction<NativeGetChatRoomPeakSampleCcb>(Functions.GetChatRoomPeakSample174)(ObjectAddress,
                steamIdChat.ConvertToUint64(), steamIdSpeaker.ConvertToUint64(), bIncoming);
        }

        public void ChatRoomVoiceRetryConnections(CSteamId steamIdChat)
        {
            GetFunction<NativeChatRoomVoiceRetryConnectionsC>(Functions.ChatRoomVoiceRetryConnections175)(
                ObjectAddress, steamIdChat.ConvertToUint64());
        }

        public void SetPortTypes(uint unFlags)
        {
            GetFunction<NativeSetPortTypesU>(Functions.SetPortTypes176)(ObjectAddress, unFlags);
        }

        public void ReinitAudio()
        {
            GetFunction<NativeReinitAudio>(Functions.ReinitAudio177)(ObjectAddress);
        }

        public void SetInGameVoiceSpeaking(CSteamId steamIdUser, bool bSpeaking)
        {
            GetFunction<NativeSetInGameVoiceSpeakingCb>(Functions.SetInGameVoiceSpeaking178)(ObjectAddress,
                steamIdUser.ConvertToUint64(), bSpeaking);
        }

        public bool IsInGameVoiceSpeaking()
        {
            return GetFunction<NativeIsInGameVoiceSpeaking>(Functions.IsInGameVoiceSpeaking179)(ObjectAddress);
        }

        public void ActivateGameOverlay(string pchDialog)
        {
            GetFunction<NativeActivateGameOverlayS>(Functions.ActivateGameOverlay180)(ObjectAddress, pchDialog);
        }

        public void ActivateGameOverlayToUser(string pchDialog, CSteamId steamId)
        {
            GetFunction<NativeActivateGameOverlayToUserSc>(Functions.ActivateGameOverlayToUser181)(ObjectAddress,
                pchDialog, steamId.ConvertToUint64());
        }

        public void ActivateGameOverlayToWebPage(string pchUrl)
        {
            GetFunction<NativeActivateGameOverlayToWebPageS>(Functions.ActivateGameOverlayToWebPage182)(ObjectAddress,
                pchUrl);
        }

        public void ActivateGameOverlayToStore(uint nAppId, EOverlayToStoreFlag eFlag)
        {
            GetFunction<NativeActivateGameOverlayToStoreUe>(Functions.ActivateGameOverlayToStore183)(ObjectAddress,
                nAppId, eFlag);
        }

        public void ActivateGameOverlayInviteDialog(CSteamId steamIdLobby)
        {
            GetFunction<NativeActivateGameOverlayInviteDialogC>(Functions.ActivateGameOverlayInviteDialog184)(
                ObjectAddress, steamIdLobby.ConvertToUint64());
        }

        public void NotifyGameOverlayStateChanged(bool bActive)
        {
            GetFunction<NativeNotifyGameOverlayStateChangedB>(Functions.NotifyGameOverlayStateChanged185)(
                ObjectAddress, bActive);
        }

        public void NotifyGameServerChangeRequested(string pchServerAddress, string pchPassword)
        {
            GetFunction<NativeNotifyGameServerChangeRequestedSs>(Functions.NotifyGameServerChangeRequested186)(
                ObjectAddress, pchServerAddress, pchPassword);
        }

        public bool NotifyLobbyJoinRequested(uint nAppId, CSteamId steamIdLobby, CSteamId steamIdFriend)
        {
            return GetFunction<NativeNotifyLobbyJoinRequestedUcc>(Functions.NotifyLobbyJoinRequested187)(ObjectAddress,
                nAppId, steamIdLobby.ConvertToUint64(), steamIdFriend.ConvertToUint64());
        }

        public bool NotifyRichPresenceJoinRequested(uint nAppId, CSteamId steamIdFriend, string pchConnectString)
        {
            return
                GetFunction<NativeNotifyRichPresenceJoinRequestedUcs>(Functions.NotifyRichPresenceJoinRequested188)(
                    ObjectAddress, nAppId, steamIdFriend.ConvertToUint64(), pchConnectString);
        }

        public EClanRelationship GetClanRelationship(CSteamId steamIDclan)
        {
            return GetFunction<NativeGetClanRelationshipC>(Functions.GetClanRelationship189)(ObjectAddress,
                steamIDclan.ConvertToUint64());
        }

        public EClanRank GetFriendClanRank(CSteamId steamIdUser, CSteamId steamIdClan)
        {
            return GetFunction<NativeGetFriendClanRankCc>(Functions.GetFriendClanRank190)(ObjectAddress,
                steamIdUser.ConvertToUint64(), steamIdClan.ConvertToUint64());
        }

        public bool VoiceIsAvailable()
        {
            return GetFunction<NativeVoiceIsAvailable>(Functions.VoiceIsAvailable191)(ObjectAddress);
        }

        public void TestVoiceDisconnect(int hVoiceCall)
        {
            GetFunction<NativeTestVoiceDisconnectI>(Functions.TestVoiceDisconnect192)(ObjectAddress, hVoiceCall);
        }

        public void TestChatRoomPeerDisconnect(CSteamId steamIdChat, CSteamId steamIdSpeaker)
        {
            GetFunction<NativeTestChatRoomPeerDisconnectCc>(Functions.TestChatRoomPeerDisconnect193)(ObjectAddress,
                steamIdChat.ConvertToUint64(), steamIdSpeaker.ConvertToUint64());
        }

        public void TestVoicePacketLoss(float flFractionOfIncomingPacketsToDrop)
        {
            GetFunction<NativeTestVoicePacketLossF>(Functions.TestVoicePacketLoss194)(ObjectAddress,
                flFractionOfIncomingPacketsToDrop);
        }

        public int FindFriendVoiceChatHandle(CSteamId steamIdFriend)
        {
            return GetFunction<NativeFindFriendVoiceChatHandleC>(Functions.FindFriendVoiceChatHandle195)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public void RequestFriendsWhoPlayGame(CGameId gameId)
        {
            GetFunction<NativeRequestFriendsWhoPlayGameC>(Functions.RequestFriendsWhoPlayGame196)(ObjectAddress,
                gameId.ConvertToUint64());
        }

        public uint GetCountFriendsWhoPlayGame(CGameId gameId)
        {
            return GetFunction<NativeGetCountFriendsWhoPlayGameC>(Functions.GetCountFriendsWhoPlayGame197)(
                ObjectAddress, gameId.ConvertToUint64());
        }

        public CSteamId GetFriendWhoPlaysGame(uint iIndex, CGameId gameId)
        {
            ulong ret = 0;
            GetFunction<NativeGetFriendWhoPlaysGameUc>(Functions.GetFriendWhoPlaysGame198)(ObjectAddress, ref ret,
                iIndex, gameId.ConvertToUint64());
            return new CSteamId(ret);
        }

        public void SetPlayedWith(CSteamId steamIdUserPlayedWith)
        {
            GetFunction<NativeSetPlayedWithC>(Functions.SetPlayedWith199)(ObjectAddress,
                steamIdUserPlayedWith.ConvertToUint64());
        }

        public ulong RequestClanOfficerList(CSteamId steamIdClan)
        {
            return GetFunction<NativeRequestClanOfficerListC>(Functions.RequestClanOfficerList200)(ObjectAddress,
                steamIdClan.ConvertToUint64());
        }

        public CSteamId GetClanOwner(CSteamId steamIdClan)
        {
            ulong ret = 0;
            GetFunction<NativeGetClanOwnerC>(Functions.GetClanOwner201)(ObjectAddress, ref ret,
                steamIdClan.ConvertToUint64());
            return new CSteamId(ret);
        }

        public int GetClanOfficerCount(CSteamId steamIdClan)
        {
            return GetFunction<NativeGetClanOfficerCountC>(Functions.GetClanOfficerCount202)(ObjectAddress,
                steamIdClan.ConvertToUint64());
        }

        public CSteamId GetClanOfficerByIndex(CSteamId steamIdClan, int iOfficer)
        {
            ulong ret = 0;
            GetFunction<NativeGetClanOfficerByIndexCi>(Functions.GetClanOfficerByIndex203)(ObjectAddress, ref ret,
                steamIdClan.ConvertToUint64(), iOfficer);
            return new CSteamId(ret);
        }

        public EUserRestriction GetUserRestrictions()
        {
            return GetFunction<NativeGetUserRestrictions>(Functions.GetUserRestrictions204)(ObjectAddress);
        }

        public ulong RequestFriendProfileInfo(CSteamId steamIdFriend)
        {
            return GetFunction<NativeRequestFriendProfileInfoC>(Functions.RequestFriendProfileInfo205)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public string GetFriendProfileInfo(CSteamId steamIdFriend, string pchKey)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetFriendProfileInfoCs>(Functions.GetFriendProfileInfo206)(ObjectAddress,
                            steamIdFriend.ConvertToUint64(), pchKey)));
        }

        public bool InviteUserToGame(CSteamId steamIdFriend, string pchConnectString)
        {
            return GetFunction<NativeInviteUserToGameCs>(Functions.InviteUserToGame207)(ObjectAddress,
                steamIdFriend.ConvertToUint64(), pchConnectString);
        }

        public int GetOnlineConsoleFriendCount()
        {
            return
                GetFunction<NativeGetOnlineConsoleFriendCount>(Functions.GetOnlineConsoleFriendCount208)(ObjectAddress);
        }

        public ulong RequestTrade(CSteamId steamIdPartner)
        {
            return GetFunction<NativeRequestTradeC>(Functions.RequestTrade209)(ObjectAddress,
                steamIdPartner.ConvertToUint64());
        }

        public void TradeResponse(uint unTradeRequestId, bool bAccept)
        {
            GetFunction<NativeTradeResponseUb>(Functions.TradeResponse210)(ObjectAddress, unTradeRequestId, bAccept);
        }

        public void CancelTradeRequest(CSteamId steamIdPartner)
        {
            GetFunction<NativeCancelTradeRequestC>(Functions.CancelTradeRequest211)(ObjectAddress,
                steamIdPartner.ConvertToUint64());
        }

        public bool HideFriend(CSteamId steamIdFriend, bool bHide)
        {
            return GetFunction<NativeHideFriendCb>(Functions.HideFriend212)(ObjectAddress,
                steamIdFriend.ConvertToUint64(), bHide);
        }

        public string GetFriendFacebookName(CSteamId steamIdFriend)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetFriendFacebookNameC>(Functions.GetFriendFacebookName213)(ObjectAddress,
                            steamIdFriend.ConvertToUint64())));
        }

        public ulong GetFriendFacebookId(CSteamId steamIdFriend)
        {
            return GetFunction<NativeGetFriendFacebookIdc>(Functions.GetFriendFacebookID214)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public ulong GetFollowerCount(CSteamId steamId)
        {
            return GetFunction<NativeGetFollowerCountC>(Functions.GetFollowerCount215)(ObjectAddress,
                steamId.ConvertToUint64());
        }

        public ulong IsFollowing(CSteamId steamId)
        {
            return GetFunction<NativeIsFollowingC>(Functions.IsFollowing216)(ObjectAddress, steamId.ConvertToUint64());
        }

        public ulong EnumerateFollowingList(uint uStartIndex)
        {
            return GetFunction<NativeEnumerateFollowingListU>(Functions.EnumerateFollowingList217)(ObjectAddress,
                uStartIndex);
        }

        public void RequestFriendMessageHistory(CSteamId steamIdFriend)
        {
            GetFunction<NativeRequestFriendMessageHistoryC>(Functions.RequestFriendMessageHistory218)(ObjectAddress,
                steamIdFriend.ConvertToUint64());
        }

        public void RequestFriendMessageHistoryForOfflineMessages()
        {
            GetFunction<NativeRequestFriendMessageHistoryForOfflineMessages>(
                Functions.RequestFriendMessageHistoryForOfflineMessages219)(ObjectAddress);
        }

        public int GetCountFriendsWithOfflineMessages()
        {
            return
                GetFunction<NativeGetCountFriendsWithOfflineMessages>(Functions.GetCountFriendsWithOfflineMessages220)(
                    ObjectAddress);
        }

        public uint GetFriendWithOfflineMessage(int iFriend)
        {
            return
                GetFunction<NativeGetFriendWithOfflineMessageI>(Functions.GetFriendWithOfflineMessage221)(
                    ObjectAddress, iFriend);
        }

        public void ClearFriendHasOfflineMessage(uint uFriend)
        {
            GetFunction<NativeClearFriendHasOfflineMessageU>(Functions.ClearFriendHasOfflineMessage222)(ObjectAddress,
                uFriend);
        }

        public void RequestEmoticonList()
        {
            GetFunction<NativeRequestEmoticonList>(Functions.RequestEmoticonList223)(ObjectAddress);
        }

        public int GetEmoticonCount()
        {
            return GetFunction<NativeGetEmoticonCount>(Functions.GetEmoticonCount224)(ObjectAddress);
        }

        public string GetEmoticonName(int iEmoticon)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetEmoticonNameI>(Functions.GetEmoticonName225)(ObjectAddress, iEmoticon)));
        }

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetPersonaName(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetPersonaNameS(IntPtr thisptr, string pchPersonaName);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeSetPersonaNameExSb(
            IntPtr thisptr, string pchPersonaName, [MarshalAs(UnmanagedType.I1)] bool bSendCallback);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsPersonaNameSet(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EPersonaState NativeGetPersonaState(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetPersonaStateE(IntPtr thisptr, EPersonaState ePersonaState);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeNotifyUiOfMenuChangeBbbb(
            IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bShowAvatars,
            [MarshalAs(UnmanagedType.I1)] bool bSortByName, [MarshalAs(UnmanagedType.I1)] bool bShowOnlineOnly,
            [MarshalAs(UnmanagedType.I1)] bool bShowUntaggedFriends);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetFriendCountE(IntPtr thisptr, EFriendFlags iFriendFlags);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetFriendByIndexIe(
            IntPtr thisptr, ref ulong retarg, int iFriend, EFriendFlags iFriendFlags);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetOnlineFriendCount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EFriendRelationship NativeGetFriendRelationshipC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EPersonaState NativeGetFriendPersonaStateC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetFriendPersonaNameC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetSmallFriendAvatarC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetMediumFriendAvatarC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetLargeFriendAvatarC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetFriendRegValueCss(
            IntPtr thisptr, ulong steamIdFriend, string pchKey, string pchValue);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetFriendRegValueCs(IntPtr thisptr, ulong steamIdFriend, string pchKey);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeDeleteFriendRegValueCs(IntPtr thisptr, ulong steamId, string pchKey);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetFriendGamePlayedCf(
            IntPtr thisptr, ulong steamId, ref FriendGameInfoT pGamePlayInfo);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetFriendGamePlayedExtraInfoC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetFriendGameServerC(IntPtr thisptr, ref ulong retarg, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EPersonaStateFlag NativeGetFriendPersonaStateFlagsC(IntPtr thisptr, ulong steamIdFriend);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsFriendGameOnConsoleC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetFriendSessionStateInfoC(
            IntPtr thisptr, ref FriendSessionStateInfoT retarg, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EUserRestriction NativeGetFriendRestrictionsC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetFriendPersonaNameHistoryCi(
            IntPtr thisptr, ulong steamIdFriend, int iPersonaName);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeRequestPersonaNameHistoryC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetFriendPersonaNameHistoryAndDateCiu(
            IntPtr thisptr, ulong steamIdFriend, int iPersonaName, ref uint puTime);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeAddFriendC(IntPtr thisptr, ulong steamId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeRemoveFriendC(IntPtr thisptr, ulong steamId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeHasFriendCe(IntPtr thisptr, ulong steamId, EFriendFlags iFriendFlags);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeAddFriendByNameS(IntPtr thisptr, string pchEmailOrAccountName);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeInviteFriendByEmailS(IntPtr thisptr, string pchEmailAddress);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeRequestUserInformationCb(
            IntPtr thisptr, ulong steamIdUser, [MarshalAs(UnmanagedType.I1)] bool bRequireNameOnly);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetIgnoreFriendCb(
            IntPtr thisptr, ulong steamIdFriend, [MarshalAs(UnmanagedType.I1)] bool bIgnore);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeReportChatDeclinedC(IntPtr thisptr, ulong steamId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeCreateFriendsGroupS(IntPtr thisptr, string pchGroupName);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeDeleteFriendsGroupI(IntPtr thisptr, short iGroupId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeRenameFriendsGroupSi(IntPtr thisptr, string pchNewGroupName, short iGroupId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeAddFriendToGroupCi(IntPtr thisptr, ulong steamId, short iGroupId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeRemoveFriendFromGroupCi(IntPtr thisptr, ulong steamId, short iGroupId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsFriendMemberOfFriendsGroupCi(IntPtr thisptr, ulong steamId, short iGroupId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate short NativeGetFriendsGroupCount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate short NativeGetFriendsGroupIdByIndexI(IntPtr thisptr, short iGroupIndex);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetFriendsGroupNameI(IntPtr thisptr, short iGroupId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate short NativeGetFriendsGroupMembershipCountI(IntPtr thisptr, short iGroupId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetFirstFriendsGroupMemberI(IntPtr thisptr, ref ulong retarg, short iGroupId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetNextFriendsGroupMemberI(IntPtr thisptr, ref ulong retarg, short iGroupId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate short NativeGetGroupFriendsMembershipCountC(IntPtr thisptr, ulong steamId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate short NativeGetFirstGroupFriendsMemberC(IntPtr thisptr, ulong steamId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate short NativeGetNextGroupFriendsMemberC(IntPtr thisptr, ulong steamId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetPlayerNicknameC(IntPtr thisptr, ulong playerSteamId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetPlayerNicknameCs(IntPtr thisptr, ulong playerSteamId, string cszNickname);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetFriendsSteamLevelC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetChatMessagesCountC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetChatMessageCibiecu(
            IntPtr thisptr, ulong steamIdFriend, int iChatId, byte[] pvData, int cubData,
            ref EChatEntryType peChatEntryType, ref ulong pSteamIdChatter, ref uint puTime);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSendMsgToFriendCebi(
            IntPtr thisptr, ulong steamIdFriend, EChatEntryType eChatEntryType, byte[] pvMsgBody, int cubMsgBody);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeClearChatHistoryC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetKnownClanCount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetKnownClanByIndexI(IntPtr thisptr, ref ulong retarg, int iClan);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetClanCount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetClanByIndexI(IntPtr thisptr, ref ulong retarg, int iClan);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetClanNameC(IntPtr thisptr, ulong steamIdClan);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetClanTagC(IntPtr thisptr, ulong steamIdClan);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetFriendActivityCountsIib(
            IntPtr thisptr, ref int pnOnline, ref int pnInGame, [MarshalAs(UnmanagedType.I1)] bool bExcludeTaggedFriends
            );

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetClanActivityCountsCiii(
            IntPtr thisptr, ulong steamId, ref int pnOnline, ref int pnInGame, ref int pnChatting);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeDownloadClanActivityCountsCi(IntPtr thisptr, ref ulong groupIDs, int nIds);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetFriendsGroupActivityCountsIii(
            IntPtr thisptr, short iGroupId, ref int pnOnline, ref int pnInGame);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsClanPublicC(IntPtr thisptr, ulong steamId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsClanLargeC(IntPtr thisptr, ulong steamId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSubscribeToPersonaStateFeedCb(
            IntPtr thisptr, ulong steamId, [MarshalAs(UnmanagedType.I1)] bool bSubscribed);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeJoinClanChatRoomC(IntPtr thisptr, ulong groupId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeLeaveClanChatRoomC(IntPtr thisptr, ulong groupId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetClanChatMemberCountC(IntPtr thisptr, ulong groupId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetChatMemberByIndexCi(IntPtr thisptr, ref ulong retarg, ulong groupId, int iIndex);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSendClanChatMessageCs(IntPtr thisptr, ulong groupId, string cszMessage);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetClanChatMessageCibiec(
            IntPtr thisptr, ulong groupId, int iChatId, byte[] pvData, int cubData, ref EChatEntryType peChatEntryType,
            ref ulong pSteamIdChatter);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsClanChatAdminCc(IntPtr thisptr, ulong groupId, ulong userId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsClanChatWindowOpenInSteamC(IntPtr thisptr, ulong groupId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeOpenClanChatWindowInSteamC(IntPtr thisptr, ulong groupId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeCloseClanChatWindowInSteamC(IntPtr thisptr, ulong groupId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetListenForFriendsMessagesB(
            IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bListen);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeReplyToFriendMessageCs(IntPtr thisptr, ulong friendId, string cszMessage);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetFriendMessageCibie(
            IntPtr thisptr, ulong friendId, int iChatId, byte[] pvData, int cubData, ref EChatEntryType peChatEntryType);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeInviteFriendToClanCc(IntPtr thisptr, ulong steamIDfriend, ulong steamIDclan);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeAcknowledgeInviteToClanCb(
            IntPtr thisptr, ulong steamId, [MarshalAs(UnmanagedType.I1)] bool bAcceptOrDenyClanInvite);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetFriendCountFromSourceC(IntPtr thisptr, ulong steamIdSource);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetFriendFromSourceByIndexCi(
            IntPtr thisptr, ref ulong retarg, ulong steamIdSource, int iFriend);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsUserInSourceCc(IntPtr thisptr, ulong steamIdUser, ulong steamIdSource);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetCoplayFriendCount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetCoplayFriendI(IntPtr thisptr, ref ulong retarg, int iCoplayEvent);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetFriendCoplayTimeC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetFriendCoplayGameC(IntPtr thisptr, ulong steamIdFriend);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetRichPresenceUss(IntPtr thisptr, uint nAppId, string pchKey, string pchValue);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeClearRichPresenceU(IntPtr thisptr, uint nAppId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetFriendRichPresenceUcs(
            IntPtr thisptr, uint nAppId, ulong steamIdFriend, string pchKey);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetFriendRichPresenceKeyCountUc(IntPtr thisptr, uint nAppId, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetFriendRichPresenceKeyByIndexUci(
            IntPtr thisptr, uint nAppId, ulong steamIdFriend, int iIndex);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeRequestFriendRichPresenceUc(IntPtr thisptr, uint nAppId, ulong steamIdFriend);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeJoinChatRoomC(IntPtr thisptr, ulong steamIdChat);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeLeaveChatRoomC(IntPtr thisptr, ulong steamIdChat);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeInviteUserToChatRoomCc(IntPtr thisptr, ulong steamIdChat, ulong steamIdInvitee);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSendChatMsgCebi(
            IntPtr thisptr, ulong steamIdChat, EChatEntryType eChatEntryType, byte[] pvMsgBody, int cubMsgBody);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetChatRoomMessagesCountC(IntPtr thisptr, ulong steamIdChat);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetChatRoomEntryCicbie(
            IntPtr thisptr, ulong steamIdChat, int iChatId, ref ulong steamIDuser, byte[] pvData, int cubData,
            ref EChatEntryType peChatEntryType);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeClearChatRoomHistoryC(IntPtr thisptr, ulong steamId);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSerializeChatRoomDlgCbi(
            IntPtr thisptr, ulong steamIdChat, byte[] pvHistory, int cubHistory);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetSizeOfSerializedChatRoomDlgC(IntPtr thisptr, ulong steamIdChat);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetSerializedChatRoomDlgCbii(
            IntPtr thisptr, ulong steamIdChat, byte[] pvHistory, int cubBuffer, ref int pcubData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeClearSerializedChatRoomDlgC(IntPtr thisptr, ulong steamIdChat);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeKickChatMemberCc(IntPtr thisptr, ulong steamIdChat, ulong steamIdUserToActOn);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBanChatMemberCc(IntPtr thisptr, ulong steamIdChat, ulong steamIdUserToActOn);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeUnBanChatMemberCc(IntPtr thisptr, ulong steamIdChat, ulong steamIdUserToActOn);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetChatRoomTypeCe(IntPtr thisptr, ulong steamIdChat, ELobbyType eLobbyType);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetChatRoomLockStateCb(IntPtr thisptr, ulong steamIdChat, ref bool pbLocked);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetChatRoomPermissionsCu(
            IntPtr thisptr, ulong steamIdChat, ref uint prgfChatRoomPermissions);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetChatRoomModeratedCb(
            IntPtr thisptr, ulong steamIdChat, [MarshalAs(UnmanagedType.I1)] bool bModerated);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBChatRoomModeratedC(IntPtr thisptr, ulong steamIdChat);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeNotifyChatRoomDlgsOfUiChangeCbbbb(
            IntPtr thisptr, ulong steamIdChat, [MarshalAs(UnmanagedType.I1)] bool bShowAvatars,
            [MarshalAs(UnmanagedType.I1)] bool bBeepOnNewMsg, [MarshalAs(UnmanagedType.I1)] bool bShowSteamIDs,
            [MarshalAs(UnmanagedType.I1)] bool bShowTimestampOnNewMsg);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeTerminateChatRoomC(IntPtr thisptr, ulong steamIdChat);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetChatRoomCount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetChatRoomByIndexI(IntPtr thisptr, ref ulong retarg, int iChatRoom);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetChatRoomNameC(IntPtr thisptr, ulong steamIdChat);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBGetChatRoomMemberDetailsCcuu(
            IntPtr thisptr, ulong steamIdChat, ulong steamIdUser, ref uint prgfChatMemberDetails,
            ref uint prgfChatMemberDetailsLocal);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeCreateChatRoomEusecccuuu(
            IntPtr thisptr, EChatRoomType eType, ulong ulGameId, string pchName, ELobbyType eLobbyType,
            ulong steamIdClan, ulong steamIdFriendChat, ulong steamIdInvited, uint rgfChatPermissionOfficer,
            uint rgfChatPermissionMember, uint rgfChatPermissionAll);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeVoiceCallCc(IntPtr thisptr, ulong steamIdLocalPeer, ulong steamIdRemotePeer);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeVoiceHangUpI(IntPtr thisptr, int hVoiceCall);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetVoiceSpeakerVolumeF(IntPtr thisptr, float flVolume);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetVoiceMicrophoneVolumeF(IntPtr thisptr, float flVolume);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetAutoAnswerB(IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bAutoAnswer);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeVoiceAnswerI(IntPtr thisptr, int hVoiceCall);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeVoicePutOnHoldIb(
            IntPtr thisptr, int hVoiceCall, [MarshalAs(UnmanagedType.I1)] bool bLocalHold);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBVoiceIsLocalOnHoldI(IntPtr thisptr, int hVoiceCall);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBVoiceIsRemoteOnHoldI(IntPtr thisptr, int hVoiceCall);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetDoNotDisturbB(IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bDoNotDisturb);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeEnableVoiceNotificationSoundsB(
            IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bEnable);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetPushToTalkEnabledB(IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bEnable);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsPushToTalkEnabled(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetPushToTalkKeyI(IntPtr thisptr, int nVirtualKey);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetPushToTalkKey(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsPushToTalkKeyDown(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeEnableVoiceCalibrationB(IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bState);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsVoiceCalibrating(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate float NativeGetVoiceCalibrationSamplePeak(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetMicBoostB(IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bBoost);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetMicBoost(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeHasHardwareMicBoost(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetMicDeviceName(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeStartTalkingI(IntPtr thisptr, int hVoiceCall);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeEndTalkingI(IntPtr thisptr, int hVoiceCall);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeVoiceIsValidI(IntPtr thisptr, int hVoiceCall);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetAutoReflectVoiceB(IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bState);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ECallState NativeGetCallStateI(IntPtr thisptr, int hVoiceCall);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate float NativeGetVoiceMicrophoneVolume(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate float NativeGetVoiceSpeakerVolume(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate float NativeTimeSinceLastVoiceDataReceivedI(IntPtr thisptr, int hVoiceCall);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate float NativeTimeSinceLastVoiceDataSendI(IntPtr thisptr, int hVoiceCall);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBCanSendI(IntPtr thisptr, int hVoiceCall);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBCanReceiveI(IntPtr thisptr, int hVoiceCall);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate float NativeGetEstimatedBitsPerSecondIb(
            IntPtr thisptr, int hVoiceCall, [MarshalAs(UnmanagedType.I1)] bool bIncoming);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate float NativeGetPeakSampleIb(
            IntPtr thisptr, int hVoiceCall, [MarshalAs(UnmanagedType.I1)] bool bIncoming);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSendResumeRequestI(IntPtr thisptr, int hVoiceCall);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeOpenChatDialogC(IntPtr thisptr, ulong steamId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeStartChatRoomVoiceSpeakingCc(IntPtr thisptr, ulong steamIdChat, ulong steamIdMember);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeEndChatRoomVoiceSpeakingCc(IntPtr thisptr, ulong steamIdChat, ulong steamIdMember);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetFriendLastLogonTimeC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetFriendLastLogoffTimeC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetChatRoomVoiceTotalSlotCountC(IntPtr thisptr, ulong steamIdChat);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetChatRoomVoiceUsedSlotCountC(IntPtr thisptr, ulong steamIdChat);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetChatRoomVoiceUsedSlotCi(
            IntPtr thisptr, ref ulong retarg, ulong steamIdChat, int iSlot);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EChatRoomVoiceStatus NativeGetChatRoomVoiceStatusCc(
            IntPtr thisptr, ulong steamIdChat, ulong steamIdSpeaker);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBChatRoomHasAvailableVoiceSlotsC(IntPtr thisptr, ulong steamIdChat);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeBIsChatRoomVoiceSpeakingCc(IntPtr thisptr, ulong steamIdChat, ulong steamIdSpeaker);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate float NativeGetChatRoomPeakSampleCcb(
            IntPtr thisptr, ulong steamIdChat, ulong steamIdSpeaker, [MarshalAs(UnmanagedType.I1)] bool bIncoming);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeChatRoomVoiceRetryConnectionsC(IntPtr thisptr, ulong steamIdChat);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetPortTypesU(IntPtr thisptr, uint unFlags);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeReinitAudio(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetInGameVoiceSpeakingCb(
            IntPtr thisptr, ulong steamIdUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIsInGameVoiceSpeaking(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeActivateGameOverlayS(IntPtr thisptr, string pchDialog);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeActivateGameOverlayToUserSc(IntPtr thisptr, string pchDialog, ulong steamId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeActivateGameOverlayToWebPageS(IntPtr thisptr, string pchUrl);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeActivateGameOverlayToStoreUe(IntPtr thisptr, uint nAppId, EOverlayToStoreFlag eFlag);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeActivateGameOverlayInviteDialogC(IntPtr thisptr, ulong steamIdLobby);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeNotifyGameOverlayStateChangedB(
            IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bActive);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeNotifyGameServerChangeRequestedSs(
            IntPtr thisptr, string pchServerAddress, string pchPassword);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeNotifyLobbyJoinRequestedUcc(
            IntPtr thisptr, uint nAppId, ulong steamIdLobby, ulong steamIdFriend);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeNotifyRichPresenceJoinRequestedUcs(
            IntPtr thisptr, uint nAppId, ulong steamIdFriend, string pchConnectString);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EClanRelationship NativeGetClanRelationshipC(IntPtr thisptr, ulong steamIDclan);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EClanRank NativeGetFriendClanRankCc(IntPtr thisptr, ulong steamIdUser, ulong steamIdClan);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeVoiceIsAvailable(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeTestVoiceDisconnectI(IntPtr thisptr, int hVoiceCall);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeTestChatRoomPeerDisconnectCc(IntPtr thisptr, ulong steamIdChat, ulong steamIdSpeaker
            );

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeTestVoicePacketLossF(IntPtr thisptr, float flFractionOfIncomingPacketsToDrop);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeFindFriendVoiceChatHandleC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeRequestFriendsWhoPlayGameC(IntPtr thisptr, ulong gameId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetCountFriendsWhoPlayGameC(IntPtr thisptr, ulong gameId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetFriendWhoPlaysGameUc(IntPtr thisptr, ref ulong retarg, uint iIndex, ulong gameId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeSetPlayedWithC(IntPtr thisptr, ulong steamIdUserPlayedWith);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeRequestClanOfficerListC(IntPtr thisptr, ulong steamIdClan);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetClanOwnerC(IntPtr thisptr, ref ulong retarg, ulong steamIdClan);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetClanOfficerCountC(IntPtr thisptr, ulong steamIdClan);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeGetClanOfficerByIndexCi(
            IntPtr thisptr, ref ulong retarg, ulong steamIdClan, int iOfficer);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate EUserRestriction NativeGetUserRestrictions(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeRequestFriendProfileInfoC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetFriendProfileInfoCs(IntPtr thisptr, ulong steamIdFriend, string pchKey);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeInviteUserToGameCs(IntPtr thisptr, ulong steamIdFriend, string pchConnectString);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetOnlineConsoleFriendCount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeRequestTradeC(IntPtr thisptr, ulong steamIdPartner);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeTradeResponseUb(
            IntPtr thisptr, uint unTradeRequestId, [MarshalAs(UnmanagedType.I1)] bool bAccept);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeCancelTradeRequestC(IntPtr thisptr, ulong steamIdPartner);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeHideFriendCb(
            IntPtr thisptr, ulong steamIdFriend, [MarshalAs(UnmanagedType.I1)] bool bHide);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetFriendFacebookNameC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeGetFriendFacebookIdc(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeGetFollowerCountC(IntPtr thisptr, ulong steamId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeIsFollowingC(IntPtr thisptr, ulong steamId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeEnumerateFollowingListU(IntPtr thisptr, uint uStartIndex);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeRequestFriendMessageHistoryC(IntPtr thisptr, ulong steamIdFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeRequestFriendMessageHistoryForOfflineMessages(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetCountFriendsWithOfflineMessages(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetFriendWithOfflineMessageI(IntPtr thisptr, int iFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeClearFriendHasOfflineMessageU(IntPtr thisptr, uint uFriend);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate void NativeRequestEmoticonList(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetEmoticonCount(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetEmoticonNameI(IntPtr thisptr, int iEmoticon);
    };
}