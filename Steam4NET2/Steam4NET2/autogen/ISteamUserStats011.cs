// This file is automatically generated.

using System;
using System.Runtime.InteropServices;
using System.Text;

namespace Steam4Net
{
    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    public class SteamUserStats011VTable
    {
        public IntPtr RequestCurrentStats0;
        public IntPtr GetStat1;
        public IntPtr GetStat2;
        public IntPtr SetStat3;
        public IntPtr SetStat4;
        public IntPtr UpdateAvgRateStat5;
        public IntPtr GetAchievement6;
        public IntPtr SetAchievement7;
        public IntPtr ClearAchievement8;
        public IntPtr GetAchievementAndUnlockTime9;
        public IntPtr StoreStats10;
        public IntPtr GetAchievementIcon11;
        public IntPtr GetAchievementDisplayAttribute12;
        public IntPtr IndicateAchievementProgress13;
        public IntPtr GetNumAchievements14;
        public IntPtr GetAchievementName15;
        public IntPtr RequestUserStats16;
        public IntPtr GetUserStat17;
        public IntPtr GetUserStat18;
        public IntPtr GetUserAchievement19;
        public IntPtr GetUserAchievementAndUnlockTime20;
        public IntPtr ResetAllStats21;
        public IntPtr FindOrCreateLeaderboard22;
        public IntPtr FindLeaderboard23;
        public IntPtr GetLeaderboardName24;
        public IntPtr GetLeaderboardEntryCount25;
        public IntPtr GetLeaderboardSortMethod26;
        public IntPtr GetLeaderboardDisplayType27;
        public IntPtr DownloadLeaderboardEntries28;
        public IntPtr DownloadLeaderboardEntriesForUsers29;
        public IntPtr GetDownloadedLeaderboardEntry30;
        public IntPtr UploadLeaderboardScore31;
        public IntPtr AttachLeaderboardUGC32;
        public IntPtr GetNumberOfCurrentPlayers33;
        public IntPtr RequestGlobalAchievementPercentages34;
        public IntPtr GetMostAchievedAchievementInfo35;
        public IntPtr GetNextMostAchievedAchievementInfo36;
        public IntPtr GetAchievementAchievedPercent37;
        public IntPtr RequestGlobalStats38;
        public IntPtr GetGlobalStat39;
        public IntPtr GetGlobalStat40;
        public IntPtr GetGlobalStatHistory41;
        public IntPtr GetGlobalStatHistory42;
        private IntPtr DTorISteamUserStats01143;
    };

    [InteropHelp.InterfaceVersionAttribute("STEAMUSERSTATS_INTERFACE_VERSION011")]
    public class SteamUserStats011 : InteropHelp.NativeWrapper<SteamUserStats011VTable>
    {
        public bool RequestCurrentStats()
        {
            return GetFunction<NativeRequestCurrentStats>(Functions.RequestCurrentStats0)(ObjectAddress);
        }

        public bool GetStat(string pchName, ref float pData)
        {
            return GetFunction<NativeGetStatSf>(Functions.GetStat1)(ObjectAddress, pchName, ref pData);
        }

        public bool GetStat(string pchName, ref int pData)
        {
            return GetFunction<NativeGetStatSi>(Functions.GetStat2)(ObjectAddress, pchName, ref pData);
        }

        public bool SetStat(string pchName, float fData)
        {
            return GetFunction<NativeSetStatSf>(Functions.SetStat3)(ObjectAddress, pchName, fData);
        }

        public bool SetStat(string pchName, int nData)
        {
            return GetFunction<NativeSetStatSi>(Functions.SetStat4)(ObjectAddress, pchName, nData);
        }

        public bool UpdateAvgRateStat(string pchName, float flCountThisSession, double dSessionLength)
        {
            return GetFunction<NativeUpdateAvgRateStatSfd>(Functions.UpdateAvgRateStat5)(ObjectAddress, pchName,
                flCountThisSession, dSessionLength);
        }

        public bool GetAchievement(string pchName, ref bool pbAchieved)
        {
            return GetFunction<NativeGetAchievementSb>(Functions.GetAchievement6)(ObjectAddress, pchName, ref pbAchieved);
        }

        public bool SetAchievement(string pchName)
        {
            return GetFunction<NativeSetAchievementS>(Functions.SetAchievement7)(ObjectAddress, pchName);
        }

        public bool ClearAchievement(string pchName)
        {
            return GetFunction<NativeClearAchievementS>(Functions.ClearAchievement8)(ObjectAddress, pchName);
        }

        public bool GetAchievementAndUnlockTime(string pchName, ref bool pbAchieved, ref uint punUnlockTime)
        {
            return
                GetFunction<NativeGetAchievementAndUnlockTimeSbu>(Functions.GetAchievementAndUnlockTime9)(
                    ObjectAddress, pchName, ref pbAchieved, ref punUnlockTime);
        }

        public bool StoreStats()
        {
            return GetFunction<NativeStoreStats>(Functions.StoreStats10)(ObjectAddress);
        }

        public int GetAchievementIcon(string pchName)
        {
            return GetFunction<NativeGetAchievementIconS>(Functions.GetAchievementIcon11)(ObjectAddress, pchName);
        }

        public string GetAchievementDisplayAttribute(string pchName, string pchKey)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetAchievementDisplayAttributeSs>(Functions.GetAchievementDisplayAttribute12)(
                            ObjectAddress, pchName, pchKey)));
        }

        public bool IndicateAchievementProgress(string pchName, uint nCurProgress, uint nMaxProgress)
        {
            return
                GetFunction<NativeIndicateAchievementProgressSuu>(Functions.IndicateAchievementProgress13)(
                    ObjectAddress, pchName, nCurProgress, nMaxProgress);
        }

        public uint GetNumAchievements(CGameId nGameId)
        {
            return GetFunction<NativeGetNumAchievementsC>(Functions.GetNumAchievements14)(ObjectAddress,
                nGameId.ConvertToUint64());
        }

        public string GetAchievementName(uint iAchievement)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetAchievementNameU>(Functions.GetAchievementName15)(ObjectAddress,
                            iAchievement)));
        }

        public ulong RequestUserStats(CSteamId steamIdUser)
        {
            return GetFunction<NativeRequestUserStatsC>(Functions.RequestUserStats16)(ObjectAddress,
                steamIdUser.ConvertToUint64());
        }

        public bool GetUserStat(CSteamId steamIdUser, string pchName, ref float pData)
        {
            return GetFunction<NativeGetUserStatCsf>(Functions.GetUserStat17)(ObjectAddress,
                steamIdUser.ConvertToUint64(), pchName, ref pData);
        }

        public bool GetUserStat(CSteamId steamIdUser, string pchName, ref int pData)
        {
            return GetFunction<NativeGetUserStatCsi>(Functions.GetUserStat18)(ObjectAddress,
                steamIdUser.ConvertToUint64(), pchName, ref pData);
        }

        public bool GetUserAchievement(CSteamId steamIdUser, string pchName, ref bool pbAchieved)
        {
            return GetFunction<NativeGetUserAchievementCsb>(Functions.GetUserAchievement19)(ObjectAddress,
                steamIdUser.ConvertToUint64(), pchName, ref pbAchieved);
        }

        public bool GetUserAchievementAndUnlockTime(CSteamId steamIdUser, string pchName, ref bool pbAchieved,
            ref uint punUnlockTime)
        {
            return
                GetFunction<NativeGetUserAchievementAndUnlockTimeCsbu>(Functions.GetUserAchievementAndUnlockTime20)(
                    ObjectAddress, steamIdUser.ConvertToUint64(), pchName, ref pbAchieved, ref punUnlockTime);
        }

        public bool ResetAllStats(bool bAchievementsToo)
        {
            return GetFunction<NativeResetAllStatsB>(Functions.ResetAllStats21)(ObjectAddress, bAchievementsToo);
        }

        public ulong FindOrCreateLeaderboard(string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod,
            ELeaderboardDisplayType eLeaderboardDisplayType)
        {
            return GetFunction<NativeFindOrCreateLeaderboardSee>(Functions.FindOrCreateLeaderboard22)(ObjectAddress,
                pchLeaderboardName, eLeaderboardSortMethod, eLeaderboardDisplayType);
        }

        public ulong FindLeaderboard(string pchLeaderboardName)
        {
            return GetFunction<NativeFindLeaderboardS>(Functions.FindLeaderboard23)(ObjectAddress, pchLeaderboardName);
        }

        public string GetLeaderboardName(ulong hSteamLeaderboard)
        {
            return
                InteropHelp.DecodeAnsiReturn(
                    Marshal.PtrToStringAnsi(
                        GetFunction<NativeGetLeaderboardNameU>(Functions.GetLeaderboardName24)(ObjectAddress,
                            hSteamLeaderboard)));
        }

        public int GetLeaderboardEntryCount(ulong hSteamLeaderboard)
        {
            return GetFunction<NativeGetLeaderboardEntryCountU>(Functions.GetLeaderboardEntryCount25)(ObjectAddress,
                hSteamLeaderboard);
        }

        public ELeaderboardSortMethod GetLeaderboardSortMethod(ulong hSteamLeaderboard)
        {
            return GetFunction<NativeGetLeaderboardSortMethodU>(Functions.GetLeaderboardSortMethod26)(ObjectAddress,
                hSteamLeaderboard);
        }

        public ELeaderboardDisplayType GetLeaderboardDisplayType(ulong hSteamLeaderboard)
        {
            return GetFunction<NativeGetLeaderboardDisplayTypeU>(Functions.GetLeaderboardDisplayType27)(ObjectAddress,
                hSteamLeaderboard);
        }

        public ulong DownloadLeaderboardEntries(ulong hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest,
            int nRangeStart, int nRangeEnd)
        {
            return
                GetFunction<NativeDownloadLeaderboardEntriesUeii>(Functions.DownloadLeaderboardEntries28)(
                    ObjectAddress, hSteamLeaderboard, eLeaderboardDataRequest, nRangeStart, nRangeEnd);
        }

        public ulong DownloadLeaderboardEntriesForUsers(ulong hSteamLeaderboard, ref CSteamId prgUsers, int cUsers)
        {
            ulong s0 = 0;
            var result =
                GetFunction<NativeDownloadLeaderboardEntriesForUsersUci>(Functions.DownloadLeaderboardEntriesForUsers29)
                    (ObjectAddress, hSteamLeaderboard, ref s0, cUsers);
            prgUsers = new CSteamId(s0);
            return result;
        }

        public bool GetDownloadedLeaderboardEntry(ulong hSteamLeaderboardEntries, int index,
            ref LeaderboardEntry002T pLeaderboardEntry, ref int pDetails, int cDetailsMax)
        {
            return
                GetFunction<NativeGetDownloadedLeaderboardEntryUilii>(Functions.GetDownloadedLeaderboardEntry30)(
                    ObjectAddress, hSteamLeaderboardEntries, index, ref pLeaderboardEntry, ref pDetails, cDetailsMax);
        }

        public ulong UploadLeaderboardScore(ulong hSteamLeaderboard,
            ELeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod, int nScore, ref int pScoreDetails,
            int cScoreDetailsCount)
        {
            return GetFunction<NativeUploadLeaderboardScoreUeiii>(Functions.UploadLeaderboardScore31)(ObjectAddress,
                hSteamLeaderboard, eLeaderboardUploadScoreMethod, nScore, ref pScoreDetails, cScoreDetailsCount);
        }

        public ulong AttachLeaderboardUgc(ulong hSteamLeaderboard, ulong hUgc)
        {
            return GetFunction<NativeAttachLeaderboardUgcuu>(Functions.AttachLeaderboardUGC32)(ObjectAddress,
                hSteamLeaderboard, hUgc);
        }

        public ulong GetNumberOfCurrentPlayers()
        {
            return GetFunction<NativeGetNumberOfCurrentPlayers>(Functions.GetNumberOfCurrentPlayers33)(ObjectAddress);
        }

        public ulong RequestGlobalAchievementPercentages()
        {
            return
                GetFunction<NativeRequestGlobalAchievementPercentages>(Functions.RequestGlobalAchievementPercentages34)(
                    ObjectAddress);
        }

        public int GetMostAchievedAchievementInfo(StringBuilder pchName, ref float pflPercent, ref bool pbAchieved)
        {
            return
                GetFunction<NativeGetMostAchievedAchievementInfoSufb>(Functions.GetMostAchievedAchievementInfo35)(
                    ObjectAddress, pchName, (uint)pchName.Capacity, ref pflPercent, ref pbAchieved);
        }

        public int GetNextMostAchievedAchievementInfo(int iIteratorPrevious, StringBuilder pchName, ref float pflPercent,
            ref bool pbAchieved)
        {
            return
                GetFunction<NativeGetNextMostAchievedAchievementInfoIsufb>(
                    Functions.GetNextMostAchievedAchievementInfo36)(ObjectAddress, iIteratorPrevious, pchName,
                        (uint)pchName.Capacity, ref pflPercent, ref pbAchieved);
        }

        public bool GetAchievementAchievedPercent(string pchName, ref float pflPercent)
        {
            return
                GetFunction<NativeGetAchievementAchievedPercentSf>(Functions.GetAchievementAchievedPercent37)(
                    ObjectAddress, pchName, ref pflPercent);
        }

        public ulong RequestGlobalStats(int nHistoryDays)
        {
            return GetFunction<NativeRequestGlobalStatsI>(Functions.RequestGlobalStats38)(ObjectAddress, nHistoryDays);
        }

        public bool GetGlobalStat(string pchStatName, ref double pData)
        {
            return GetFunction<NativeGetGlobalStatSd>(Functions.GetGlobalStat39)(ObjectAddress, pchStatName, ref pData);
        }

        public bool GetGlobalStat(string pchStatName, ref long pData)
        {
            return GetFunction<NativeGetGlobalStatSi>(Functions.GetGlobalStat40)(ObjectAddress, pchStatName, ref pData);
        }

        public int GetGlobalStatHistory(string pchStatName, ref double pData, uint cubData)
        {
            return GetFunction<NativeGetGlobalStatHistorySdu>(Functions.GetGlobalStatHistory41)(ObjectAddress,
                pchStatName, ref pData, cubData);
        }

        public int GetGlobalStatHistory(string pchStatName, ref long pData, uint cubData)
        {
            return GetFunction<NativeGetGlobalStatHistorySiu>(Functions.GetGlobalStatHistory42)(ObjectAddress,
                pchStatName, ref pData, cubData);
        }

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeRequestCurrentStats(IntPtr thisptr);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetStatSf(IntPtr thisptr, string pchName, ref float pData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetStatSi(IntPtr thisptr, string pchName, ref int pData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetStatSf(IntPtr thisptr, string pchName, float fData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetStatSi(IntPtr thisptr, string pchName, int nData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeUpdateAvgRateStatSfd(
            IntPtr thisptr, string pchName, float flCountThisSession, double dSessionLength);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetAchievementSb(IntPtr thisptr, string pchName, ref bool pbAchieved);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeSetAchievementS(IntPtr thisptr, string pchName);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeClearAchievementS(IntPtr thisptr, string pchName);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetAchievementAndUnlockTimeSbu(
            IntPtr thisptr, string pchName, ref bool pbAchieved, ref uint punUnlockTime);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeStoreStats(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetAchievementIconS(IntPtr thisptr, string pchName);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetAchievementDisplayAttributeSs(IntPtr thisptr, string pchName, string pchKey);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeIndicateAchievementProgressSuu(
            IntPtr thisptr, string pchName, uint nCurProgress, uint nMaxProgress);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate uint NativeGetNumAchievementsC(IntPtr thisptr, ulong nGameId);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetAchievementNameU(IntPtr thisptr, uint iAchievement);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeRequestUserStatsC(IntPtr thisptr, ulong steamIdUser);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetUserStatCsf(IntPtr thisptr, ulong steamIdUser, string pchName, ref float pData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetUserStatCsi(IntPtr thisptr, ulong steamIdUser, string pchName, ref int pData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetUserAchievementCsb(
            IntPtr thisptr, ulong steamIdUser, string pchName, ref bool pbAchieved);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetUserAchievementAndUnlockTimeCsbu(
            IntPtr thisptr, ulong steamIdUser, string pchName, ref bool pbAchieved, ref uint punUnlockTime);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeResetAllStatsB(IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bAchievementsToo);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeFindOrCreateLeaderboardSee(
            IntPtr thisptr, string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod,
            ELeaderboardDisplayType eLeaderboardDisplayType);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeFindLeaderboardS(IntPtr thisptr, string pchLeaderboardName);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate IntPtr NativeGetLeaderboardNameU(IntPtr thisptr, ulong hSteamLeaderboard);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetLeaderboardEntryCountU(IntPtr thisptr, ulong hSteamLeaderboard);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ELeaderboardSortMethod NativeGetLeaderboardSortMethodU(IntPtr thisptr, ulong hSteamLeaderboard);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ELeaderboardDisplayType NativeGetLeaderboardDisplayTypeU(
            IntPtr thisptr, ulong hSteamLeaderboard);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeDownloadLeaderboardEntriesUeii(
            IntPtr thisptr, ulong hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, int nRangeStart,
            int nRangeEnd);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeDownloadLeaderboardEntriesForUsersUci(
            IntPtr thisptr, ulong hSteamLeaderboard, ref ulong prgUsers, int cUsers);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetDownloadedLeaderboardEntryUilii(
            IntPtr thisptr, ulong hSteamLeaderboardEntries, int index, ref LeaderboardEntry002T pLeaderboardEntry,
            ref int pDetails, int cDetailsMax);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeUploadLeaderboardScoreUeiii(
            IntPtr thisptr, ulong hSteamLeaderboard, ELeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod,
            int nScore, ref int pScoreDetails, int cScoreDetailsCount);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeAttachLeaderboardUgcuu(IntPtr thisptr, ulong hSteamLeaderboard, ulong hUgc);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeGetNumberOfCurrentPlayers(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeRequestGlobalAchievementPercentages(IntPtr thisptr);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetMostAchievedAchievementInfoSufb(
            IntPtr thisptr, StringBuilder pchName, uint unNameBufLen, ref float pflPercent, ref bool pbAchieved);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetNextMostAchievedAchievementInfoIsufb(
            IntPtr thisptr, int iIteratorPrevious, StringBuilder pchName, uint unNameBufLen, ref float pflPercent,
            ref bool pbAchieved);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetAchievementAchievedPercentSf(IntPtr thisptr, string pchName, ref float pflPercent
            );

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate ulong NativeRequestGlobalStatsI(IntPtr thisptr, int nHistoryDays);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetGlobalStatSd(IntPtr thisptr, string pchStatName, ref double pData);

        [return: MarshalAs(UnmanagedType.I1)]
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate bool NativeGetGlobalStatSi(IntPtr thisptr, string pchStatName, ref long pData);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetGlobalStatHistorySdu(
            IntPtr thisptr, string pchStatName, ref double pData, uint cubData);

        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        private delegate int NativeGetGlobalStatHistorySiu(
            IntPtr thisptr, string pchStatName, ref long pData, uint cubData);
    };
}